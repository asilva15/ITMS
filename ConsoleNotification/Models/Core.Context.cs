//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleNotification.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CoreEntities : DbContext
    {
        public CoreEntities()
            : base("name=CoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACCOUNT_PARAMETER> ACCOUNT_PARAMETER { get; set; }
        public virtual DbSet<ACCOUNT_QUEUE> ACCOUNT_QUEUE { get; set; }
        public virtual DbSet<CATEGORY> CATEGORies { get; set; }
        public virtual DbSet<PRIORITY> PRIORITies { get; set; }
        public virtual DbSet<STATUS> STATUS { get; set; }
        public virtual DbSet<TYPE_DOCUMENT_SALE> TYPE_DOCUMENT_SALE { get; set; }
        public virtual DbSet<DOCUMENT_CONTROL_TYPE> DOCUMENT_CONTROL_TYPE { get; set; }
        public virtual DbSet<DOCUMENT_CONTROL_RECEIVER> DOCUMENT_CONTROL_RECEIVER { get; set; }
        public virtual DbSet<LOCATION> LOCATIONs { get; set; }
        public virtual DbSet<TYPE_DELI_SUST> TYPE_DELI_SUST { get; set; }
        public virtual DbSet<DELIVERY_SUSTAIN> DELIVERY_SUSTAIN { get; set; }
        public virtual DbSet<STATUS_REQUEST_EXPENSE> STATUS_REQUEST_EXPENSE { get; set; }
        public virtual DbSet<DETAILS_TICKET> DETAILS_TICKET { get; set; }
        public virtual DbSet<DOCUMENT_CONTROL> DOCUMENT_CONTROL { get; set; }
        public virtual DbSet<TICKET_NOTIFICATION> TICKET_NOTIFICATION { get; set; }
        public virtual DbSet<SITE> SITEs { get; set; }
        public virtual DbSet<REQUEST_EXPENSE_ACTIVITY> REQUEST_EXPENSE_ACTIVITY { get; set; }
        public virtual DbSet<DOCUMENT_SALE> DOCUMENT_SALE { get; set; }
        public virtual DbSet<DETAIL_DOCUMENT_SALE> DETAIL_DOCUMENT_SALE { get; set; }
        public virtual DbSet<CHANGE_APPROVED> CHANGE_APPROVED { get; set; }
        public virtual DbSet<CHANGE_REQUEST> CHANGE_REQUEST { get; set; }
        public virtual DbSet<CHANGE_TYPE_REQUEST> CHANGE_TYPE_REQUEST { get; set; }
        public virtual DbSet<CHANGE_TYPE_TASK> CHANGE_TYPE_TASK { get; set; }
        public virtual DbSet<CambioNotificacion> CambioNotificacions { get; set; }
        public virtual DbSet<TipoNotificacion> TipoNotificacions { get; set; }
        public virtual DbSet<CHANGE_DETAIL> CHANGE_DETAIL { get; set; }
        public virtual DbSet<ATTACHED> ATTACHEDs { get; set; }
        public virtual DbSet<EncuestaPortalUsuario> EncuestaPortalUsuarios { get; set; }
        public virtual DbSet<SLADetalle> SLADetalle { get; set; }
        public virtual DbSet<TICKET> TICKETs { get; set; }
        public virtual DbSet<SLA> SLA { get; set; }
        public virtual DbSet<REQUEST_EXPENSE> REQUEST_EXPENSE { get; set; }
    
        public virtual ObjectResult<ComGenerarTicketProblemas_Result> ComGenerarTicketProblemas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComGenerarTicketProblemas_Result>("ComGenerarTicketProblemas");
        }
    
        public virtual ObjectResult<GestionCambioListadoFecha_Result> GestionCambioListadoFecha()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GestionCambioListadoFecha_Result>("GestionCambioListadoFecha");
        }
    
        public virtual ObjectResult<TicketActivoEntrega_Result> TicketActivoEntrega()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TicketActivoEntrega_Result>("TicketActivoEntrega");
        }
    
        public virtual ObjectResult<ObtenerColaSAP_Result> ObtenerColaSAP(Nullable<int> idDetaTick)
        {
            var idDetaTickParameter = idDetaTick.HasValue ?
                new ObjectParameter("IdDetaTick", idDetaTick) :
                new ObjectParameter("IdDetaTick", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerColaSAP_Result>("ObtenerColaSAP", idDetaTickParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> VerificarTicketModificado(Nullable<int> iD_TICK, Nullable<int> iD_DETA_TICK)
        {
            var iD_TICKParameter = iD_TICK.HasValue ?
                new ObjectParameter("ID_TICK", iD_TICK) :
                new ObjectParameter("ID_TICK", typeof(int));
    
            var iD_DETA_TICKParameter = iD_DETA_TICK.HasValue ?
                new ObjectParameter("ID_DETA_TICK", iD_DETA_TICK) :
                new ObjectParameter("ID_DETA_TICK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VerificarTicketModificado", iD_TICKParameter, iD_DETA_TICKParameter);
        }
    
        public virtual ObjectResult<ObtenerTicketParaNotificacion_Result> ObtenerTicketParaNotificacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerTicketParaNotificacion_Result>("ObtenerTicketParaNotificacion");
        }
    
        public virtual ObjectResult<ObtenerTiempoTranscurridoTicket_Result> ObtenerTiempoTranscurridoTicket(Nullable<int> idTicket)
        {
            var idTicketParameter = idTicket.HasValue ?
                new ObjectParameter("IdTicket", idTicket) :
                new ObjectParameter("IdTicket", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerTiempoTranscurridoTicket_Result>("ObtenerTiempoTranscurridoTicket", idTicketParameter);
        }
    
        public virtual ObjectResult<string> CorreoMinsurxCuenta(Nullable<int> idTick)
        {
            var idTickParameter = idTick.HasValue ?
                new ObjectParameter("idTick", idTick) :
                new ObjectParameter("idTick", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CorreoMinsurxCuenta", idTickParameter);
        }
    
        public virtual ObjectResult<MontoRecepcion_Result> MontoRecepcion(Nullable<int> iD_REQU_EXPE)
        {
            var iD_REQU_EXPEParameter = iD_REQU_EXPE.HasValue ?
                new ObjectParameter("ID_REQU_EXPE", iD_REQU_EXPE) :
                new ObjectParameter("ID_REQU_EXPE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MontoRecepcion_Result>("MontoRecepcion", iD_REQU_EXPEParameter);
        }
    }
}
