@model ERPElectrodata.Models.TICKET

@{
    ViewBag.Title = "Create";
    //Layout = null;
}
<style>
    .editCombo {
        position: absolute;
        background-image: url(/Content/Images/Edit.png);
        background-repeat: no-repeat;
        width: 16px;
        height: 16px;
        top: 29px;
        right: 60px;
        cursor: pointer;
        z-index: 999;
    }

    .btn-error {
        color: #fff;
        background-color: #d92550;
        border-color: #d92550;
    }
</style>
<script src="~/Content/themes/plugin/toastr/toastr.min.js"></script>
<link href="~/Content/themes/plugin/toastr/toastr.min.css" rel="stylesheet" />
<link href="~/Content/themes/plugin/iCheck/square/blue.css" rel="stylesheet" />
<script src="~/Content/themes/plugin/iCheck/icheck.js"></script>
<script>
    $(document).ready(function () {
        $('input').iCheck({
            checkboxClass: 'icheckbox_square-blue',
            radioClass: 'iradio_square-blue',
            increaseArea: '20%' // optional
        });
    });
</script>
<div class="row">
    <div class="col-md-8">
        <div class="main-card mb-3 card">
            @using (Html.BeginForm("Create", "Ticket", FormMethod.Post, new { enctype = "multipart/form-data", id = "FrmTicket", target = "upload_target" }))
            {
                <input type="hidden" name="hdnSubCuenta" id="hdnSubCuenta" value="" readonly />
                @Html.ValidationSummary(true)
                <div class="card-header">
                    Nuevo Ticket - @ViewBag.DATE
                </div>
                <div class="card-body">
                    <input type="hidden" name="ID_CIA" id="ID_CIA" value="0" />
                    <input type="hidden" value="@ViewBag.UploadFile" name="KEY_ATTA" id="KEY_ATTA" readonly="readonly" />
                    <input type="hidden" name="ID_CAT_N1" id="ID_CAT_N1" value="0" />
                    <input type="hidden" name="ID_CAT_N2" id="ID_CAT_N2" value="0" />
                    <input type="hidden" name="ID_CAT_N3" id="ID_CAT_N3" value="0" />
                    <input type="hidden" name="ID_CAT" id="ID_CAT" value="0" />
                    <input type="hidden" name="FEC_TICK" id="FEC_TICK" value="@ViewBag.DATE" />
                    <input type="hidden" name="IDCATBNV" id="IDCATBNV" />


                    <fieldset>
                        <div class="form-row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label id="" for="" class="">Título de la Solicitud <span style="color:red">(*)</span></label>
                                    @Html.TextBoxFor(model => model.TITLE_TICK, new { @class = "form-control", @placeholder = "Título de la Solicitud" })
                                    @Html.ValidationMessageFor(model => model.TITLE_TICK)
                                </div>
                            </div>

                        </div>

                        <div class="form-row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    Tipo Ticket <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_TYPE_TICK, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_TYPE_TICK)

                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    Fecha de recepción de Solicitud
                                    @Html.EditorFor(model => model.FechaRecepcionSolicitud, new { @class = "form-control", @placeholder = "Fecha Recepción de Solicitud" })
                                    @Html.ValidationMessageFor(model => model.FechaRecepcionSolicitud)
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    Medio de Comunicación <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_SOUR, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_SOUR)
                                </div>
                            </div>
                            <div class="col-md-4" id="divMotivoSource" hidden>
                                <div class="form-group">
                                    Motivo Regularización <span style="color:red">(*)</span>
                                    @Html.EditorFor(model => model.IdMotivoSource)
                                </div>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @*Unidad de Negocio*@
                                    Macroservicio <span style="color:red">(*)</span>

                                    @Html.Editor("ID_CATE_N1")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @*Macroservicio*@
                                    Categoría 1 <span style="color:red">(*)</span>

                                    @Html.Editor("ID_CATE_N2")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @*Servicio*@
                                    Categoría 2 <span style="color:red">(*)</span>

                                    @Html.Editor("ID_CATE_N3")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @*Incidente/Requerimiento*@
                                    Categoría 3 <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_CATE, new { @class = "form-control", id = "ID_CATE" })
                                    @Html.ValidationMessageFor(model => model.ID_CATE)
                                </div>
                            </div>
                        </div>

                        <div class="form-row">

                            <div class="col-md-4">
                                <div class="form-group">
                                    Área Responsable <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_QUEU, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_QUEU)
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    Asignado a <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_PERS_ENTI_ASSI, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_PERS_ENTI_ASSI)
                                </div>
                            </div>


                            <div class="col-md-4" id="divFecIniTick" hidden>
                                <div class="form-group">
                                    Fecha Programada
                                    @Html.TextBoxFor(model => model.FEC_INI_TICK)
                                    @Html.ValidationMessageFor(model => model.FEC_INI_TICK)
                                </div>
                            </div>


                            <div class="col-md-4">
                                <div class="form-group">
                                    Prioridad <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_PRIO, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_PRIO)
                                </div>
                            </div>




                        </div>
                        <div class="form-row">
                            <div class="col-md-4">
                                <div class="form-group">

                                    <div id="divRequest" class="editor-label">
                                        <span class="">Solicitante</span>
                                    </div>

                                    <div id="divRequestNew" class="editor-label" data-toggle="modal" data-target="#miModal" onclick="NewContact()" style="cursor:pointer; display:none;" title="Register New Contact">
                                        <span class="">Solicitante</span><span style="color:red"> (*)</span>
                                    </div>
                                    @Html.EditorFor(model => model.ID_PERS_ENTI, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_PERS_ENTI)
                                </div>
                                <div id="divEditCombo" style="display:none;" class="editCombo" data-toggle="modal" data-target="#miModal" onclick="EditContact()" title="Editar persona"></div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    Unidad Minera<span style="color:red">(*)</span>
                                    @Html.EditorFor(model => model.ID_COMP, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_COMP)
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    Usuario Afectado<span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_PERS_ENTI_END, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_PERS_ENTI_END)
                                </div>
                            </div>
                        </div>


                        <div class="form-row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    VIP <span style="color:red">(*)</span>
                                    @Html.TextBoxFor(model => model.UsuarioVIP)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    Estado <span style="color:red">(*)</span>
                                    @Html.TextBoxFor(model => model.ID_STAT)
                                    @Html.ValidationMessageFor(model => model.ID_STAT)
                                </div>
                            </div>

                            <div class="col-md-3">
                                @{
                                    if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 60)
                                    {

                                        <div class="form-group" id="divRazon">
                                            Razón
                                            @Html.Editor("IdRazon")
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            Ticket Externo
                                            @{
                                                if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 1)
                                                {
                                                    @Html.TextBoxFor(model => model.TicketExterno, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.TicketExterno)
                                                }
                                            }
                                        </div>
                                    }
                                }

                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    SLA <span style="color:red">(*)</span>

                                    @Html.Editor("IdSLA", new { htmlAttributes = new { @id = "IdSLA" } })
                                </div>
                            </div>
                        </div>





                        <div class="form-row" id="IdGarantiaProveedor">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label id="" for="" class="">Ticket - Garantia Proveedor <span style="color:red">(*)</span></label>
                                    @Html.TextBoxFor(model => model.GarantiaProveedor, new { @class = "form-control", @placeholder = "Ticket - Garantia Proveedor" })
                                    @Html.ValidationMessageFor(model => model.GarantiaProveedor)
                                </div>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    Control Remoto
                                    @Html.CheckBox("REM_CTRL_TICK", false)
                                    @Html.ValidationMessageFor(model => model.REM_CTRL_TICK)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    Es Ticket Padre
                                    @Html.CheckBox("IS_PARENT", false)
                                    @Html.ValidationMessageFor(model => model.IS_PARENT)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    Ticket Padre
                                    @Html.EditorFor(model => model.ID_TICK_PARENT, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_TICK_PARENT)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    TAG
                                    @Html.TextBoxFor(model => model.TAG, new { @class = "form-control" })
                                </div>
                            </div>

                        </div>
                        <div class="form-row">
                            @{
                                if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 60)
                                {
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            Reportado por <span style="color:red">(*)</span>
                                            @*@Html.Editor("IdGrupoReportador")*@
                                            @Html.TextBoxFor(model => model.IdGrupoReportador, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.IdGrupoReportador)
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            Modalidad de Trabajo <span style="color:red">(*)</span>
                                            @*@Html.Editor("IdModTrabajo")*@
                                            @Html.TextBoxFor(model => model.IdModTrabajo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.IdModTrabajo)

                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group" id="divlocacion">
                                            Locación <span style="color:red">(*)</span>
                                            @Html.Editor("ID_LOCA")
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            Positivo - Falso Positivo <span style="color:red">(*)</span>
                                            @Html.TextBoxFor(model => model.FalsoPositivo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.FalsoPositivo)

                                        </div>
                                    </div>

                                }
                            }

                        </div>
                        <div class="form-row" id="AnaTipoPaseLoca" hidden>
                            @{
                                if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 60)
                                {
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            Analista
                                            @Html.Editor("ID_PERS_ENTI_ANLT")
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            Tipo de Pase
                                            @Html.Editor("IdTipoPase")

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group" id="divSolman" hidden>
                                            Solman
                                            @Html.TextBoxFor(model => model.Solman, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Solman)
                                        </div>
                                    </div>
                                    @*<div class="col-md-4">
                        <div class="form-group" id="divlocacion">
                            Locación <span style="color:red">(*)</span>
                            @Html.Editor("ID_LOCA")
                        </div>
                    </div>*@
                                }
                            }

                        </div>

                        <div class="form-row" hidden>
                            @{
                                <div class="col-md-4">
                                    <div class="form-group">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        Grupo
                                        @*<label id="cboGrupo" for="ID_GRUPO" class="">Grupo</label>*@
                                        @Html.Editor("IDGRUPO")
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        Plantilla
                                        @*<label id="cboPlantilla" for="ID_PLAN" class="">Plantilla</label>*@
                                        @Html.Editor("IDPLAN")

                                    </div>
                                </div>

                            }

                        </div>
                        @{
                            if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 3)
                            {
                                <div class="form-row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            Servicio
                                            @Html.CheckBox("SERVICE", false)
                                            @Html.ValidationMessageFor(model => model.SERVICE)
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            Fecha Inicio Real
                                            @Html.TextBoxFor(model => model.FEC_INI_REAL)
                                            @Html.ValidationMessageFor(model => model.FEC_INI_REAL)
                                        </div>
                                    </div>
                                </div>

                            }

                        }
                        <div class="form-row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.TextAreaFor(model => model.SUM_TICK, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SUM_TICK)
                                </div>
                            </div>
                        </div>


                        @{
                            if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 60)
                            {
                                <div class="form-row" id="DivSolucion" hidden>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            Solución
                                            @Html.TextAreaFor(model => model.Solucion, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Solucion)
                                        </div>
                                    </div>
                                </div>
                            }

                        }

                        @*<div class="form-row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextAreaFor(model => model.Adicional1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Adicional1)
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextAreaFor(model => model.Adicional2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Adicional2)
                </div>
            </div>
        </div>*@
                        <div class="form-row">
                            <div class="col-md-3">
                                <div class="form-group">

                                    <button type="button" data-toggle="modal" data-target="#miModal" onclick="AdjuntarNuevoTicket();" id="Adjuntar" class="mb-2 mr-2 btn-pill btn btn-success btn-block"><span>Adjuntar</span></button>

                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>

                <div class="d-block text-right card-footer">
                    @*<button class="mr-2 btn btn-link" id="reset" type="button">Limpiar</button>*@
                    <button class="btn-shadow btn btn-primary" id="submit" type="submit">Guardar</button>
                </div>
                <input type="hidden" name="hdnTkAutomatico" id="hdnTkAutomatico" value="0" />
                <input type="hidden" name="hdnTitulo" id="hdnTitulo" value="0" />
                <input type="hidden" name="hdnFrecuencia" id="hdnFrecuencia" value="1" />
                <input type="hidden" name="hdnDiaSemana" id="hdnDiaSemana" value="" />
                <input type="hidden" name="hdnDiaPersonalizado" id="hdnDiaPersonalizado" value="" />
                <input type="hidden" name="hdnDiaMes" id="hdnDiaMes" value="0" />
                <input type="hidden" name="hdnVigencia" id="hdnVigencia" value="1" />
                <input type="hidden" name="hdnVigenciaInicio" id="hdnVigenciaInicio" value="0" />
                <input type="hidden" name="hdnVigenciaFin" id="hdnVigenciaFin" value="0" />
                <input type="hidden" name="hdnHoraCreacion" id="hdnHoraCreacion" value="0" />
                <input type="hidden" name="hdnUnidadMinera" id="hdnUnidadMinera" value="0" />
            }
        </div>
    </div>
    <div class="col-md-4">
        <div class="main-card mb-3 card">
            <div class="card-header">
                Selector de Plantilla
            </div>
            <div class="card-body">
                <div class="form-row">
                    <div class="col-md-12">
                        <div class="position-relative form-group">
                            <label for="cbGrupoPlantilla">Grupo</label>
                            <input id="cbGrupoPlantilla" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="col-md-12">
                        <div class="position-relative form-group">
                            <label for="cbNombrePlantilla">Plantilla</label>
                            <input id="cbNombrePlantilla" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="main-card mb-3 card">
            <div class="card-header">
                Últimos Tickets Generados
                <div class="col-md-12 col-lg-7 mt-2">
                    <div style="font-weight: normal" class="form-group">
                        @Html.Editor("ID_TYPE_TICKET")
                    </div>
                </div>
            </div>
            <div class="card-body">  
                <div class="form-row">
                    <div class="col-md-12" style="overflow-y:auto; height:360px; width:100%;">
                        <div id="gridUltimosTickets"></div>

                    </div>
                    <div class="col-md-12">
                        <div id="pagerUltimosTickets"></div>

                    </div>
                </div>
            </div>
        </div>
        <div class="main-card mb-3 card">
            <div class="card-header">
                Tickets Automáticos
            </div>
            <div class="card-body">
                <div class="form-row">
                    <div class="col-md-12">
                        <input type="checkbox" name="TicketAuto" id="chkTicketAuto" onclick="ValidarTicketAuto();" /> Ticket Automático
                    </div>
                    <div class="col-md-12" id="divTitulo" hidden>
                        <div class="form-group">
                            Titulo
                            <input class="form-control" type="text" id="txtTituloTicketAuto" name="txtTituloTicketAuto" value="" />
                        </div>
                    </div>
                    <div class="col-md-12" id="divFrecuencia" hidden>
                        <input type="radio" name="Frecuencia" id="rbtFrecuenciaSemanal" checked /> Semanal
                        <input type="radio" name="Frecuencia" id="rbtFrecuenciaMensual" /> Mensual
                    </div>
                    <div class="col-md-12" id="divSemana" hidden>
                        <input type="checkbox" name="" id="chkLunes" /> <label>Lunes</label>
                        <input type="checkbox" name="" id="chkMartes" /> <label>Martes</label>
                        <input type="checkbox" name="" id="chkMiercoles" /> <label>Miercoles</label>
                        <input type="checkbox" name="" id="chkJueves" /> <label>Jueves</label>
                        <input type="checkbox" name="" id="chkViernes" /> <label>Viernes</label>
                        <input type="checkbox" name="" id="chkSabado" /> <label>Sabado</label>
                        <input type="checkbox" name="" id="chkDomingo" /> <label>Domingo</label>
                    </div>
                    <div class="col-md-12" id="divDiaMes" hidden>
                        <div class="form-group">
                            Día del mes
                            <input class="form-control" type="text" id="txtDiaMes" name="txtDiaMes" value="0" />
                        </div>
                    </div>
                    <div class="col-md-12" id="divTiempo" hidden>
                        <input type="radio" name="Tiempo" id="rbtTiempoIndeterminado" checked /> Indeterminado
                        <input type="radio" name="Tiempo" id="rbtFechaVigencia" />Fecha de Vigencia
                    </div>
                    <div class="form-row" id="divFechaVigencia" hidden>
                        <div class="col-md-6">
                            Inicio
                            <input id="FechaInicioVigencia" type="text" name="FechaInicioVigencia" value="" />
                        </div>
                        <div class="col-md-6">
                            Fin
                            <input id="FechaFinVigencia" type="text" name="FechaFinVigencia" value="" />
                        </div>



                    </div>
                    <div class="col-md-12" id="divCreacion" hidden>
                        <div class="form-group">
                            Hora de Creación
                            <input id="HoraCreacion" type="text" name="HoraCreacion" value="" />
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="main-card mb-3 card">
            <div class="card-header">
                Detalles de Ticket
            </div>
            <div class="card-body">
                <div class="form-row">

                    <div class="col-md-12">
                        <div class="form-group">
                            <div id="liveclock"></div>
                            <div id="sla">Nivel de Servicio: </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
        <div class="main-card mb-3 card">
            <div class="card-header">
                Datos Del Usuario
            </div>
            <div class="card-body">
                <div class="form-row">

                    <div class="col-md-12">
                        <div class="form-group">
                            <div id="divDetu">

                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
        <div class="main-card mb-3 card">
            <div class="card-header">
                Activos Asignados Al Usuario
            </div>
            <div class="card-body">
                <div class="form-row">

                    <div class="col-md-12" style="overflow-y:auto; height:360px; width:100%;">

                        <div id="gridAssetByUser"></div>


                    </div>
                    <div class="col-md-12">

                        <div id="pagerAssetByUser"></div>

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<iframe id="upload_target" name="upload_target" src="" class="d-none"></iframe>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

<!--Plantilla de Kendo para generar detalle de Usuario.-->
<script type="text/x-kendo-tmpl" id="templdu">
    @*<div class="du12">
            <div class="duCont">
                <div class="duContdet" style="text-transform:capitalize;margin:0px 5px 3px 5px;color:black;">
                    Fotocheck: ${FOT_CLIE}<br>
                    Usuario: ${NAM_CLIE}<br>
                    <div style="float:left;padding:0px 5px 0px 0px">Tipo de Usuario: </div><div style="color:${COLOR};"> ${USE_TYPE}</div>
                    Cargo: ${JOB_TITL}<br>
                    Area: ${ARE_CLIE}<br>
                    Gestión: ${MANA}<br>
                    Compañia: ${CIA}<br>
                    Anexo: ${EXT}<br>
                    Celular: ${CEL_CLIE}<br>
                    RPM: ${RPM_CLIE}
                </div>
                <div class="duContFot">

                </div>
            </div>
        </div>*@
    <div class="du12">
        <div class="duCont">
            <div class="duContdet" style="text-transform:capitalize;margin:0px 5px 3px 5px;color:black;">
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">Fotocheck</label>: ${FOT_CLIE}<br>
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">Usuario</label>: ${NAM_CLIE}<br>
                <div style="float:left;padding:0px 5px 0px 0px"><label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">Tipo De Usuario</label>: </div><label style="color:${COLOR};font-weight:bold;"> ${USE_TYPE}</label><br>
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">Cargo</label>: ${JOB_TITL}<br>
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">Área</label>: ${ARE_CLIE}<br>
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">Gestión</label>: ${MANA}<br>
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">Compañía</label>: ${CIA}<br>
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">Extensión</label>: ${EXT}<br>
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">Celular</label>: ${CEL_CLIE}<br>
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">RPM</label>: ${RPM_CLIE}
            </div>
            <div class="duContFot">

            </div>
        </div>
    </div>
</script>

<!--Plantilla de Kendo que sirve para generar detalle de equipos asignado a usuario.-->
<script type="text/x-kendo-tmpl" id="templabu">
    <div class="form-row">
        <div class="col-xs-3">
            <div class="form-group">
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">${NAM_TYPE_ASSE} </label> |
            </div>
        </div>
        <div class="col-xs-3">
            <div class="form-group">
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;"> ${NAM_MANU} </label> |
            </div>
        </div>
        <div class="col-xs-3">
            <div class="form-group">
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;"> ${NAM_STAT_ASSE} - ${NAM_COND} </label> |
            </div>
        </div>
        <div class="col-xs-3">
            <div class="form-group">
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;"> ${COD_ASSE}</label>
            </div>
        </div>
    </div>
    @*<div class="FondoGris01">
            <div class="casilla">
                ${NAM_TYPE_ASSE}
            </div>
            <div class="casilla">
                ${NAM_MANU}
            </div>
            <div class="casilla">
                ${NAM_STAT_ASSE} - ${NAM_COND}
            </div>
            <div class="casilla">
                ${COD_ASSE}
            </div>
        </div>
        <div style="width:100%;height:4px;"></div>*@
</script>
<script type="text/x-kendo-tmpl" id="templut">

    <div class="form-row">
        <div class="col-xs-3">
            <div class="form-group">

                <a href="/DetailsTicket/Index/#= ID_TICK #" target="_blank">
                    <label id="" class="" style="text-transform:capitalize;font-weight:bold;">#= COD_TICK #</label> |
                </a>

                @*<label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;">${COD_TICK} - ${ID_TICK}</label> |*@
            </div>
        </div>

        <div class="col-xs-3">
            <div class="form-group">
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;"> ${NAM_STAT_TICK} </label> |
            </div>
        </div>

        <div class="col-xs-3">
            <div class="form-group">
                <label id="" for="" class="" style="text-transform:capitalize;font-weight:bold;"> ${TITLE_TICK} </label> |
            </div>
        </div>

    </div>
</script>


<script type="text/javascript">
    $(document).ready(function () {

        $('#IdGarantiaProveedor').hide();

        $('#FalsoPositivo').kendoComboBox({
            dataTextField: "text",
            dataValueField: "value",
            dataSource: [{
                text: "Positivo",
                value: "1"
            }, {
                text: "Falso Positivo",
                value: "2"
            }],
            filter: "contains",
        }).data("kendoComboBox");

        $('#ID_CATE').change(function() {
            var idCateN1 = $('#ID_CATE_N1').val();
            var idCateN2 = $('#ID_CATE_N2').val();
            var idCateN3 = $('#ID_CATE_N3').val();
            var idCate = $(this).val();

            $.ajax({
                url: '@Url.Action("MostrarGarantiaBNV", "Administrator")',
                type: 'GET',
                dataType: 'json',
                data: {
                    cat1: idCateN1,
                    cat2: idCateN2,
                    cat3: idCateN3,
                    cat4: idCate
                },
                success: function(response) {
                    if (response.resultado !== undefined) {
                        var resultado = response.resultado;
                        if (resultado === 1) {
                            $('#IdGarantiaProveedor').show();  
                        } else {
                            $('#IdGarantiaProveedor').hide();  
                        }
                    } else if (response.error !== undefined) {
                        console.log("Error: " + response.error);
                    }
                },
                error: function(xhr, status, error) {
                    console.log("Error de AJAX: " + error);
                }
            });
        });

        var ID_TYPE_TICKET = $("#ID_TYPE_TICKET").kendoComboBox({
            dataTextField: "NAM_TYPE_TICK",
            dataValueField: "NAM_TYPE_TICK",
            placeholder: "Tipo de ticket",
            suggest: true,
            dataSource: {
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/TypeTicket/List?var=" + Math.random()
                },
                requestEnd: function (e) {
                    e.response.Data = e.response.Data.filter(function (item) {
                        return item.NAM_TYPE_TICK !== "EVENTO";
                    });
                }
            }
        }).data("kendoComboBox");

        ID_TYPE_TICKET.bind("change", function (e) {
            var selectedValue;
            if (ID_TYPE_TICKET.value() === "" || ID_TYPE_TICKET.value() === null) {
                selectedValue = "";
            }
            else {
                selectedValue = ID_TYPE_TICKET.value();
            }
            var solicitante = $("#ID_PERS_ENTI").data("kendoComboBox");
            if (selectedValue == 'REQUERIMIENTO') {
                filterTicket(1, solicitante.dataItem().ID_PERS_ENTI);
            }
            else if (selectedValue == 'INCIDENTE') {
                filterTicket(2, solicitante.dataItem().ID_PERS_ENTI);
            }
            else {
                filterTicket(0, solicitante.dataItem().ID_PERS_ENTI);
            }

        });
    });
</script>


<script type="text/javascript">
    var idpriory = 0;
    var swt = 0;
    function MensajeError(msj, flag) {
        //Cierre de la ventana de espera.
        //closeWinModalPopUpLoad();

        //$('#SmallModalContent').modal('show');
        //$("#SmallModalTitle").empty();
        //$("#SmallModalTitle").text("Mensaje");
        //$("#SmallModalBody").empty();
        //$("#SmallModalBody").append("<div style='padding:10px 0 10px 0;'>" + msj + "</div>");
        //$("#SmallModalFooter").empty();
        //$("#SmallModalFooter").append("<div style='float:right;'>" +
        //                                  "<button id='continuee' class='k-button'>Continuar</button>" +
        //                           "</div>");
        //var undo = $("#continuee")
        //.bind("click", function () {
        //    $('#SmallModalContent').modal('hide');
        //});

        swal({
            title: 'Mensaje',
            type: 'info',
            text: msj,
            focusConfirm: false,
            confirmButtonText:
                'Continue',
            confirmButtonAriaLabel: 'Thumbs up, great!'

        })
    }

    //Función ejecutada despues de enviar datos al servidor y recibir respuesta.
    function uploadDone(msg, code) {

        //Cierre de la ventana de espera.
        //closeWinModalPopUpLoad();

        //Todo conforme se procede a mostrar mensaje de satisfacción.
        if (msg == "OK") {
            var title = 'Información Guardada / Notificación Enviada';
            //var body = "<div style='border-bottom:1px dotted #dadada;padding:0px 0px 20px 0px;'>"
            //       + "<div style='padding:10px 0px 10px 0px;'>Ticket information was succesfully saved</div>"
            //       + "<div style='padding:10px 0px 10px 0px;'>Code: " + code + "</div>"
            //       + "The notification was succesfully sent to: <br>End User, Staff, Service Desk and IT Coordinator.<br>" +
            //       "<div style='float:right; padding:30px 6px 0px 6px; '>" +
            //       "<button id='btnContinues' class='k-button'>Continue</button>" +
            //       "</div></div>";

            ////Mostrar mensaje.
            //winPopUpModal(title, body, 400, 230);

            ////Cerrar mensaje desde simbolo X
            //$("#closebtnmodal").click(function () {
            //    //location.reload(true);
            //    $("#dlg").hide('200', "swing", function () {
            //        $("#bkg").fadeOut("300");
            //    });

            //    var newurl = location.host + "/Home";
            //    location = "http://" + location.host + "/Home";
            //});

            ////Cerrarmensaje desde boton Continuar
            //$("#btnContinues").click(function () {
            //    var newurl = location.host + "/Home";
            //    location = "http://" + location.host + "/Home";

            //    $("#dlg").hide('200', "swing", function () {
            //        $("#bkg").fadeOut("300");
            //    });
            //});
            swal({
                title: title,
                type: 'success',
                text: 'La información del Ticket fue guardada correctamente. Código : ' + code,
                focusConfirm: false,
                confirmButtonText:
                    'Continuar',
                confirmButtonAriaLabel: 'Thumbs up, great!'

            }, function () {
                var newurl = location.host + "/Home";
                /*location = "http://" + location.host + "/Home";*/

                location = "http://" + location.host + "/Home/Principal";
            })

        }
            //En caso exista disconformidad se muestra mensaje
        else {
            var title = 'Falta Información';
            //var body = "<div style='border-bottom:1px dotted #dadada;padding:0px 0px 20px 0px;'>" +
            //    "<div style='padding:10px 0px 10px 0px;'>You should choose or complete the required information</div>" +
            //    "<div style='float:right; padding:30px 6px 0px 6px; '>" +
            //    "<button id='btnContinuee' class='k-button'>Continue</button>" +
            //            "</div></div>";

            //winPopUpModal(title, body, 400, 150);

            //$("#btnContinuee").click(function () {
            //    $("#dlg").hide('200', "swing", function () {
            //        $("#bkg").fadeOut("300");
            //    });
            //});

            swal({
                title: title,
                type: 'info',
                text: 'Debes elegir o completar la información requerida.',
                focusConfirm: false,
                confirmButtonText:
                    'Continuar',
                confirmButtonAriaLabel: 'Thumbs up, great!'

            })
        }

        const button = document.querySelector('#submit');
        button.disabled = false;
    }

    function perdioSesion() {

        swal({
            title: 'Algo salio mal',
            type: 'error',
            text: 'Se perdió la conexión',
            focusConfirm: false,
            confirmButtonText: 'Continuar',
        }, function () {

            location = "http://" + location.host + `/Home/Principal`;
        })
    }

    function uploadDoneBnv(msg, code, id) {
        //Cierre de la ventana de espera.
        //closeWinModalPopUpLoad();
        //Todo conforme se procede a mostrar mensaje de satisfacción.
        if (msg == "OK") {
            var title = 'Información Guardada / Notificación Enviada';
            //var body = "<div style='border-bottom:1px dotted #dadada;padding:0px 0px 20px 0px;'>"
            //       + "<div style='padding:10px 0px 10px 0px;'>Ticket information was succesfully saved</div>"
            //       + "<div style='padding:10px 0px 10px 0px;'>Code: " + code + "</div>"
            //       + "The notification was succesfully sent to: <br>End User, Staff, Service Desk and IT Coordinator.<br>" +
            //       "<div style='float:right; padding:30px 6px 0px 6px; '>" +
            //       "<button id='btnContinues' class='k-button'>Continue</button>" +
            //       "</div></div>";

            ////Mostrar mensaje.
            //winPopUpModal(title, body, 400, 230);

            ////Cerrar mensaje desde simbolo X
            //$("#closebtnmodal").click(function () {
            //    //location.reload(true);
            //    $("#dlg").hide('200', "swing", function () {
            //        $("#bkg").fadeOut("300");
            //    });

            //    var newurl = location.host + "/Home";
            //    location = "http://" + location.host + "/Home";
            //});

            ////Cerrarmensaje desde boton Continuar
            //$("#btnContinues").click(function () {
            //    var newurl = location.host + "/Home";
            //    location = "http://" + location.host + "/Home";

            //    $("#dlg").hide('200', "swing", function () {
            //        $("#bkg").fadeOut("300");
            //    });
            //});
            swal({
                title: title,
                type: 'success',
                text: 'La información del Ticket fue guardada correctamente. Código : ' + code,
                focusConfirm: false,
                confirmButtonText:
                    'Continuar',
                confirmButtonAriaLabel: 'Thumbs up, great!'

            }, function () {
                var newurl = location.host + "/Home";
                /*location = "http://" + location.host + "/Home";*/

                location = "http://" + location.host + `/DetailsTicket/Index/${id}`;
            })

        }
        //En caso exista disconformidad se muestra mensaje
        else {
            var title = 'Falta Información';
            //var body = "<div style='border-bottom:1px dotted #dadada;padding:0px 0px 20px 0px;'>" +
            //    "<div style='padding:10px 0px 10px 0px;'>You should choose or complete the required information</div>" +
            //    "<div style='float:right; padding:30px 6px 0px 6px; '>" +
            //    "<button id='btnContinuee' class='k-button'>Continue</button>" +
            //            "</div></div>";

            //winPopUpModal(title, body, 400, 150);

            //$("#btnContinuee").click(function () {
            //    $("#dlg").hide('200', "swing", function () {
            //        $("#bkg").fadeOut("300");
            //    });
            //});

            swal({
                title: title,
                type: 'info',
                text: 'Debes elegir o completar la información requerida.',
                focusConfirm: false,
                confirmButtonText:
                    'Continuar',
                confirmButtonAriaLabel: 'Thumbs up, great!'

            })
        }
        const button = document.querySelector('#submit');
        button.disabled = false;
    }
    function Mensaje(msg, msnErr) {
        if (msg == 'OK') {
            toastr.success(msnErr);

            //$("#id").submit();

        }
        else {
            toastr.warning(msnErr);
        }
        const button = document.querySelector('#submit');
        button.disabled = false;
    }

    $(document).ready(function () {

        let cbGrupoPlantilla = $("#cbGrupoPlantilla").kendoComboBox({
            dataTextField: "DES_QUEU",
            dataValueField: "ID_QUEU",
            placeholder: "Seleccione...",
            filter: "contains",
            autoBind: true,
            delay: 500,
            minLength: 0,
            suggest: true,
            template: '<div style="text-transform:uppercase; display: width:100%;">' +
                '${data.DES_QUEU}</div>',
            //template: '<div style="text-transform:capitalize; display: inline-block; width:100%; height:35px; position:relative; ">' +
            //            '<span><strong>${data.QUEU}</strong></span><br />' +
            //            '<span style="position:absolute; top:15px;">${data.DES_QUEU}</span></div>',
            dataSource: {
                schema: {
                    data: "Data"
                },
                transport: {
                    read: "/PlantillaBuenaventura/ListarGruposUsuario?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        let cbNombrePlantilla = $("#cbNombrePlantilla").kendoComboBox({
            enable:false
        }).data("kendoComboBox");

        cbGrupoPlantilla.bind("change", function () {
            cbNombrePlantilla.enable(true);
            cbNombrePlantilla = $("#cbNombrePlantilla").kendoComboBox({
                autoBind: true,
                filter: "contains",
                dataValueField: "Id",
                dataTextField: "Nombre",
                placeholder: "Seleccionar ... ",
                dataSource: {
                    transport: {
                        schema: {
                            data: "Data"
                        },
                        read: {
                            url: "/PlantillaBuenaventura/ListarPlantillasGrupo?IdGrupo=" + cbGrupoPlantilla.dataItem().ID_QUEU
                        }
                    }

                }
            }).data("kendoComboBox");


            cbNombrePlantilla.bind("change", function () {
                // Cargar Datos de Plantilla
                $.ajax({
                    url: '/PlantillaBuenaventura/ObtenerPlantilla/',
                    data: { IdPlantilla: cbNombrePlantilla.dataItem().Id },
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        let plantilla = data[0];
                        $("#TITLE_TICK").val(plantilla.TITLE_TICK);
                        $("#ID_TYPE_TICK").data("kendoComboBox").value(plantilla.ID_TYPE_TICK);
                        $("#ID_SOUR").data("kendoComboBox").value(plantilla.ID_SOUR);
                        $("#ID_STAT").data("kendoComboBox").value(plantilla.ID_STAT);
                        //$("#FechaRecepcionSolicitud").val(plantilla.FechaRecepcionSolicitud);
                        $("#IdRazon").data("kendoComboBox").value(plantilla.IdRazon);
                        $("#ID_PERS_ENTI").data("kendoComboBox").value(plantilla.ID_PERS_ENTI);
                        $("#ID_PERS_ENTI").data("kendoComboBox").trigger('change');
                        //$("#ID_COMP").data("kendoComboBox").value(plantilla.ID_COMP);
                        //$("#ID_PERS_ENTI_END").data("kendoComboBox").value(plantilla.ID_PERS_ENTI_END);
                        //$("#ID_QUEU").data("kendoComboBox").value(plantilla.ID_QUEU);
                        $("#ID_PERS_ENTI_ASSI").data("kendoComboBox").value(plantilla.ID_PERS_ENTI_ASSI);
                        $("#ID_CATE_N1").data("kendoComboBox").value(plantilla.ID_CATE_N1);
                        $("#ID_CATE_N2").data("kendoComboBox").value(plantilla.ID_CATE_N2);
                        $("#ID_CATE_N3").data("kendoComboBox").value(plantilla.ID_CATE_N3);
                        $("#ID_CATE").data("kendoComboBox").value(plantilla.ID_CATE);

                        var comboQueue = $("#ID_QUEU").data("kendoComboBox");
                        var comboPersEntiAssi = $("#ID_PERS_ENTI_ASSI").data("kendoComboBox");

                        comboQueue.enable(true);
                        comboPersEntiAssi.enable(true);

                        comboQueue.dataSource.read().then(function () {
                            comboQueue.value(plantilla.ID_QUEU);
                            comboPersEntiAssi.dataSource.read().then(function () {
                                comboPersEntiAssi.value(plantilla.ID_PERS_ENTI_ASSI);
                            });
                        });


                        var idSLAComboBox = $("#IdSLA").data("kendoComboBox");
                        idSLAComboBox.setDataSource(new kendo.data.DataSource({
                            serverFiltering: true,
                            schema: {
                                data: "Data",
                                total: "Count"
                            },
                            transport: {
                                read: {
                                    url: "/SLA/ListarSLATicketCategory",
                                    data: function () {
                                        return {
                                            idCat1: plantilla.ID_CATE_N2,
                                            idCat2: plantilla.ID_CATE_N3,
                                            idCat3: plantilla.ID_CATE,
                                            idTypeTicket: plantilla.ID_TYPE_TICK
                                        };
                                    },
                                    dataType: "json"
                                }
                            }
                        }));

                        idSLAComboBox.dataSource.read().then(function () {
                            var firstItem = idSLAComboBox.dataSource.view()[0];
                            if (firstItem) {
                                idSLAComboBox.value(firstItem.Id);
                            }
                        });


                        //var idQueueComboBox = $("#ID_QUEU").data("kendoComboBox");
                        //idQueueComboBox.setDataSource(new kendo.data.DataSource({
                        //    serverFiltering: true,
                        //    schema: {
                        //        data: "Data",
                        //        total: "Count"
                        //    },
                        //    transport: {
                        //        read: {
                        //            url: "/AccountQueue/ListByAcco?var=" + Math.random(),
                        //            data: function () {
                        //                return {
                        //                    idCateN3: $("#ID_CATE_N3").data("kendoComboBox").value()
                        //                };
                        //            },
                        //            dataType: "json"
                        //        }
                        //    }
                        //}));
                        //idQueueComboBox.setOptions({
                        //    cascadeFrom: "ID_CATE_N3"
                        //});

                        //idQueueComboBox.dataSource.read().then(function () {
                        //    idQueueComboBox.value(plantilla.ID_QUEU);
                        //    $("#ID_QUEU").data("kendoComboBox").enable(true);
                        //});


                        var idPrioComboBox = $("#ID_PRIO").data("kendoComboBox");
                        idPrioComboBox.unbind("dataBound");
                        idPrioComboBox.setDataSource(new kendo.data.DataSource({
                            serverFiltering: true,
                            schema: {
                                data: "Data",
                                total: "Count"
                            },
                            transport: {
                                read: {
                                    url: "/SLA/ListarCboPrioridadxSLABNV?var=" + Math.random(),
                                    data: function () {
                                        return {
                                            MacroServicio: plantilla.ID_CATE_N1,
                                            Categoria1: plantilla.ID_CATE_N2,
                                            Categoria2: plantilla.ID_CATE_N3,
                                            TypeTicket: plantilla.ID_TYPE_TICK,
                                            idGrupo: plantilla.ID_QUEU,
                                            idSLA: plantilla.IdSLA
                                        };
                                    },
                                    dataType: "json"
                                }
                            }
                        }));
                        idPrioComboBox.dataSource.read().then(function () {
                            idPrioComboBox.select(function (dataItem) {
                                return dataItem.IdPrioridad == plantilla.ID_PRIO;
                            }); 
                            idPrioComboBox.refresh();
                            //idPrioComboBox.value(plantilla.ID_PRIO);
                            $("#ID_PRIO").data("kendoComboBox").enable(true);
                        });

                        idPrioComboBox.bind("dataBound", function () {
                            idPrioComboBox.select(function (dataItem) {
                                return dataItem.IdPrioridad == plantilla.ID_PRIO;
                            });
                            $("#ID_PRIO").data("kendoComboBox").trigger('change');
                            //this.value(plantilla.ID_PRIO);
                        });

                        //var idIdPersAssiComboBox = $("#ID_PERS_ENTI_ASSI").data("kendoComboBox");
                        //idIdPersAssiComboBox.setDataSource(new kendo.data.DataSource({
                        //    serverFiltering: true,
                        //    schema: {
                        //        data: "Data",
                        //        total: "Count"
                        //    },
                        //    transport: {
                        //        read: "/AccountEntity/AssigneByQueue?AreaResp=" + plantilla.ID_QUEU + "&var=" + Math.random()
                        //    }
                        //}));
                        //idIdPersAssiComboBox.dataSource.read().then(function () {
                        //    idIdPersAssiComboBox.value(plantilla.ID_PERS_ENTI_ASSI);
                        //    $("#ID_PERS_ENTI_ASSI").data("kendoComboBox").enable(true);
                        //});

                        if (plantilla.REM_CTRL_TICK == "True") {
                            $("#REM_CTRL_TICK").val(true);
                        }

                        if (plantilla.IS_PARENT == "True") {
                            $("#IS_PARENT").val(true);
                            $("#ID_TICK_PARENT").data("kendoComboBox").value(plantilla.ID_TICK_PARENT);
                        }

                        $("#IdGrupoReportador").data("kendoComboBox").value(plantilla.IdGrupoReportador);
                        $("#IdModTrabajo").data("kendoComboBox").value(plantilla.IdModTrabajo);
                        $("#ID_LOCA").data("kendoComboBox").value(plantilla.ID_LOCA);
                        $("#SUM_TICK").data("kendoEditor").value(plantilla.SUM_TICK);
                    },
                    error: function (data) {
                        console.error('Error al obtener la plantilla:', data);
                    }
                });
            });

        });




        var valores = new Array();
        var IdTema = $("#IdTema").kendoComboBox({}).data("kendoComboBox");
        //cambioIdiomaTexto();

        //top.cambioIdiomaxLlave('NuevoTicket|TipoTicket|FechaTicket|MediodeComunicación|CompañíaSolicitante|Artículo|CompañíaFinal|Solicitante|UsuarioAfectado|Prioridad|ÁreaResponsable|Asignadoa|Estado|UnidaddeNegocio|Macroservicio|Servicio|Incidente/Requerimiento|ControlRemoto|FechaProgramada|¿EsTicketPadre?|TicketPadre|Monto|Activo|FechaRecepcionSolicitud|Servicio|Comentarios|Adjuntar|Crear|Cancelar|AdjuntarArchivos|TipodeDocumento|Cerrar|TicketsAutomáticos|TicketAutomático|Título|Lunes|Martes|Miércoles|Jueves|Viernes|Sábado|Domingo|Indeterminado|FechadeVigencia|HoradeCreación|SoportedeProductos|VerVigencia|DetallesdelTicket|TiempoestimadodeAtención|DatosdelUsuario|Activosasignadosalusuario');

        //Tickets Automaticos
        var hoy = new Date();
        var HoraCreacion = $("#HoraCreacion").kendoDateTimePicker({ value: hoy, dateInput: true }).data("kendoDateTimePicker");
        var FechaInicioVigencia = $("#FechaInicioVigencia").kendoDateTimePicker({ value: hoy }).data("kendoDateTimePicker");
        var FechaFinVigencia = $("#FechaFinVigencia").kendoDateTimePicker({ value: hoy }).data("kendoDateTimePicker");

        $('#chkTicketAuto').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $("#hdnTkAutomatico").val(1);

                //$("#divFrecuencia").removeClass("divHide");
                $("#divTitulo").removeAttr("hidden");
                $("#divFrecuencia").removeAttr("hidden");
                if ($("#rbtFrecuenciaSemanal").is(':checked')) {
                    //$("#divDiaSemana").removeClass("divHide");
                    //$("#divDiaMes").addClass("divHide");
                    $("#divSemana").removeAttr("hidden");
                    $("#divDiaMes").attr("hidden", true);
                } else {
                    //$("#divDiaMes").removeClass("divHide");
                    //$("#divDiaSemana").addClass("divHide");
                    $("#divSemana").attr("hidden", true);
                    $("#divDiaMes").removeAttr("hidden");
                }

                //$("#divTiempo").removeClass("divHide");
                $("#divTiempo").removeAttr("hidden");
                if ($("#rbtTiempoIndeterminado").is(':checked')) {
                    //$("#divFechaVigencia").addClass("divHide");
                    $("#divFechaVigencia").attr("hidden", true);
                    $("#divCreacion").removeAttr("hidden");
                } else {
                    //$("#divFechaVigencia").removeClass("divHide");
                    $("#divCreacion").attr("hidden", true);
                    $("#divFechaVigencia").removeAttr("hidden");
                }
            } else {
                $("#hdnTkAutomatico").val(0);
                //$("#divFrecuencia").addClass("divHide");
                //$("#divDiaSemana").addClass("divHide");
                //$("#divDiaMes").addClass("divHide");
                //$("#divTiempo").addClass("divHide");
                //$("#divFechaVigencia").addClass("divHide");
                $("#DivCausa").removeAttr("hidden");
                $("#divTitulo").attr("hidden", true);
                $("#divFrecuencia").attr("hidden", true);
                $("#divSemana").attr("hidden", true);
                $("#divDiaMes").attr("hidden", true);
                $("#divTiempo").attr("hidden", true);
                $("#divFechaVigencia").attr("hidden", true);
                $("#divCreacion").attr("hidden", true);
            }
        });

        $('#rbtFrecuenciaSemanal').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $("#hdnFrecuencia").val(1);
                //$("#divDiaSemana").removeClass("divHide");
                //$("#divDiaMes").addClass("divHide");
                $("#divSemana").removeAttr("hidden");
                $("#divDiaMes").attr("hidden", true);
            } else {
                $("#hdnFrecuencia").val(2);
                //$("#divDiaMes").removeClass("divHide");
                //$("#divDiaSemana").addClass("divHide");
                $("#divSemana").attr("hidden", true);
                $("#divDiaMes").removeAttr("hidden");
            }
        });

        $('#rbtTiempoIndeterminado').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $("#hdnVigencia").val(1);
                //$("#divFechaVigencia").addClass("divHide");
                $("#divFechaVigencia").attr("hidden", true);
                $("#divCreacion").removeAttr("hidden");
            } else {
                $("#hdnVigencia").val(2);
                //$("#divFechaVigencia").removeClass("divHide");
                $("#divFechaVigencia").removeAttr("hidden");
                $("#divCreacion").attr("hidden", true);
            }
        });

        $('#chkLunes').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val() + '2-');
            } else {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val().replace('2-', ''));
            }
        });
        $('#chkMartes').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val() + '3-');
            } else {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val().replace('3-', ''));
            }
        });
        $('#chkMiercoles').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val() + '4-');
            } else {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val().replace('4-', ''));
            }
        });
        $('#chkJueves').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val() + '5-');
            } else {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val().replace('5-', ''));
            }
        });
        $('#chkViernes').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val() + '6-');
            } else {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val().replace('6-', ''));
            }
        });
        $('#chkSabado').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val() + '7-');
            } else {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val().replace('7-', ''));
            }
        });
        $('#chkDomingo').on('ifToggled', function (event) {
            if ($(this).is(':checked')) {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val() + '1-');
            } else {
                $('#hdnDiaSemana').val($('#hdnDiaSemana').val().replace('1-', ''));
            }
        });

       // $('#submit').click(function () {
        document.querySelector('#FrmTicket').addEventListener("submit", (event) => {
            var mensaje = '';
            //Valor de Unidad Minera
            var unim = $("#ID_COMP")

            $('#hdnTitulo').val($('#txtTituloTicketAuto').val());
            $('#hdnDiaMes').val($('#txtDiaMes').val());
            $('#hdnVigenciaInicio').val($('#FechaInicioVigencia').val());
            $('#hdnVigenciaFin').val($('#FechaFinVigencia').val());
            $('#hdnHoraCreacion').val($('#HoraCreacion').val());
            $('#hdnUnidadMinera').val(unim.data('kendoComboBox').value());
            if ($('#hdnTkAutomatico').val() == 1) {
                if ($('#hdnTitulo').val() == '') {
                    mensaje = 'Ingrese un Título para el Ticket Automático. \n'
                }
                if ($('#hdnFrecuencia').val() == 1 && $('#hdnDiaSemana').val() == '') {
                    mensaje = 'Seleccione un día como mínimo. \n'
                }
                if ($('#hdnFrecuencia').val() == 2 && ($('#hdnDiaMes').val() < 1 || $('#hdnDiaMes').val() > 31)) {
                    mensaje = 'Seleccione un día del mes válido . \n'
                }
            }

            var idSour = $('#ID_SOUR').val();
            var idMotivoSour = $('#IdMotivoSource').val();
            if (idSour == 11 && idMotivoSour == '') {
                mensaje = 'Seleccione el motivo de regularización. \n';
            }

            var vip = $('#UsuarioVIP').val();
            if (vip == '') {
                mensaje = 'Seleccione si la atención gestionada es para un usuario VIP. \n';
            }

            var falsoPositivo = $('#FalsoPositivo').val();
            if (falsoPositivo == '') {
                mensaje = 'Seleccione si es Positivo o Falso Positivo. \n';
            }

            if (mensaje != "") {
                //alert(mensaje);
                //document.getElementById('submit').removeAttribute("disabled");
                event.preventDefault();
                toastr.warning(mensaje, "Advertencia");
                return false;
            } else {
                //winPopUpModalLoad('Guardando el Ticket', 'Espere por Favor', 300, 130);
                toastr.info("Guardando el Ticket", "Espere por favor");
                const button = document.querySelector('#submit');
                button.disabled = true;
            }

        });

        if ('@ViewBag.ACCESO_NEWREQ' == '1') {
            $("#divRequest").css("display", "none");
            $("#divRequestNew").css("display", "inline-block");
        }

        //Resetear o limpiar formulario.
        $("#reset").click(function (event) {
            event.preventDefault();

            //var title = 'Operación Cancelada';
            //var body = "<div style='border-bottom:1px dotted #dadada;padding:0px 0px 10px 0px;'>" +
            //"<div style='padding:10px 0px 10px 0px;'>The operation to perform was cancelled</div>" +
            //"<div style='float:right; padding:20px 6px 0px 6px; '>" +
            //"<button id='btnContinuer' class='k-button'>Continue</button>" +
            //"</div></div>";

            //winPopUpModal(title, body, 400, 150);

            //$("#btnContinuer").bind("click", function () {
            //    //location.reload(true);
            //    $("#dlg").hide('200', "swing", function () {
            //        $("#bkg").fadeOut("300");
            //    });

            //    var newurl = location.host + "/Home";
            //    location = "http://" + location.host + "/Home";
            //});

            //$("#closebtnmodal").click(function () {

            //    //location.reload(true);
            //    //var newurl = location.host + "/Home";
            //    //location = "http://" + location.host + "/Home";
            //});

            swal({
                    title: 'Operación Cancelada',
                    type: 'info',
                    text: 'La operación a realizar fue cancelada',
                    focusConfirm: false,
                    confirmButtonText:
                        'Continuar',
                    confirmButtonAriaLabel: 'Thumbs up, great!'

                }, function () {
                    var newurl = location.host + "/Home";
                    location = "http://" + location.host + "/Home";
                })

        });

        //        var ID_COMP = $("#ID_COMP").kendoComboBox({
        //        //autoBind: false,
        //        dataTextField: "COM_NAME",
        //        dataValueField: "ID_ENTI",
        //        filter: "contains",
        //        delay: 500,
        //        minLength: 0,
        //        suggest: true,
        //        placeholder: "Seleccionar ... ",
        //        //placeholder: "Empresa Inicial",
        //        //template: kendo.template($("#tmp-CIA").html()),
        //        dataSource: {
        //            //serverFiltering: true,
        //            schema: {
        //                data: "Data",
        //                total: "Count"
        //            },
        //            transport: {
        //                read: "/AccountEntity/ListCompanyByAccount"
        //            }
        //        }
        //    }).data("kendoComboBox");
        //ID_COMP.list.width(350);

        var ID_COMP = $("#ID_COMP").kendoComboBox({
            autoBind: true,
            filter: "contains",

            dataTextField: "COM_NAME",
            dataValueField: "ID_ENTI",
            cascadeFrom: "ID_PERS_ENTI",
            clearButton: false,
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            placeholder: "Seleccionar ... ",
            //placeholder: "Empresa Inicial",
            //template: kendo.template($("#tmp-CIA").html()),
            //dataSource: {
            //    //serverFiltering: true,
            //    schema: {
            //        data: "Data",
            //        total: "Count"
            //    },
            //    transport: {
            //        read: "/AccountEntity/ListCompanyByAccount"
            //    }
            //}
            }).data("kendoComboBox");
        //ID_COMP.list.width(350);
        ID_COMP.enable(false)

        ID_COMP.bind("change", function (e) {
            $('#sla').css('background', 'white');

            if ('@ViewBag.ACCESO_NEWREQ' == '1') {
                if (ID_COMP.dataItem()) {
                    $("#divRequest").css("display", "none");
                    $("#divRequestNew").css("display", "inline-block");
                    $('#ID_CIA').attr('value', ID_COMP.dataItem().ID_ENTI);
                    $("#divEditCombo").css("display", "none");
                }
                else {
                    $("#divRequest").css("display", "inline-block");
                    $("#divRequestNew").css("display", "none");
                    $('#ID_CIA').attr('value', 0);
                }
            }

        });


        var ID_SOUR = $("#ID_SOUR").kendoComboBox({
            //index: 2,
            //autoBind:true,
            filter: "contains",
            dataTextField: "NAM_SOUR",
            dataValueField: "ID_SOUR",
            suggest: true,
            placeholder: "Seleccionar ... ",
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/SourceTicket/List"
                },
                sort: { field: "NAM_SOUR", dir: "asc" }
            }
        }).data("kendoComboBox");
        //Declaración de objeto ComboBox Kendo
        var ID_PERS_ENTI = $("#ID_PERS_ENTI").kendoComboBox({
            //autoBind: false,
            //cascadeFrom: "ID_COMP",
            filter: "contains",
            dataTextField: "CLIE",
            dataValueField: "ID_PERS_ENTI",
            minLength: 0,
            suggest: true,
            placeholder: "Seleccionar ... ",
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/CargarListaAsignadosBnv"
                }
            }
        }).data("kendoComboBox");
        //ID_PERS_ENTI.list.width(300);

        var ID_PERS_ENTI_END = $("#ID_PERS_ENTI_END").kendoComboBox({
            //autoBind: false,
            //cascadeFrom: "ID_PERS_ENTI",
            filter: "contains",
            dataTextField: "CLIE",
            dataValueField: "ID_PERS_ENTI",
            placeholder: "Seleccionar ... ",
            //delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/CargarListaAfectadosBnv"
                }
            }
        }).data("kendoComboBox");
       // ID_PERS_ENTI_END.list.width(300);

        //Función para verificar cambio de registro seleccionado
        ID_PERS_ENTI.bind("change", function (e) {
            //Store para vista Detail User
            detailUser(ID_PERS_ENTI.dataItem().ID_PERS_ENTI);
            $("#ID_TYPE_TICKET").data("kendoComboBox").select(-1);
            UltimosTickets(ID_PERS_ENTI.dataItem().ID_PERS_ENTI);
            AssetByUser(ID_PERS_ENTI.dataItem().ID_PERS_ENTI);
            ID_PERS_ENTI_END.value($("#ID_PERS_ENTI").val())
            ID_COMP = $("#ID_COMP").kendoComboBox({
                dataTextField: "COM_NAME",
                dataValueField: "ID_ENTI",
                //suggest: true,
                autoBind: true,
                suggest: true,
                clearButton: false,
                index: 0,
                dataSource: {
                    //serverFiltering: true,
                    schema: {
                        data: "Data",
                        total: "Count"
                    },
                    transport: {
                        // REFERENCIA al controlador TypeTicketController
                        read: "/AccountEntity/CargarListaUnidadesMineras?id=" + $("#ID_PERS_ENTI").val()
                    },
                    sort: { field: "COM_NAME", dir: "asc" }
                }
            })
            @*if (ID_PERS_ENTI.dataItem() === undefined) {
                $("#divEditCombo").css("display", "none");
            }
            else {
                if ('@ViewBag.ACCESO_NEWREQ' == '1') {
                    $("#divEditCombo").css("display", "block");
                }
                /*$('#ID_PERS_ENTI_END').attr('value', ID_PERS_ENTI.dataItem().ID_PERS_ENTI);*/
            }*@
        });

        ID_PERS_ENTI_END.bind("change", function (e) {
            //Store para vista Detail User
            detailUser(ID_PERS_ENTI_END.dataItem().ID_PERS_ENTI);
            AssetByUser(ID_PERS_ENTI_END.dataItem().ID_PERS_ENTI);
        });
       
        //ID_PERS_ENTI.bind("change", function (e) {
        //    ID_PERS_ENTI_END.value(ID_PERS_ENTI.dataItem().ID_PERS_ENTI);
        //});


        //AQUI EMPIEZA LA CASCADA DE TYPE_TICKET, SLA, PRIORIDAD




         //AQUI SE ENVIA EL ID PARA FILTRAR POR TICKET

        var ID_TYPE_TIKET;
        var ID_TYPE_TICK = $("#ID_TYPE_TICK").kendoComboBox({
            autoBind: true,
            dataTextField: "NAM_TYPE_TICK",
            dataValueField: "ID_TYPE_TICK",
            suggest: true,
            index: 1,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    // REFERENCIA al controlador TypeTicketController

                    read: "/TypeTicket/ListarCboTypeTicketxEmpresa?var=" + Math.random()

                }
            }
        }).data("kendoComboBox");

        ID_TYPE_TICK.bind("change", function (e) {
            ID_TYPE_TIKET=ID_TYPE_TICK.dataItem().ID_TYPE_TICK;

            if (ID_TYPE_TICK.dataItem()) {
                $('#ID_TYPE_TICK').attr('value', ID_TYPE_TICK.dataItem().ID_TYPE_TICK);
            }
            else {
                $('#ID_TYPE_TICK').attr('value', 0);
            }

        });





            var IdSLA = $("#IdSLA").kendoComboBox({
                cascadeFrom: "ID_CATE"
            });




         //-----FIN DE CASCADA-----------





        //var ID_PRIO = $("#ID_PRIO").kendoComboBox({
        //    autoBind: true,
        //    //index: 1,
        //  /*  cascadeFrom: "IdSLA",*/
        //    //placeholder: "Select Priority...",
        //    dataTextField: "Prioridad",
        //    dataValueField: "IdPrioridad",
        //    dataSource: {
        //        //type: "odata",
        //        serverFiltering: false,
        //        schema: {
        //            data: "Data",
        //            total: "Count"
        //        },
        //        transport: {
        //            read: "/Priority/ListarCboRequerimientosxSLA?var=" + Math.random()
        //        }
        //    }
        //});




        //ID_PRIO.bind("change", function (e) {
        //    if (ID_PRIO.dataItem()) {
        //        $('#ID_PRIO').attr('value', ID_PRIO.dataItem().ID_PRIO);
        //    }
        //    else {
        //        $('#ID_PRIO').attr('value', 0);
        //    }
        //});



        //var cboIdSLA = $("#IdSLA").data("kendoComboBox");
        //cboIdSLA.bind("change", function () {
        //    document.getElementById("sla").innerHTML = 'Nivel de Servicio: ';
        //    $('#sla').css('background', 'white');
        //});







        //ID_PRIO.bind("dataBound", function (e) {
        //    //console.log(ID_PERS_ENTI_END.dataItem());
        //    if (ID_PERS_ENTI_END.dataItem()) {
        //        //ID_PRIO.value(ID_PERS_ENTI_END.dataItem().ID_PRIO);
        //        document.getElementById("sla").innerHTML = 'Nivel de Servicio: ' + ID_PRIO.dataItem().HOU_PRIO + ' Hours';
        //    }
        //    //else if { ID_PRIO.value(ID_PERS_ENTI_END.dataItem().ID_PRIO); }
        //});

        //ID_PRIO.bind("change", function (e) {
        //    document.getElementById("sla").innerHTML = 'Nivel de Servicio: ' + ID_PRIO.dataItem().HOU_PRIO + ' Hours';
        //    if (ID_PRIO.value() == 1) {
        //        $('#sla').css('background', 'red');
        //    } else if (ID_PRIO.value() == 2) {
        //        $('#sla').css('background', 'blue');
        //    } else if (ID_PRIO.value() == 3) {
        //        $('#sla').css('background', 'yellow');
        //    } else if (ID_PRIO.value() == 4) {
        //        $('#sla').css('background', 'aqua');
        //    } else {
        //        $('#sla').css('background', 'gray');
        //    }
        //});

        //ID_PERS_ENTI.bind("change", function (e) {
        //    ID_PERS_ENTI_END.value(ID_PERS_ENTI.dataItem().ID_PERS_ENTI);
        //    //ID_PRIO.value(ID_PERS_ENTI.dataItem().ID_PRIO);
        //});

        //ID_PERS_ENTI.bind("change", function (e) {
        //    //Validar si es usuario VIP
        //    $.ajax({
        //        url: "/AccountEntity/ValidarTipoUsuario/" + $("#ID_PERS_ENTI").val(),
        //        type: "GET",
        //        cache: false,
        //        dataType: "json",
        //        success: function (source) {
        //            data = source;
        //            //Asigna la prioridad
        //            if ((data['Data'][0]) == 1) {
        //                var idPrioridad = $("#ID_PRIO").data("kendoComboBox");
        //                idPrioridad.value(1);
        //                idPrioridad.trigger("change");
        //            }
        //        },
        //        error: function (source) {
        //            toastr.error("Error Carga Json Comercial", "Mensaje");
        //        }
        //    });
        //});

        //ID_PERS_ENTI_END.bind("change", function (e) {
        //    ID_PRIO.value(ID_PERS_ENTI_END.dataItem().ID_PRIO);
        //});



        var ID_SOUR = $("#ID_SOUR").kendoComboBox({
            //index: 2,
            //autoBind:true,
            filter:"contains",
            dataTextField: "NAM_SOUR",
            dataValueField: "ID_SOUR",
            suggest: true,
            placeholder: "Seleccionar ... ",
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/SourceTicket/List"
                },
                sort: { field: "NAM_SOUR", dir: "asc" }
            },
            change: function (e) {
                if (ID_SOUR.value() == 11) {
                    $("#divMotivoSource").removeAttr("hidden");
                } else {
                    $("#divMotivoSource").attr("hidden", true);
                }
            }
        }).data("kendoComboBox");

        var IdMotivoSource = $("#IdMotivoSource").kendoComboBox({
            dataTextField: "Nombre",
            dataValueField: "Id",
            cascadeFrom: 'ID_SOUR',
            filter: "contains",
            autoBind: false,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Ticket/ListarMotivoSource?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var UsuarioVIP = $("#UsuarioVIP").kendoComboBox({
            dataTextField: "Nombre",
            dataValueField: "Id",
            dataSource: [{
                Nombre: "SI",
                Id: "1"
            }, {
                Nombre: "NO",
                Id: "2"
            }],
            filter: "contains",
        }).data("kendoComboBox");

        var FEC_INI_TICK = $("#FEC_INI_TICK").kendoDateTimePicker().data("kendoDateTimePicker");


        if (parseInt(@Session["ID_ACCO"]) == 3) {
            var FEC_INI_REAL = $("#FEC_INI_REAL").kendoDateTimePicker().data("kendoDateTimePicker");
            FEC_INI_REAL.value("@ViewBag.DATE");
        }
        //var FEC_INI_REAL = $("#FEC_INI_REAL").kendoDateTimePicker().data("kendoDateTimePicker");
        //FEC_INI_REAL.value("@ViewBag.DATE");

        //var FEC_TICK = $("#FEC_TICK").kendoDateTimePicker().data("kendoDateTimePicker");
        //FEC_TICK.value("@ViewBag.DATE");

        var FechaRecepcionSolicitud = $("#FechaRecepcionSolicitud").kendoDateTimePicker().data("kendoDateTimePicker");
        FechaRecepcionSolicitud.value();

        if (parseInt(@Session["ID_ACCO"]) == 60) {
            //var FechaRecepcionSolicitud = $("#FechaRecepcionSolicitud").kendoDateTimePicker().data("kendoDateTimePicker");
            //FechaRecepcionSolicitud.min("@ViewBag.DATE");
            FechaRecepcionSolicitud.value("@ViewBag.DATE");
        }


        $("#SUM_TICK").val("Impacto en el Servicio: <br><br> Detalle:")

                jQuery('#IDPLAN').on('change', function () {

            $.ajax({
                url: '/Plantilla/ObtenerDescripcionPlantilla/',
                data: { IdGrupo: $("#IDGRUPO").val(), IdPlan: $("#IDPLAN").val() },
                type: 'GET',
                dataType: 'text',
                success: function (data) {


                    $("#SUM_TICK").data('kendoEditor').value(data);
                    //alert(data);
                    //jQuery("#SUM_TICK").data('kendoEditor').value(data);

                },
                error: function (data) {
                },
            });
        });

        $("#SUM_TICK").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false,
            paste: OnPaste
        });

        $("#Adicional1").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false,
            paste: OnPaste
        });

        $("#Adicional2").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false,
            paste: OnPaste
        });

        $("#Solucion").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false,
            paste: OnPaste
        });
        var jsonArr = [];

        $("#files").kendoUpload({
            localization: {
                select: "Adjuntar"
            },
            upload: function (e) {
                e.data = {
                    ID_TYPE_DOCU_ATTA: ArrayFile.dataItem().ID_TYPE_DOCU_ATTA,
                    KEY_ATTA: '@ViewBag.UploadFile'
                };
            },
            remove: function (e) {
                e.data = {
                    KEY_ATTA: '@ViewBag.UploadFile'
                };
            },
            async: {
                saveUrl: "/Attach/SaveAttachTicket",
                removeUrl: "/Attach/RemoveAsyncAttachTicket"
            }
        });

        var ArrayFile = $("#ArrayFile").kendoComboBox({
            dataTextField: "NAM_TYPE_DOCU_ATTA",
            dataValueField: "ID_TYPE_DOCU_ATTA",
            filter: "contains",
            index: 1,
            autoBind: true,
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Total"
                },
                transport: {
                    read: "/TypeDocumentModule/ListByModule/1?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");


        var ID_QUEU = $("#ID_QUEU").kendoComboBox({
            autoBind: false,
            cascadeFrom: "ID_CATE_3",
            dataTextField: "DES_QUEU",
            dataValueField: "ID_QUEU",
            placeholder: "Seleccione...",
            filter: "contains",
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountQueue/ListByAcco?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        $("#ID_QUEU").data("kendoComboBox").enable(false);

        @*ID_QUEU.bind("dataBound", function () {
            cb = $("#ID_QUEU").data("kendoComboBox");
            ds = cb.dataSource;
            data = ds.data();
            for (var i = 0; i <= data.length - 1; i++) {
                if (parseInt('@ViewBag.ID_QUEU') == data[i].ID_QUEU && swt == 0) {
                    ID_QUEU.value(data[i].ID_QUEU);
                    swt = 1;
                }
            }
            $.ajax({
                url: "/AccountEntity/TicketSeleccionarAsignadoA/" + '@ViewBag.ID_QUEU',
                type: "GET",
                cache: false,
                dataType: "text",
                success: function (source) {
                    if (source != '0') {
                        ID_PERS_ENTI_ASSI.value(source);
                    }
                    else {
                        ID_PERS_ENTI_ASSI.value(@ViewBag.ID_PERS_ENTI_ASSI);
                    }
                    //ID_PERS_ENTI_ASSI.value(source);
                    validaCapacidadUsuario($("#ID_PERS_ENTI_ASSI").val());
                },
                error: function (source) {
                }
            });
        });*@

        ID_QUEU.bind("change", function (e) {
            //ID_STAT.value(ID_QUEU.dataItem().ID_STAT);
            //ID_PERS_ENTI_ASSI.value(ID_QUEU.dataItem().ID_PERS_ENTI_ASSI_DEFA);
            $.ajax({
                url: "/AccountEntity/TicketSeleccionarAsignadoA/" + $("#ID_QUEU").val(),
                type: "GET",
                cache: false,
                dataType: "text",
                success: function (source) {
                    //alert(source);
                    console.log(source)
                    if (source != "") { //source != '0'
                        //alert(1);
                        console.log(source)
                        ID_PERS_ENTI_ASSI.value(source);
                    }
                    else {
                        //alert(2);
                        //ID_PERS_ENTI_ASSI.value(@ViewBag.ID_PERS_ENTI_ASSI);
                        var data = ID_PERS_ENTI_ASSI.dataSource.view();
                         for (var i = 0; i <= data.length - 1; i++) {
                                if (parseInt('@ViewBag.ID_PERS_ENTI_ASSI') == data[i].ID_PERS_ENTI ) {
                                    ID_PERS_ENTI_ASSI.value(data[i].ID_PERS_ENTI);

                                }
                            }
                    }
                },
                error: function (source) {
                }
            });


            IdSLA.dataSource.read();
            IdSLA.one("dataBound", function () {
                ID_PRIO.dataSource.read();
                ID_PRIO.value("3");
            });
            ID_PRIO.value("3");
        });

        var ID_PERS_ENTI_ASSI = $("#ID_PERS_ENTI_ASSI").kendoComboBox({
            autoBind: false,
            cascadeFrom: "ID_QUEU",
            filter: "contains",
            dataTextField: "ASSI",
            template: '<div style="text-transform:capitalize; display: inline-block; width:100%;">' +
                                      '<div style="float:left;">${data.ASSI}</div>' +
                                      '<div style="float:right; ">(WL ${data.WorkLoad})</div>' +
                                  '</div>',
            dataValueField: "ID_PERS_ENTI",
            placeholder: "Seleccionar ... ",

            dataSource: {
                //type: "odata",
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/AssigneByQueue?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        @*ID_PERS_ENTI_ASSI.bind("dataBound", function () {
            cbPE = $("#ID_PERS_ENTI_ASSI").data("kendoComboBox");
            ds = cbPE.dataSource;
            console.log(ds)
            data = ds.data();
            for (var i = 0; i <= data.length - 1; i++) {
                if (parseInt('@ViewBag.ID_PERS_ENTI_ASSI') == data[i].ID_PERS_ENTI && (swt == 0 || swt == 1)) {
                    ID_PERS_ENTI_ASSI.value(data[i].ID_PERS_ENTI);
                    ID_STAT = $("#ID_STAT").data("kendoComboBox");
                    //ID_STAT.value(1);
                    swt = 2;
                }
            }
        });*@

        ID_PERS_ENTI_ASSI.bind("change", function (e) {
            console.log('cambio')
            validaCapacidadUsuario($("#ID_PERS_ENTI_ASSI").val());
        });

        var ID_STAT = $("#ID_STAT").kendoComboBox({
            autoBind: true,
            //cascadeFrom: "ID_QUEU",
            //placeholder: "Select Status...",
            filter:"contains",
            dataTextField: "NAM_STAT",
            dataValueField: "ID_STAT",
            index: 0,
            dataSource: {
                //type: "odata",
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/StatusTicket/List"
                },
                sort: { field: "NAM_STAT", dir: "asc" }
            }
        }).data("kendoComboBox");

        ID_STAT.bind("change", function (e) {
            //debugger
            if (@Session["ID_ACCO"] == 60) {
                $("#divRazon").removeAttr("hidden");

                if (ID_STAT.dataItem().ID_STAT == 4) {
                    $("#DivSolucion").removeAttr("hidden");
                }
                else
                {
                    $("#DivSolucion").attr("hidden", true);
                    $("#Solucion").val('');
                }

            }
            else {
                $("#divRazon").attr("hidden", true);
                $('#IdRazon').attr('value', 0);

                    //$("#IdRazon").val('');
                }

            if (ID_STAT.dataItem().ID_STAT == 5) {
                //$("#divFecIniTick").removeClass('divHide');

                $("#divFecIniTick").removeAttr("hidden");

                if (@Session["ID_ACCO"] == 60) {
                    var FEC_INI_TICK = $("#FEC_INI_TICK").kendoDateTimePicker().data("kendoDateTimePicker");

                    FEC_INI_TICK.min("@ViewBag.DATE");
                    FEC_INI_TICK.value("@ViewBag.DATE");

                }

            }

            else {
                //$("#divFecIniTick").addClass('divHide');
                $("#divFecIniTick").attr("hidden", true);
                $("#FEC_INI_TICK").val('');
                    //FEC_INI_TICK.value("");

            }
        });

        var ID_CATE_N1 = $("#ID_CATE_N1").kendoComboBox({
            autoBind: false,
            dataTextField: "NAM_CATE",
            filter: "contains",
            cascadeFrom: "ID_TYPE_TICK",
            //cascadeFrom: "ID_ACCOUNT_CAT",
            dataValueField: "ID_CATE",
            placeholder: "Seleccionar ... ",
            dataSource: {
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Administrator/ListCategory?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        ID_CATE_N1.bind("change", function (e) {
            if (ID_CATE_N1.dataItem()) {
                $('#ID_CAT_N1').attr('value', ID_CATE_N1.dataItem().ID_CATE);
            } else {
                $('#ID_CAT_N1').attr('value', 0);
            }

            if (ID_CATE_N1.value() === "" || ID_CATE_N1.value() === "0") {
                IdSLA.dataSource.data([]);
                IdSLA.value("");

                $("#sla").html('Nivel de Servicio: ');
                $('#sla').css('background', 'white');

                return;
            }

        });



        var IdSLA = $("#IdSLA").kendoComboBox({
            dataTextField: "Nombre",
            dataValueField: "Id",
            filter: "contains",
            autoBind: false,
            delay: 500,
            minLength: 0,
            suggest: true,
            index: -1,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: {
                        url: "/SLA/ListarSLATicketCategory",
                        data: function () {
                            return {
                                idCat1: $("#ID_CATE_N2").val(),
                                idCat2: $("#ID_CATE_N3").val(),
                                idCat3: $("#ID_CATE").val(),
                                idTypeTicket: $("#ID_TYPE_TICK").val()
                            };
                        },
                        dataType: "json"
                    }
                }
            },
            dataBound: function () {
                var comboBox = this;
                var firstItem = comboBox.dataSource.view()[0];
                if (firstItem) {
                    comboBox.value(firstItem.Id);
                }
            }
        }).data("kendoComboBox");


        var ID_CATE_N2 = $("#ID_CATE_N2").kendoComboBox({
            autoBind: false,
            filter: "contains",
            cascadeFrom: "ID_CATE_N1",
            dataTextField: "NAM_CATE2",
            dataValueField: "ID_CATE2",
            delay:500,
            placeholder: "Seleccionar ... ",
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Administrator/ListCategory2?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        ID_CATE_N2.bind("change", function (e) {
            if (ID_CATE_N2.dataItem()) {
                $('#ID_CAT_N2').attr('value', ID_CATE_N2.dataItem().ID_CATE2);

            } else {
                $('#ID_CAT_N2').attr('value', 0);
                if (@Session["ID_ACCO"] ==60) {
                    $("#IdTipoPase").data("kendoComboBox").select("");
                    $("#IdModTrabajo").data("kendoComboBox").select("");

                }
            }

            if (ID_CATE_N2.value() === "" || ID_CATE_N2.value() === "0") {
                IdSLA.dataSource.data([]); 
                IdSLA.value("");
                $("#sla").html('Nivel de Servicio: ');
                $('#sla').css('background', 'white');
                return; 
            }

          
            IdSLA.dataSource.transport.options.read.data = function () {
                return {
                    idCat1: $("#ID_CATE_N2").val(),
                    idCat2: 0,
                    idCat3: 0,
                    idTypeTicket: $("#ID_TYPE_TICK").val()
                };
            };



        });


            var ID_CATE_N3 = $("#ID_CATE_N3").kendoComboBox({
                autoBind: false,
                filter: "contains",
                cascadeFrom: "ID_CATE_N2",
                dataTextField: "NAM_CATE3",
                dataValueField: "ID_CATE3",
                placeholder: "Seleccionar ... ",
                dataSource: {
                    serverFiltering: true,
                    schema: {
                        data: "Data",
                        total: "Count"
                    },
                    transport: {
                        read: "/Administrator/ListCategory3?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                    }
                },
                change: function () {  // <-- Coma aquí para separar las propiedades
                    var value = this.value();
                    if (value) {
                        // Habilitar el ComboBox ID_QUEU y limpiar cualquier selección previa
                        $("#ID_QUEU").data("kendoComboBox").enable(true);
                    } else {
                        // Deshabilitar el ComboBox ID_QUEU y limpiar cualquier selección previa
                        $("#ID_QUEU").data("kendoComboBox").enable(false);
                    }
                    // Limpiar el valor seleccionado en el ComboBox ID_QUEU
                    $("#ID_QUEU").data("kendoComboBox").value(null);
                }
            }).data("kendoComboBox");



        ID_CATE_N3.bind("change", function (e) {
            if (ID_CATE_N3.dataItem()) {
                $('#ID_CAT_N3').attr('value', ID_CATE_N3.dataItem().ID_CATE3);
            }
            else {
                $('#ID_CAT_N3').attr('value', 0);
            }


            if ((ID_CATE_N3.value() === "" || ID_CATE_N3.value() === "0") && (ID_CATE_N2.value() === "" || ID_CATE_N2.value() === "0")) {
                IdSLA.dataSource.data([]);
                IdSLA.value("");
                return;
            } else if(ID_CATE_N3.value() === "" || ID_CATE_N3.value() === "0") {
                IdSLA.dataSource.transport.options.read.data = function () {
                    return {
                        idCat1: $("#ID_CATE_N2").val(),
                        idCat2: 0,
                        idCat3: 0,
                        idTypeTicket: $("#ID_TYPE_TICK").val()
                    };
                };

            }


            IdSLA.dataSource.transport.options.read.data = function () {
                return {
                    idCat1: $("#ID_CATE_N2").val(),
                    idCat2: $("#ID_CATE_N3").val(),
                    idCat3: 0,
                    idTypeTicket: $("#ID_TYPE_TICK").val()
                };
            };

            IdSLA.dataSource.read();


        });

        var ID_PRIO = $("#ID_PRIO").kendoComboBox({
            dataTextField: "Prioridad",
            dataValueField: "IdPrioridad",
            filter: "contains",
            cascadeFrom: "ID_QUEU",
            autoBind: false,
            delay: 500,
            minLength: 0,
            suggest: true,
            //index: 0,
            //value: "3",
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: {
                        url: function () {
                            var selectedValue = IdSLA.value();
                                return "/SLA/ListarCboPrioridadxSLABNV?MacroServicio=" + $("#ID_CATE_N1").val() +
                                    "&Categoria1=" + $("#ID_CATE_N2").val() +
                                    "&Categoria2=" + $("#ID_CATE_N3").val() +
                                    "&TypeTicket=" + $("#ID_TYPE_TICK").val()+
                                    "&idGrupo=" + $("#ID_QUEU").val()+
                                    "&idSLA=" + selectedValue;

                        },
                        dataType: "json"
                    }
                }
            },
            dataBound: function () {
                actualizarSLA();
            }
        }).data("kendoComboBox");



        function actualizarSLA() {
            var selectedValue = ID_PRIO.value();
            var cbPrioridad = $("#ID_PRIO").data("kendoComboBox");

            if (selectedValue == "1") {
                $("#sla").html('Acuerdo del Nivel de Servicio: ' + cbPrioridad.dataItem().TiempoAtencion + ' Horas');
                $('#sla').css('background', 'red');
            } else if (selectedValue == "2") {
                $("#sla").html('Acuerdo del Nivel de Servicio: ' + cbPrioridad.dataItem().TiempoAtencion + ' Horas');
                $('#sla').css('background', 'orange');
            } else if (selectedValue == "3") {
                $("#sla").html('Acuerdo del Nivel de Servicio: ' + cbPrioridad.dataItem().TiempoAtencion + ' Horas');
                $('#sla').css('background', 'yellow');
            } else if (selectedValue == "4") {
                $("#sla").html('Acuerdo del Nivel de Servicio: ' + cbPrioridad.dataItem().TiempoAtencion + ' Horas');
                $('#sla').css('background', 'aqua');
            } else if (selectedValue == "5") {
                $("#sla").html('Acuerdo del Nivel de Servicio: ' + cbPrioridad.dataItem().TiempoAtencion + ' Horas');
                $('#sla').css('background', 'gray');
            } else {
                $("#sla").html('Nivel de Servicio: ');
                $('#sla').css('background', 'white');
            }
        }

        ID_PRIO.bind("change", function () {
            actualizarSLA();
        });

        IdSLA.bind("change", function () {
            $("#sla").html('Nivel de Servicio: ');
            $('#sla').css('background', 'white');
        });


        IdSLA.bind("change", function () {
            var idSLAValue = IdSLA.value();
            if (idSLAValue) {
                actualizarSLA();
            }
        });


        //ID_PRIO.bind("change", function () {
        //    actualizarSLA();
        //});

        $('#ID_CATE').change(function () {

            if ((ID_CATE_N4.value() === "" || ID_CATE_N4.value() === "0") && ((ID_CATE_N3.value() != "" || ID_CATE_N3.value() != "0")) && ((ID_CATE_N2.value() != "" || ID_CATE_N2.value() != "0"))) {
                IdSLA.dataSource.transport.options.read.data = function () {
                    return {
                        idCat1: $("#ID_CATE_N2").val(),
                        idCat2: $("#ID_CATE_N3").val(),
                        idCat3: 0,
                        idTypeTicket: $("#ID_TYPE_TICK").val()
                    };
                };

                IdSLA.dataSource.read();


            } else {
                IdSLA.dataSource.transport.options.read.data = function () {
                    return {
                        idCat1: $("#ID_CATE_N2").val(),
                        idCat2: $("#ID_CATE_N3").val(),
                        idCat3: $("#ID_CATE").val(),
                        idTypeTicket: $("#ID_TYPE_TICK").val()
                    };
                };

                IdSLA.dataSource.read();


            }


        });


        var ID_CATE_N4 = $("#ID_CATE").kendoComboBox({
            autoBind: true,
            filter: "contains",
            cascadeFrom: "ID_CATE_N3",
            dataTextField: "NAM_CATE4",
            dataValueField: "ID_CATE4",
            placeholder: "Seleccionar ... ",
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Administrator/ListCategory4?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        //ID_CATE_N4.bind("change", function (e) {
        //    if (ID_CATE_N4.dataItem()) {
        //        $('#ID_CAT').attr('value', ID_CATE_N4.dataItem().ID_CATE4);
        //        if (ID_CATE_N4.dataItem().ID_TYPE_TICK != 0) {
        //            ID_TYPE_TICK.value(ID_CATE_N4.dataItem().ID_TYPE_TICK);
        //        }
        //    }
        //    else {
        //        $('#ID_CAT').attr('value', 0);
        //    }
        //});




        ID_CATE_N4.bind("change", function (e) {
            //alert(ID_CATE_N4.dataItem().ID_CATE4 );
            if (@Session["ID_ACCO"] == 60) {
                var IDCATE = ID_CATE_N4.dataItem().ID_CATE4

                $.ajax({
                    url: "/CategoryTicket/ListarPermisoCategoriaBNV/" + IDCATE,
                    type: "GET",
                    cache: false,
                    dataType: "json",
                    success: function (data) {
                        //alert(data)
                        if (data == "OK") {

                            $("#AnaTipoPaseLoca").removeAttr("hidden");
                            $("#divSolman").removeAttr("hidden");

                        }
                        else {
                            //$("#divlocacion").attr("hidden", true);
                            //$('#ID_LOCA').attr('value', 0);

                            //$("#ID_LOCA").data("kendoComboBox").select(-1);
                            $("#AnaTipoPaseLoca").attr("hidden", true);
                            $("#IdTipoPase").data("kendoComboBox").select(-1);
                            $("#ID_PERS_ENTI_ANLT").data("kendoComboBox").select(-1);
                            $("#divSolman").attr("hidden", true);
                            $("#Solman").val('');
                        }

                    },
                    error: function (source) {
                    }
                });

                //if (ID_CATE_N4.dataItem().ID_CATE4 == 21354) {
                //    $("#divlocacion").removeAttr("hidden");
                //    $("#div_AnlsTipoPaseModTrab").removeAttr("hidden");
                //    $("#divSolman").removeAttr("hidden");

                //}

            }

            if (ID_CATE_N3.dataItem()) {
                $('#ID_CATE_N4').attr('value', ID_CATE_N4.dataItem().ID_CATE4);
            }
            else {
                $('#ID_CATE_N4').attr('value', 0);
            }

        });

        var ID_TICK_PARENT = $("#ID_TICK_PARENT").kendoComboBox({
            autoBind: false,
            //cascadeFrom: "ID_CATE",
            //enable: false,
            dataTextField: "COD_TICK",
            dataValueField: "ID_TICK",
            suggest: true,
            dataSource: {
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Ticket/TicketParent?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        $('#IS_PARENT').click(function () {
            var $this = $(this);
            // $this will contain a reference to the checkbox
            if ($this.is(':checked')) {
                ID_TICK_PARENT.value("");
                ID_TICK_PARENT.enable(false);
                //alert('SI');
            } else {
                // the checkbox was unchecked
                ID_TICK_PARENT.enable(true);
            }
        });

        //var ID_ASSE = $("#ID_ASSE").kendoComboBox({
        //    autoBind: false,
        //    dataTextField: "Codigo",
        //    dataValueField: "IdActivo",
        //    filter: "contains",
        //    delay: 500,
        //    minLength: 0,
        //    suggest: true,
        //    //template: kendo.template($("#PlantillaActivo").html()),
        //    dataSource: {
        //        serverFiltering: true,
        //        schema: {
        //            data: "Data",
        //            total: "Count"
        //        },
        //        transport: {
        //            read: "/DeliveryReception/FiltrarActivoRecepcion?IdPersEnti=0"
        //        }
        //    }
        //}).data("kendoComboBox");
        //ID_ASSE.list.width(350);


        var IDGRUPO = $("#IDGRUPO").kendoComboBox({
            autoBind: true,
            dataTextField: "NOMBRE",
            dataValueField: "IDGRUPO",
            //placeholder: "Seleccione un grupo",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Grupo/ListarCboGrupoCuentaEstado?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var IDPLAN = $("#IDPLAN").kendoComboBox({
            autoBind: true,
            cascadeFrom: "IDGRUPO",
            /*placeholder: "",*/
            dataTextField: "NOMBRE",
            dataValueField: "ID_PLAN",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Plantilla/ListarPlantillaGrupo?ID_TIPOPLAN=1"

                }
            }
        }).data("kendoComboBox");

        //var ID_LOCA = $("#ID_LOCA").kendoComboBox({
        //    cascadeFrom: "ID_COMP",
        //    autoBind: true,
        //    dataTextField: "text",
        //    dataValueField: "id",
        //    index: 1,
        //    filter: "contains",
        //    delay: 500,
        //    minLength: 0,
        //    suggest: true,
        //    dataSource: {
        //        serverFiltering: true,
        //        schema: {
        //            data: "Data",
        //            total: "Count"
        //        },
        //        transport: {
        //            read: "/Location/ListarLocacionxCuenta"
        //        }
        //    }
        //}).data("kendoComboBox");
        var ID_LOCA = $("#ID_LOCA").kendoComboBox({
            //cascadeFrom: "ID_COMP",
            //autoBind: true,
            dataTextField: "text",
            dataValueField: "id",
            //template: '<div><div style="font-weight:bold">${ data.NamSite }</div>' +
            //    '<div>${ data.NamLoca }</div></div>',
            //index: 0,
            placeholder: "Seleccionar ... ",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data"
                },
                transport: {
                    read: "/Location/ListarLocacionesxCompaniaBnv?var=" + Math.random()
                },
                sort: { field: "text", dir: "asc" }
            }
        }).data("kendoComboBox");

        var ID_TIPOPASE = $("#IdTipoPase").kendoComboBox({
            autoBind: true,
            filter: "contains",
            //cascadeFrom: "ID_CATE_N4",
            dataTextField: "text",
            dataValueField: "id",
            //index: 1,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Ticket/ListarTipoPase",
                }
            }
        }).data("kendoComboBox");

        var ID_MODTRABAJO = $("#IdModTrabajo").kendoComboBox({
            autoBind: true,
            dataTextField: "text",
            dataValueField: "id",
            filter: "contains",
            index: 1,
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Ticket/ListarModalidadTrabajo"
                }
            }
        }).data("kendoComboBox");

        var ID_RAZON = $("#IdRazon").kendoComboBox({
            autoBind: true,
            cascadeFrom: "ID_STAT",
            dataTextField: "text",
            dataValueField: "id",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            index: 0,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/StatusTicket/ListarRazonxEstado?IDESTADO=" + 0 + "&Tipo=" + 1 + "&var=" + Math.random()

                }
            }
        }).data("kendoComboBox");

    });

    var ID_PERS_ENTI_ANLT = $("#ID_PERS_ENTI_ANLT").kendoComboBox({
        autoBind: true,
        dataTextField: "Personal",
        dataValueField: "IdPersEnti",
        //index: 1,
        filter: "contains",
        delay: 500,
        minLength: 0,
        suggest: true,
        dataSource: {
            serverFiltering: true,
            schema: {
                data: "Data",
                total: "Count"
            },
            transport: {
                read: "/AccountEntity/ListarPersonalxCuenta?IdCuenta=" + @Session["ID_ACCO"],
            }
        }
    }).data("kendoComboBox");

    var IdGrupoReportador = $("#IdGrupoReportador").kendoComboBox({
        autoBind: true,
        dataTextField: "NomGrupoReportador",
        dataValueField: "IdGrupoReportador",
        index: 1,
        filter: "contains",
        delay: 500,
        minLength: 0,
        suggest: true,
        dataSource: {
            serverFiltering: true,
            schema: {
                data: "Data",
                total: "Count"
            },
            transport: {
                read: "/Ticket/ListarGrupoReportador?var="  + Math.random(),
            }
        }
    }).data("kendoComboBox");

    function OnPaste(e) {
        //var texto = e.html
        //if ((/^<img src="/).test(e.html)) {
        //    toastr.warning("No se permiten imágenes en este campo.");
        //    e.html = "";
        //}
        //if (texto.includes('<img data-imagetype=')) {
        //    toastr.warning("No se permiten imágenes en este campo.");
        //    e.html = "";
        //}
        if (/<img\s+[^>]*>/i.test(e.html)) {
            toastr.warning("No se permiten imágenes en este campo.");
            e.html = "";
        } else if ((/^<img src="data:image/).test(e.html)) {
            toastr.warning("No se permiten imágenes en este campo.");
            e.html = "";
        }
    }
    function a_entero(valor) {
        //intento convertir a entero.
        //si era un entero no le afecta, si no lo era lo intenta convertir
        valor = parseInt(valor);
        //comprobamos si es un valor entero
        if (isNaN(valor)) {
            //no es entero 0
            return 0;
        } else {
            //es un valor entero
            return valor;
        }
    }
    function EditContact() {
        //var combobox = $("#ID_PERS_ENTI").data("kendoComboBox");
        //if (a_entero(combobox.value()) > 0) {
        //    var htmlForm = '<div id="FormEditClient"></div>';
        //    winFormPopUpModal("Editar Contacto", htmlForm, 730, 330);
        //    $("#FormEditClient").load("/AccountEntity/ViewEditClient?id=" + combobox.value() + "&var=" + Math.random());
        //}
        //else { $("#divEditCombo").css("display", "none"); }
        var combobox = $("#ID_PERS_ENTI").data("kendoComboBox");

        if (a_entero(combobox.value()) > 0) {
            $("#lblTitulo").text("Editar Solicitante");

            $(".modal-dialog").removeClass("modal-sm");
            $(".modal-dialog").removeClass("modal-lg");
            $(".modal-dialog").addClass("modal-lg");

            $('#modal-content').empty();
            $('#modal-content').load("/AccountEntity/ViewEditClient?id=" + combobox.value() + "&var=" + Math.random());
            @*var htmlForm = '<div id="FormEditClient"></div>';
            winFormPopUpModal("@ResourceLanguaje.Resource.EditContact", htmlForm, 730, 330);
            $("#FormEditClient").load("/AccountEntity/ViewEditClient?id=" + combobox.value() + "&var=" + Math.random());*@
            }
        else { $("#divEditCombo").css("display", "none"); }
    }

    function detailUser(id) {
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/AccountEntity/DetailPersonTicket/" + id,
                    type: "GET",
                    dataType: "json",
                    data: {
                        ran: Math.random()
                    }
                }
            },
            autoSync: true,
            serverFiltering: true,
            filter: { field: "Status", operator: "eq", value: 0 },
            serverPaging: true,
            pageSize: 15,
            schema: {
                data: "Data",
                total: "Count"
            }
        });

        $("#divDetu").empty();

        $("#divDetu").kendoListView({
            dataSource: dataSource,
            template: kendo.template($("#templdu").html())

        });
    }

    function AssetByUser(id) {
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Asset/ListByIdPersEnty/" + id,
                    type: "GET",
                    dataType: "json",
                    data: {
                        ran: Math.random()
                    }
                }
            },
            autoSync: true,
            serverFiltering: true,
            filter: { field: "Status", operator: "eq", value: 0 },
            serverPaging: true,
            pageSize: 8,
            schema: {


                data: "Data",
                total: "Count"
            }
        });

        $("#pagerAssetByUser").kendoPager({
            dataSource: dataSource,
            buttonCount: 3,
            messages: {
                display: "{0} - {1} of {2}",
                empty: "",
                page: "Page",
                of: "of {0}",
                itemsPerPage: "",
                first: "Go to the first page",
                previous: "Go to the previous page",
                next: "Go to the next page",
                last: "Go to the last page",
                refresh: "Refresh"
            },
            refresh: true
        });

        $("#gridAssetByUser").kendoListView({
            dataSource: dataSource,
            template: kendo.template($("#templabu").html())
        });
    }

    function nuevotema() {
        var idcategoria = $("#ID_CATE").val();
        if (idcategoria == "") {
            swal("Seleccione una Categoría", "Nuevo Tema", "info");
            return false;
        }
        $("#myTema").empty();
        $("#myTema").modal("show");
        $.get('/KnowledgeManagement/_NewThemeTicket', { idCategoria: idcategoria }, function (html) {
            $("#myTema").html(html);
        })
    }

    function cargarTemas(id, idcatNivel1) {
        var IdTema = $("#IdTema").kendoComboBox({
            autoBind: false,
            index: -1,
            dataTextField: "Nomtema",
            filter: "contains",
            dataValueField: "IdTema",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/KnowledgeManagement/ListTemaLessonLearned?ID_ACCO=" + id + "&ID_CATE=" + idcatNivel1
                }
            }
        }).data("kendoComboBox");
    }

    var key_atta = $("#KEY_ATTA").val()

    function AdjuntarNuevoTicket() {
        $("#lblTitulo").text("Adjuntar Documentos");

        $(".modal-dialog").removeClass("modal-sm");
        $(".modal-dialog").removeClass("modal-lg");

        $('#modal-content').empty();
        $('#modal-content').load('/Ticket/AdjuntarArchivosNuevoTicket/?KEY_ATTA=' + key_atta);
    }

    function validaCapacidadUsuario(id) {
        // Valida la capacidad del usuario relacionado a los tickets (por cuenta)
        $.ajax({
            url: "/Capacidad/ValidarCantidadTicket_PersAsignado/" + id,
            type: "GET",
            cache: false,
            dataType: "text",
            success: function (source) {
                if (source != "") {
                    $("#capacidadTicket").removeClass("divHide");
                    $("#capacidadTicket").attr("alt", source);
                    $("#capacidadTicket").attr("title", source);
                }
            },
            error: function (source) {
            }
        });
    }

    function UltimosTickets(id) {
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Ticket/ListaUltimosTickets/" + id,
                    type: "GET",
                    dataType: "json",
                    data: {
                        ran: Math.random()
                    }
                }
            },
            autoSync: true,
            serverFiltering: true,
            //filter: { field: "Status", operator: "eq", value: 0 },
            serverPaging: true,
            pageSize: 10,
            schema: {
                data: "Data",
                total: "Count",
                ID_TICK: "ID_TICK"
            }
        });

        dataSource.read().then(function () {
            var data = dataSource.data();
            for (var i = 0; i < data.length; i++) {
                var item = data[i];
                var ID_TICK = item.ID_TICK; // Obtén el valor de ID_TICK
                var enlace = "/DetailsTicket/Index/" + ID_TICK; // URL de redireccionamiento
                // Genera el enlace en tu etiqueta label
                var labelHtml = '<label id="" class="" style="text-transform: capitalize; font-weight: bold;">' + item.COD_TICK + ' - ' + ID_TICK + '</label>';
                // Agrega el enlace a tu elemento HTML
                // Supongamos que tienes un elemento con el ID "miElemento" donde deseas agregar el enlace
                $("#miElemento").append('<a href="' + enlace + '">' + labelHtml + '</a>');
            }
        });

        $("#pagerUltimosTickets").kendoPager({
            dataSource: dataSource,
            buttonCount: 3,
            messages: {
                display: "{0} - {1} of {2}",
                empty: "",
                page: "Page",
                of: "of {0}",
                itemsPerPage: "",
                first: "Go to the first page",
                previous: "Go to the previous page",
                next: "Go to the next page",
                last: "Go to the last page",
                refresh: "Refresh"
            },
            refresh: true
        });

        $("#gridUltimosTickets").kendoListView({
            dataSource: dataSource,
            template: kendo.template($("#templut").html())
        });
    }

    function filterTicket(filt,id) {
        if ($("#pagerUltimosTickets").data("kendoPager")) {
            $("#pagerUltimosTickets").data("kendoPager").destroy(); 
            $("#pagerUltimosTickets").empty(); 
        }

        if ($("#gridUltimosTickets").data("kendoListView")) {
            $("#gridUltimosTickets").data("kendoListView").destroy(); 
            $("#gridUltimosTickets").empty(); 
        }

        $("#miElemento").empty();
        var codTickFilter = (filt === 1) ? "RE" : (filt === 2) ? "IN" : "";

        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Ticket/ListaUltimosTickets/" + id,
                    type: "GET",
                    dataType: "json",
                    data: {
                        ran: Math.random(),
                        filter: codTickFilter
                    }
                }
            },
            autoSync: true,
            serverFiltering: true,
            //filter: { field: "Status", operator: "eq", value: 0 },
            serverPaging: true,
            pageSize: 10,
            schema: {
                data: "Data",
                total: "Count",
                ID_TICK: "ID_TICK"
            }
        });

        dataSource.read().then(function () {
            var data = dataSource.data();
            for (var i = 0; i < data.length; i++) {
                var item = data[i];
                var ID_TICK = item.ID_TICK; // Obtén el valor de ID_TICK
                var enlace = "/DetailsTicket/Index/" + ID_TICK; // URL de redireccionamiento
                // Genera el enlace en tu etiqueta label
                var labelHtml = '<label id="" class="" style="text-transform: capitalize; font-weight: bold;">' + item.COD_TICK + ' - ' + ID_TICK + '</label>';
                // Agrega el enlace a tu elemento HTML
                // Supongamos que tienes un elemento con el ID "miElemento" donde deseas agregar el enlace
                $("#miElemento").append('<a href="' + enlace + '">' + labelHtml + '</a>');
            }
        });

        $("#pagerUltimosTickets").kendoPager({
            dataSource: dataSource,
            buttonCount: 3,
            messages: {
                display: "{0} - {1} of {2}",
                empty: "",
                page: "Page",
                of: "of {0}",
                itemsPerPage: "",
                first: "Go to the first page",
                previous: "Go to the previous page",
                next: "Go to the next page",
                last: "Go to the last page",
                refresh: "Refresh"
            },
            refresh: true
        });

        $("#gridUltimosTickets").kendoListView({
            dataSource: dataSource,
            template: kendo.template($("#templut").html())
        });
    }

    function NewContact() {
        $("#lblTitulo").text("Nuevo Solicitante");

        $(".modal-dialog").removeClass("modal-sm");
        $(".modal-dialog").removeClass("modal-lg");
        $(".modal-dialog").addClass("modal-lg");

        $('#modal-content').empty();
        $('#modal-content').load("/AccountEntity/ViewNewClient?id=" + $("#ID_CIA").val() + "&var=" + Math.random());

        @*var htmlForm = '<div id="FormNewClient"></div>';
        winFormPopUpModal("@ResourceLanguaje.Resource.NewContact", htmlForm, 730, 390);
        $("#FormNewClient").load("/AccountEntity/ViewNewClient?id=" + $("#ID_CIA").val() + "&var=" + Math.random());*@
        }

</script>

<script type="text/javascript">
    function NewClient() {
        var htmlForm = '<div id="FormNewClient"></div>';
        winFormPopUpModal("Nuevo Ciente", htmlForm, 740, 390);
        $("#FormNewClient").load("/AccountEntity/ViewNewClient?var=" + Math.random());
    }
</script>

<script type="text/javascript">
    var vector = {}, ctime;
    vector.s = 0;
    vector.m = 0;
    vector.h = 0;
    const btCrear = document.getElementById("myBtn");
    function show5(vector) {
        var hours = vector.h;
        var minutes = vector.m;
        var seconds = vector.s;

        vector.s = vector.s + 1;
        if (vector.s == 60) {
            vector.s = 0;
            vector.m = vector.m + 1;
        }

        if (vector.m == 60) {
            vector.m = 0;
            vector.h = vector.h + 1;
        }
        //change color
        myclock = "Resolución de primera llamada: <span style='color:" + (vector.h >= 1 ? 'red' : (vector.m > 20 ? 'red' : 'black')) + "'>"
            + (hours <= 9 ? '0' : '') + hours + ":"
            + (minutes <= 9 ? '0' : '') + minutes + ":"
            + (seconds <= 9 ? '0' : '') + seconds + "</span>";
        if (document.layers) {
            document.layers.liveclock.document.write(myclock)
            document.layers.liveclock.document.close()
        }
        else if (document.all)
            liveclock.innerHTML = myclock
        else if (document.getElementById)
            document.getElementById("liveclock").innerHTML = myclock;
        ctime = setTimeout("show5(vector);", 1000);
    }

    if (ctime) {
        clearTimeout(ctime);
    }
    //show5(vector);
</script>

<script type="text/ecmascript">
    var DivHeight = $("#divNewTicket").height();
    var divDetailsTicket = $("#divDetailsTicket").height();
    var divDetailsUser = $("#divDetailsUser").height();
    var divTitleDetailsTicket = $("#divTitleDetailsTicket").height();
    $("#divAssetByUser").height(DivHeight - divDetailsTicket - 20 - divTitleDetailsTicket * 2 - divDetailsUser - 2);
    $("#gridAssetByUser").height(DivHeight - divDetailsTicket - 20 - divTitleDetailsTicket * 2 - divDetailsUser -2- 55);
</script>