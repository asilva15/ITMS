@model ERPElectrodata.Models.TICKET

@{
    Layout = null;
}
    <style>

       
        
    </style>
<link href="~/Content/themes/plugin/select2/select2.css" rel="stylesheet" />
<script src="~/Content/themes/plugin/select2/select2.full.js"></script>
<link href="~/Content/themes/plugin/datepicker/datepicker3.css" rel="stylesheet" />
<script src="~/Content/themes/plugin/datepicker/bootstrap-datepicker.js"></script>

@*<script src="~/Scripts/highcharts/highcharts.js"></script>
<script src="~/Scripts/highcharts/highcharts-more.js"></script>
<script src="~/Scripts/highcharts/modules/solid-gauge.src.js"></script>
<script src="~/Scripts/highcharts/modules/exporting.js"></script>*@
<input type="hidden" id="IdIdioma" name="IdIdioma" value="@Session["IdIdioma"]" />

<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div class="page-title-icon">
                <i class="fa fa-user-check icon-gradient bg-sunny-morning"> </i>
            </div>
            <div>
                Busqueda avanzada
                <div class="page-title-subheading">

                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            @using (Html.BeginForm("Export", "Ticket", FormMethod.Post, new { id = "FrmFindTicket" }))
            {
                @Html.ValidationSummary(true)
                <div class="card-body">
                    <input type="hidden" name="HD_Estados" id="HD_Estados" value="" />
                    <div class="card-title">Buscar Ticket</div>


                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtCodigoTicket" for="txtCodigoTicket" class="right">Código Ticket </label>
                                @Html.TextBoxFor(model => model.COD_TICK, new { @class = "form-control", @placeholder = "Código del Ticket" })
                                @Html.ValidationMessageFor(model => model.COD_TICK)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtEstado" for="txtEstado" class="">Estado </label>
                                <select id="ID_STAT_END" class="form-control select2" multiple="multiple" type="text" style="width:100%" />
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtCompaniaS" for="txtCompaniaS" class="">Compañia Solicitante </label>
                                @Html.EditorFor(model => model.ID_COMP, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_COMP)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtCompaniaF" for="txtCompaniaF" class="">Compañía Final </label>
                                @Html.EditorFor(model => model.ID_COMP_END, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ID_COMP_END)
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtSolicitante" for="txtSolicitante" class="">Solicitante </label>
                                @Html.EditorFor(model => model.ID_PERS_ENTI)
                                @Html.ValidationMessageFor(model => model.ID_PERS_ENTI)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtUsuarioF" for="txtUsuarioF" class="">Usuario Final </label>
                                @Html.EditorFor(model => model.ID_PERS_ENTI_END)
                                @Html.ValidationMessageFor(model => model.ID_PERS_ENTI_END)
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtAreaResponsable" for="txtAreaResponsable" class="">Área Responsable </label>
                                @Html.EditorFor(model => model.ID_QUEU)
                                @Html.ValidationMessageFor(model => model.ID_QUEU)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtAsignadoa" for="txtAsignadoa" class="">Asignado a </label>
                                @Html.EditorFor(model => model.ID_PERS_ENTI_ASSI)
                                @Html.ValidationMessageFor(model => model.ID_PERS_ENTI_ASSI)
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtTipoTicket" for="txtTipoTicket" class="">Tipo Ticket </label>
                                @Html.EditorFor(model => model.ID_TYPE_TICK)
                                @Html.ValidationMessageFor(model => model.ID_TYPE_TICK)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtPrioridad" for="txtPrioridad" class="">Prioridad </label>
                                @Html.EditorFor(model => model.ID_PRIO)
                                @Html.ValidationMessageFor(model => model.ID_PRIO)
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtUnidad" for="txtUnidad" class="">Unidad de Negocio </label>
                                @Html.EditorFor(model => model.ID_CATE)
                                @Html.ValidationMessageFor(model => model.ID_CATE)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtMacro" for="txtMacro" class="">Macroservicio </label>
                                @Html.Editor("ID_SUB_CATE")
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtServicio" for="txtServicio" class="">Servicio </label>
                                @Html.Editor("ID_CLAS")
                                @Html.ValidationMessageFor(model => model.ID_CATE)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtInciReque" for="txtInciReque" class="">Incidente/Requerimiento </label>
                                @Html.Editor("ID_SUB_CLAS")
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtMedio" for="txtMedio" class="">Medio de Comunicación </label>
                                @Html.EditorFor(model => model.ID_SOUR)
                                @Html.ValidationMessageFor(model => model.ID_SOUR)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtComentario" for="txtComentario" class="">Comentario </label>
                                @Html.TextBoxFor(model => model.SUM_TICK, new { @class = "form-control", @placeholder = "Comentario" })
                                @Html.ValidationMessageFor(model => model.SUM_TICK)
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtFinicio" for="txtFinicio" class="">Fecha Inicio </label>
                                @Html.TextBox("START_DATE")
                                @Html.ValidationMessageFor(model => model.MODIFIED_TICK)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtFfin" for="txtFfin" class="">Fecha Fin </label>
                                @Html.TextBox("END_DATE")
                                @Html.ValidationMessageFor(model => model.DELETE_TICK)
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="chServicio" for="chServicio" class="">Servicio </label>
                                @Html.CheckBox("SERVICE", false)
                                @Html.ValidationMessageFor(model => model.SERVICE)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="txtCreadopor" for="txtCreadopor" class="">Creador por </label>
                                @Html.EditorFor(model => model.UserId)
                                @Html.ValidationMessageFor(model => model.UserId)
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="chServicio" for="chServicio" class="">Fecha Programada </label>
                                @Html.TextBox("FechaProgramada")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">&nbsp; </label>
                                <button id="find" class="mb-2 mr-2 btn-pill btn btn-primary btn-block"><span>Buscar</span></button>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">&nbsp; </label>
                                <button id="export" class="mb-2 mr-2 btn-pill btn btn-success btn-block" onclick="Exportar();"><span>Exportar</span></button>
                            </div>
                        </div>


                    </div>

                </div>
            }
        </div>
    </div>
    <div class="col-md-3">
        <div class="main-card mb-3 card">
            <div class="card-body">
                <div class="card-title">Tickets Por Estado</div>

                <div id="pie"></div>


            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="main-card mb-3 card">
            <div class="card-body">
                <div class="card-title">Tickets Por Estado</div>

                <div id="line"></div>


            </div>
        </div>
    </div>
</div>


<div id="gridTickets" class="contentView">

</div>
<div style="clear:both;"></div>
<div id="pagerTickets" class="contentViewPager">
</div>

<script type="text/javascript">
    $(document).ready(function () {
        //cambioIdiomaTexto();
        //cambioIdiomaxLlave('BúsquedaAvanzada|CódigoTicket|Estado|CompañíaSolicitante|CompañíaFinal|Solicitante|UsuarioFinal|ÁreaResponsable|Asignadoa|TipoTicket|Prioridad|UnidaddeNegocio|Macroservicio|Servicio|Incidente/Requerimiento|MediodeComunicación|Comentario|FechaInicio|FechaFin|Servicio|Creadopor|FechaProgramada|Buscar|Exportar|TicketsporEstados');

        $("#ID_STAT_END").select2({
            placeholder: 'Seleccione...',
            minimumInputLength: 0,
            multiple: true,
            allowClear: true,
            ajax: {
                url: "/StatusTicket/ListarEstado",
                dataType: 'json',
                quietMillis: 100,
                data: function (params) {
                    return {
                        q: params.term,
                        page: params.page
                    };
                },
                processResults: function (data, page) {
                    return { results: data };
                },
            },
        });



        //var ID_STAT_END = $("#ID_STAT_END").kendoComboBox({
        //    autoBind: true,
        //    index: -1,
        //    dataTextField: "NAM_STAT",
        //    filter: "contains",
        //    dataValueField: "ID_STAT",
        //    dataSource: {
        //        schema: {
        //            data: "Data",
        //            total: "Count"
        //        },
        //        transport: {
        //            read: "/StatusTicket/List?var=" + Math.random()
        //        }
        //    }
        //}).data("kendoComboBox");

        var ID_COMP = $("#ID_COMP").kendoComboBox({
            autoBind: false,
            dataTextField: "COM_NAME",
            dataValueField: "ID_ENTI",
            filter: "contains",
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/ListCompanyByAccount?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_COMP_END = $("#ID_COMP_END").kendoComboBox({
            autoBind: false,
            dataTextField: "COM_NAME",
            dataValueField: "ID_ENTI",
            filter: "contains",
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/ListCompanyByAccount?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_CATE = $("#ID_CATE").kendoComboBox({
            autoBind: false,
            index: -1,
            dataTextField: "NAM_CATE",
            filter: "contains",
            //template: '<div style="text-transform:capitalize; display: inline-block; width:100%;">' +
            //                          '<div style="float:left;">${data.ASSI}</div>' +
            //                          '<div style="float:right; ">(WL ${data.WorkLoad})</div>' +
            //                      '</div>',
            dataValueField: "ID_CATE",
            dataSource: {
                //type: "odata",
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/CategoryTicket/ListCategory?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_SUB_CATE = $("#ID_SUB_CATE").kendoComboBox({
            autoBind: false,
            index: -1,
            dataTextField: "NAM_CATE",
            filter: "contains",
            cascadeFrom: "ID_CATE",
            dataValueField: "ID_CATE",
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/CategoryTicket/ListCategory?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_CLAS = $("#ID_CLAS").kendoComboBox({
            autoBind: false,
            index: -1,
            dataTextField: "NAM_CATE",
            filter: "contains",
            cascadeFrom: "ID_SUB_CATE",
            dataValueField: "ID_CATE",
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/CategoryTicket/ListCategory?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_SUB_CLAS = $("#ID_SUB_CLAS").kendoComboBox({
            autoBind: false,
            index: -1,
            dataTextField: "NAM_CATE",
            filter: "contains",
            cascadeFrom: "ID_CLAS",
            dataValueField: "ID_CATE",
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/CategoryTicket/ListCategory?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var UserId = $("#UserId").kendoComboBox({
            autoBind: false,
            index: -1,
            dataTextField: "USUARIO",
            filter: "contains",
            //template: '<div style="text-transform:capitalize; display: inline-block; width:100%;">' +
            //                          '<div style="float:left;">${data.ASSI}</div>' +
            //                          '<div style="float:right; ">(WL ${data.WorkLoad})</div>' +
            //                      '</div>',
            dataValueField: "UserId",
            dataSource: {
                //type: "odata",
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Ticket/PersonCreateTicket?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_PERS_ENTI = $("#ID_PERS_ENTI").kendoComboBox({
            autoBind: false,
            cascadeFrom: "ID_COMP",
            filter: "contains",
            dataTextField: "CLIE",
            dataValueField: "ID_PERS_ENTI",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/RequesterByCIA?_=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_PERS_ENTI_END = $("#ID_PERS_ENTI_END").kendoComboBox({
            autoBind: false,
            cascadeFrom: "ID_COMP",
            filter: "contains",
            dataTextField: "CLIE",
            dataValueField: "ID_PERS_ENTI",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/RequesterByCIA?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        //var ID_PERS_ENTI_END = $("#ID_PERS_ENTI_END").kendoComboBox({
        //    autoBind: false,
        //    cascadeFrom: "ID_PERS_ENTI",
        //    filter: "contains",
        //    dataTextField: "CLIE",
        //    dataValueField: "ID_PERS_ENTI",
        //    delay: 500,
        //    minLength: 0,
        //    suggest: true,
        //    dataSource: {
        //        serverFiltering: true,
        //        schema: {
        //            data: "Data",
        //            total: "Count"
        //        },
        //        transport: {
        //            read: "/AccountEntity/AEUByAcco?var=" + Math.random()
        //        }
        //    }
        //}).data("kendoComboBox");

        var ID_TYPE_TICK = $("#ID_TYPE_TICK").kendoComboBox({
            autoBind: false,
            index: 0,
            dataTextField: "NAM_TYPE_TICK",
            dataValueField: "ID_TYPE_TICK",
            suggest: true,
            dataSource: {
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/TypeTicket/List?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_PRIO = $("#ID_PRIO").kendoComboBox({
            autoBind: false,
            //index: 1,
            //cascadeFrom: "ID_PERS_ENTI_END",
            //placeholder: "Select Priority...",
            dataTextField: "NAM_PRIO",
            dataValueField: "ID_PRIO",
            dataSource: {
                //type: "odata",
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Priority/List"
                }
            }
        }).data("kendoComboBox");

        var ID_SOUR = $("#ID_SOUR").kendoComboBox({
            index: 1,
            autoBind: false,
            dataTextField: "NAM_SOUR",
            dataValueField: "ID_SOUR",
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/SourceTicket/List"
                }
            }
        }).data("kendoComboBox");

        var ID_QUEU = $("#ID_QUEU").kendoComboBox({
            autoBind: false,
            filter: "contains",
            dataTextField: "QUEU",
            template: '<div style="text-transform:capitalize; display: inline-block; width:100%; height:35px; position:relative; ">' +
                '<span><strong>${data.QUEU}</strong></span><br />' +
                '<span style="font-size:.9em; position:absolute; top:15px;">${data.DES_QUEU}</span></div>',
            dataValueField: "ID_QUEU",
            dataSource: {
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountQueue/ListByAcco?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_PERS_ENTI_ASSI = $("#ID_PERS_ENTI_ASSI").kendoComboBox({
            autoBind: false,
            //index: 1,
            //cascadeFrom: "ID_QUEU",
            filter: "contains",
            dataTextField: "ASSI",
            template: '<div style="text-transform:capitalize; display: inline-block; width:100%;">' +
                '<div style="float:left;">${data.ASSI}</div>' +
                '<div style="float:right; ">(WL ${data.WorkLoad})</div>' +
                '</div>',
            dataValueField: "ID_PERS_ENTI",
            dataSource: {
                //type: "odata",
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/AssigneForFind?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var START_DATE = $("#START_DATE").kendoDateTimePicker().data("kendoDateTimePicker");
        var END_DATE = $("#END_DATE").kendoDateTimePicker().data("kendoDateTimePicker");
        var FechaProgramada = $("#FechaProgramada").kendoDateTimePicker().data("kendoDateTimePicker");
    });

    function cambioIdiomaTexto() {
        idIdioma = $("#IdIdioma").val();
        if (idIdioma != 0) {
            $.ajax({
                url: "/Account/cambioIdiomaTexto?IdIdioma=" + idIdioma,
                type: "GET",
                cache: false,
                dataType: "json",
                success: function (source) {
                    data = source;
                    var valTextos = new Array()
                    $.each(data['Data'], function (index) {
                        valTextos.push((data['Data'][index]));
                    });
                    for (var i = 0; i < valTextos.length; i++) {
                        var valores = valTextos[i].split("|");
                        var valorLlave = valores[1];
                        var valorTexto = valores[0];
                        var clases = document.getElementsByClassName(valorLlave);
                        for (var j = 0; j < clases.length; j++) {
                            clases[j].innerText = valorTexto;
                        }
                    }
                },
                error: function (source) {
                }
            });
        }
    }

    function traducir(idIdioma, llave) {
        idIdioma = $("#IdIdioma").val();
        if (idIdioma != 0) {
            $.ajax({
                url: "/Idioma/traducir?llave=" + llave + "&IdIdioma=" + idIdioma,
                type: "GET",
                dataType: "text",
                cache: false,
                succes: function (data) {
                    return (data);
                }
            })
        }
    }


    var DivHeight = $("#divFindTicket").height();
    $("#divIntervalDate").height(DivHeight);
    $("#divByStatus").height(DivHeight);
    //$("#pie").height(DivHeight - 2);
    //$("#line").height(DivHeight - 2);

</script>

@*<script type="text/x-kendo-tmpl" id="template">
        <div class="incidentHomeList">
            <div class = "incidentHomeListBlock1 hasLayout">
                <div class = "incidentHomeListHeader">
                <div class="">
                    <div id ="${ID_INCI}" onclick="child(this)" class="${PARENT}">
                    </div>
                    <div class="status">
                        ${NAM_STAT}
                    </div>
                    <div class="incidentHomeRequesterIcon" title="Affected End User">
                        ${REQU}
                    </div>
                    <div class="incidentHomeCreate" title="Creation date @ResourceLanguaje.Resource.DateFormat">
                        Create: ${CREATE_INCI}
                    </div>
                    <div class="incidentHomeModified" title="Modification date @ResourceLanguaje.Resource.DateFormat">
                        Modified: ${MODIFIED_INCI}
                    </div>
                    <div class="incidentHomeExpTime" title="Expiration Time">
                        Expiration Time: ${EXP_TIME}
                    </div>
                </div>
                    <div class="${ICO_PRIO}">
                        ${NAM_PRIO}
                    </div>
                </div>
            </div>
            <div class = "incidentHomeSumary" >
                <a href="${URL}${ID_INCI}" TARGET='_BLANK'>#= SUM_INCI #</a>
            </div>
            <div class="contraya">
                <div class="raya"></div>
            </div>
            <div class="incidentHomeRes">
                <div class="ticket">${NAM_TYPE_TICK} \\#
                ${COD_INCI}</div>
                <div class="cateTicket" >${NAM_CATE} - ${NAM_SUBC}</div>
                <div class="viaTicket">Via ${NAM_SOUR}</div>
                <div class="createBy">Create By: ${CREATEBY}</div>
                <div class="assignedTo">Assigned To: ${ASSI}</div>
            </div>
        </div>

        <div  id="btn${ID_INCI}">
        </div>

        <div style="clear:both">
        </div>
    </script>*@

<script type="text/x-kendo-tmpl" id="template">
    <a href="\\#${URL}${ID_INCI}" class="text-decoration-none" target="_blank">
        <div class="card-body py-3 btn-shadow btn-outline-focus">
            <div class="row no-gutters align-items-center">
                <div class="col-4">
                    <div class="small">
                        ${NAM_TYPE_TICK} ${COD_INCI}
                    </div>
                    
                    # if (VIS_COMP) { #
                    <div class="small"><b>${REQU} </b></div>
                    # } else { #
                    <div class="small"><b>${REQU}</b></div>
                    # } #
                    <div class="small">Creado: ${CREATEBY} ${CREATE_INCI}</div>
                    <div class="small">Actualizado: ${MODIFIED_INCI}</div>
                </div>
                <div class="col-6">
                    <div class="small">Asignado a: ${ASSI}</div>
                    <div class="small">${NAM_CATE} > ${NAM_SUBC} > </div>
                </div>
                <div class="d-none d-md-block col-2">
                    <div class="row no-gutters align-items-center">

                        <div class="media col-12 align-items-center">
                            
                            <div class="media-body flex-truncate ml-2">

                                # if(NAM_PRIO.indexOf("p1") > -1) {#
                                <div class="badge badge-danger"> ${NAM_STAT} | ${NAM_PRIO} </div>
                                # } #
                                # if(NAM_PRIO.indexOf("p2") > -1) {#
                                <div class="badge badge-warning"> ${NAM_STAT} | ${NAM_PRIO}</div>
                                # } #
                                # if(NAM_PRIO.indexOf("p3") > -1) {#
                                <div class="badge badge-success"> ${NAM_STAT} | ${NAM_PRIO}</div>
                                # } #
                                # if(NAM_PRIO.indexOf("p4") > -1) {#
                                <div class="badge badge-info"> ${NAM_STAT} | ${NAM_PRIO}</div>
                                # } #
                                # if(NAM_PRIO.indexOf("p5") > -1) {#
                                <div class="badge badge-dark"> ${NAM_STAT} | ${NAM_PRIO}</div>
                                # } #

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </a>

</script>

<script type="text/javascript">

    function Graficos() {
        $("#pie").empty()

        $("#pie").append("<div id='Mensaje' style='text-align: center;'>" +
                         "<br /><br /><br /><br /><br /><br /><h4>Cargando...</h4><br /><img src='../../Images/spinner.gif' style='height: 30%; width: 30%; text-align: center;'></div>");
        $("#line").empty()

        $("#line").append("<div id='Mensaje' style='text-align: center;'>" +
                          "<br /><br /><br /><br /><br /><br /><h4>Cargando...</h4><br /><img src='../../Images/spinner.gif' style='height: 30%; width: 30%; text-align: center;'></div>");
        var IdEstados = new String($("#ID_STAT_END").val());

        if (IdEstados == null || IdEstados == "null"){
            IdEstados = 0;
        }

        $("#pagerTickets").empty();
        $("#gridTickets").empty();

        if ($("#gridTickets").data("kendoListView")) {
            $("#pagerTickets").data("kendoPager").destroy();
            $("#gridTickets").data("kendoListView").destroy();
        }

        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Ticket/FindResult/0?" + $('#FrmFindTicket').serialize() + "&IdEstados=" + IdEstados,
                    type: "GET",
                    dataType: "json",
                    data: {
                        ran: Math.random()
                    }
                }
            },
            autoSync: true,
            serverFiltering: true,
            filter: { field: "Status", operator: "eq", value: 0 },
            serverPaging: true,
            pageSize: 15,
            schema: {
                data: "Data",
                total: "Count"
            }
        });

        $("#pagerTickets").kendoPager({
            dataSource: dataSource,
            pageSizes: [15, 30, 65],
            refresh: true
        });

        $("#gridTickets").kendoListView({
            dataSource: dataSource,
            template: kendo.template($("#template").html())
        });

        //AJAX PARA GRÁFICAS
        $.ajax({
            url: "/Ticket/FindResult/0?" + $('#FrmFindTicket').serialize() + "&IdEstados=" + IdEstados+ "&skip=0&take=0",
            dataType: 'json',
            cache: false,
            async: true,
            success: function (json) {

                //console.log(json['line']);
                var CatLine = new Array();
                var CloseLine = new Array();
                var ActiveLine = new Array();
                var ScheduledLine = new Array();
                //txt.push(traducir($("#IdIdioma").val(), 'Desde'));
                //txt.push(traducir($("#IdIdioma").val(), 'Hasta'));
                //txt.push(traducir($("#IdIdioma").val(), 'TicketsCerrados'))
                //pie

                $.each(json['legend'], function (index, value) {
                    CatLine[index] = value['name'] + ' ' + value['Year'].toString().substring(2, 4);
                    CloseLine[index] = null;
                    ActiveLine[index] = null;
                    ScheduledLine[index] = null;
                });


                $.each(json['lineClose'], function (index, value) {
                    var i = CatLine.indexOf(value['name'] + ' ' + value['Year'].toString().substring(2, 4));
                    CloseLine[i] = value['RES_COUN'];
                });

                $.each(json['lineOpen'], function (index, value) {
                    var x = CatLine.indexOf(value['name'] + ' ' + value['Year'].toString().substring(2, 4));
                    ActiveLine[x] = value['RES_COUN'];
                });

                $.each(json['lineScheduled'], function (index, value) {
                    var y = CatLine.indexOf(value['name'] + ' ' + value['Year'].toString().substring(2, 4));
                    ScheduledLine[y] = value['RES_COUN'];
                });

                $('#pie').highcharts({
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false
                    },
                    title: {
                        text: null
                    },
                    subtitle: {
                        text: 'Desde' + ' '
                            + json['From'] + ' '+ 'Hasta' +' '
                            + json['To'] + '<br>' + 'Cuenta' + ': ' + json['CountClose']
                    },
                    credits: {
                        enabled: false
                    },
                    tooltip: {
                        pointFormat: 'Percentage: <b>{point.percentage:.2f}%</b><br>Quantity: <b>{point.y}</b>',
                        percentageDecimals: 2
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            size: '55%',
                            showInLegend: true,
                            dataLabels: {
                                enabled: true,
                                color: '#000000',
                                connectorColor: '#000000',
                                format: '<b>{point.name}</b>: {point.percentage:.2f} %',
                                distance: -10
                            }
                        }
                    },
                    series: [{
                        type: 'pie',
                        name: 'Browser share',
                        data: json['Pie']
                    }]
                });
                //fin pie

                //line
                $('#line').highcharts({
                    chart: {
                        type: 'line',
                        marginRight: 10,
                        marginTop: 20//,
                        //marginBottom: 10
                    },
                    credits: {
                        enabled: false
                    },
                    title: {
                        text: null
                    },
                    subtitle: {
                        text: null
                    },
                    xAxis: {
                        categories: CatLine,
                        gridLineWidth: 1
                    },
                    yAxis: {
                        title: {
                            text: '@ResourceLanguaje.Resource.Tickets'
                        },
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        crosshairs: true,
                        shared: true
                    },
                    plotOptions: {
                        line: {
                            lineWidth: 3,
                            marker: { symbol: 'circle' }
                        }
                    },
                    //legend: {
                    //    layout: 'horizontal',
                    //    align: 'center',
                    //    verticalAlign: 'bottom',
                    //    x: -10,
                    //    y: 100,
                    //    borderWidth: 0
                    //},
                    series: [{
                        name: 'Cerrado',
                        data: CloseLine,
                        color: "#516882"
                    },
                    {
                        name: 'Activo',
                        data: ActiveLine,
                        color: "#B21E1E"
                    },
                    {
                        name: 'Programado',
                        data: ScheduledLine,
                        color: "#FFBB00"
                    }]
                });
                //fin line
            }

        });

        //top.cambioIdiomaxLLave("Asignadoa|Creadopor|Creado|UltimaAct");

    }

    $("#find").click(function (event) {
        event.preventDefault();

        Graficos();

    });

    Graficos();
    //cambioIdiomaxLlave('Asignadoa|Creadopor|Creado|UltimaAct');

    function Exportar() {
        var IdEstados = new String($("#ID_STAT_END").val());

        if (IdEstados == null || IdEstados == "null") {
            IdEstados = 0;
        }
        $("#HD_Estados").val(IdEstados);
    }

    function cambioIdiomaPorPalabras(palabras) {
        idIdioma = $("#IdIdioma").val();
        var palabra;
        palabra = palabras.split("|");
        if (idIdioma != 0) {
            $.ajax({
                url: "/Account/cambioIdiomaTexto?IdIdioma=" + idIdioma,
                type: "GET",
                cache: false,
                dataType: "json",
                success: function (source) {
                    data = source;
                    var valTextos = new Array()
                    $.each(data['Data'], function (index) {
                        valTextos.push((data['Data'][index]));
                    });
                    var newValTexto = [];
                    for (var c = 0; c < valTextos.length; c++) {
                        for (var k = 0; k < palabra.length; k++) {
                            if (valTextos[c].split('|')[1] == palabra[k]) {
                                newValTexto.push(valTextos[c]);
                            }
                        }
                    }
                    for (var i = 0; i < newValTexto.length; i++) {
                        var valores = newValTexto[i].split("|");
                        var valorLlave = valores[1];
                        var valorTexto = valores[0];
                        var clases = document.getElementsByClassName(valorLlave);
                        for (var j = 0; j < clases.length; j++) {
                            clases[j].innerText = valorTexto;
                        }
                    }
                },
                error: function (source) {
                }
            });
        }
    }

    function cambioIdiomaxLlave(llaves) {
        idIdioma = $("#IdIdioma").val();
        if (idIdioma != 0) {
            $.ajax({
                url: "/Account/cambioIdiomaxLlave?llaves=" + llaves,
                type: "GET",
                cache: false,
                dataType: "json",
                success: function (source) {

                    //alert(source);
                    //alert(JSON.stringify(source));

                    data = source;
                    var valTextos = new Array()
                    $.each(data['Data'], function (index) {
                        valTextos.push((data['Data'][index]));
                    });
                    for (var i = 0; i < valTextos.length; i++) {
                        var valores = valTextos[i].split("|");
                        var valorLlave = valores[1];
                        var valorTexto = valores[0];
                        var clases = document.getElementsByClassName(valorLlave);
                        for (var j = 0; j < clases.length; j++) {
                            clases[j].innerText = valorTexto;
                        }
                    }
                },
                error: function (source) {
                }
            });
        }
    }
</script>
