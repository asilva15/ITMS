@model ERPElectrodata.Models.TRANSACTION

@{
    ViewBag.Title = "Create";
    Layout = null;
}

<div class="afterMain">

<div style="float:left;width:60%">
    <div class="titleForm">
        <div class="title">New Transaction</div>
    </div>
    <div class="bodyForm">
        <div class="inBodyForm">
            @using (Html.BeginForm("Create", "Transaction", FormMethod.Post, new { enctype = "multipart/form-data", id = "FrmTransaction", target = "upload_target"  }))
            {
                @Html.ValidationSummary(true)
                <fieldset>
                    <legend>TRANSACTION</legend>
                    @Html.HiddenFor(model=>model.TYP_CHAN)
                    <div class="divFondoUno">            
                        <div class="divSpace3"></div>
                        <div class="divCont3">
                            <div class="editor-label">
                                @ResourceLanguaje.Resource.Type
                            </div>
                            <div class="editor-field">
                                @Html.TextBox("ID_TYPE_TRAN")
                            </div>
                        </div>
                        <div class="divSpace3"></div>
                        <div class="divCont3">
                            <div class="editor-label">
                                @ResourceLanguaje.Resource.Category
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model=>model.ID_CATE_TRAN)
                                @Html.ValidationMessageFor(model => model.ID_CATE_TRAN)
                            </div>
                        </div>
                        <div class="divSpace3"></div>
                        <div class="divCont3">
                            <div class="editor-label">
                                 @ResourceLanguaje.Resource.Currency
                            </div>
                            <div class="k-textbox">
                                <input readonly="readonly" type="text" value="@ViewData["MONEY"]" id="Currency" name="Currency"/>
                            </div>
                        </div>
                    </div>
                    <div class="divFondoDos">            
                        <div class="divSpace3"></div>
                        <div class="divCont3">
                            <div class="editor-label">
                                @ResourceLanguaje.Resource.Year
                            </div>
                            <div class="editor-field">
                                @Html.TextBox("YEA_TRAN")
                            </div>
                        </div>
                        <div class="divSpace3"></div>
                        <div class="divCont3">
                            <div class="editor-label">
                                @ResourceLanguaje.Resource.Month
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model=>model.ID_ACCO_MONT)
                                @Html.ValidationMessageFor(model => model.ID_ACCO_MONT)
                            </div>
                        </div>
                        <div class="divSpace3"></div>
                        <div class="divCont3">
                            <div class="editor-label">
                                 @ResourceLanguaje.Resource.Date @ResourceLanguaje.Resource.DateFormat
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.DAT_TRAN)
                                @Html.ValidationMessageFor(model => model.DAT_TRAN)
                            </div>
                        </div>
                    </div>
                    <div class="divFondoUno">            
                        <div class="divSpace3"></div>
                        <div class="divCont3">
                            <div class="editor-label">
                                @ResourceLanguaje.Resource.Amount
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.AMO_TRANS)
                                @Html.ValidationMessageFor(model => model.AMO_TRANS)
                            </div>
                        </div>
                        <div class="divSpace3"></div>
                        <div class="divCont3"> 
                            <div class="editor-label">
                                IGV
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.IGV_TRAN)
                                @Html.ValidationMessageFor(model => model.IGV_TRAN)
                            </div>
                        </div>
                        <div class="divSpace3"></div>
                        <div class="divCont3"> 
                            <div class="editor-label">
                                Total
                            </div>
                            <div class="editor-field">
                                @Html.Editor("TOT_TRAN")
                            </div>
                        </div>
                    </div>
                    <div class="divFondoUno">            
                        <div class="divSpace3"></div>
                        <div style="width:95.5%;float:left;">
                            <div class="editor-label">
                                @ResourceLanguaje.Resource.Summary
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.DES_TRANS)
                                @Html.ValidationMessageFor(model => model.DES_TRANS)
                            </div>
                        </div>

                    </div>
                    <div class="divFondoUno">
                        <div style="width: 96%; float:left; padding: 0px 0px 0 15px;">
                            <input name="files" id="files" type="file" />
                        </div>
                    </div>
                    <div style="display:inline-block; float:right; padding:0px 15px 15px 5px;">
                        <div style=" float:left; padding:0px 15px 0px 0px; ">
                            <button id="submit" class="k-button" >Create</button>
                        </div>
                        <button id="reset" class="k-button">Cancel</button>
                    </div>        
                </fieldset>
            }
        </div>
    </div>
</div>
<iframe id="upload_target" name="upload_target" src="" style="width:0px;height:0px;border-width:0px;display:none"></iframe>

<div style="float:right;width:39%;">
    <div class="titleForm">
        <div class="title">Financial Review</div>
    </div>
    <div class="bodyForm">
        <div class="inBodyForm" id="divLine">
            <div  style="display:block; width:70%; margin-left:auto; margin-right:auto; margin-top:15px; height:30px;">
                        <div style="display:inline-block; width:45%;">
                            <input id="sinIGV" name="aggregate" onclick="CreateChar(this)"
                                type="radio" value="max" checked="checked" style="float:left; width:20%;" />
                            <label for="sinIGV" style="float:right;padding-top:6px; width:70%;border:0px solid white;">Without IGV</label>
                        </div>

                        <div style="display:inline-block; width:45%;">
                            <input id="conIGV" name="aggregate" onclick="CreateChar(this)"
                                type="radio" value="max" style="float:left; width:20%;" />
                            <label for="conIGV" style="float:right;padding-top:6px; width:70%;">With IGV</label>
                        </div>
            </div>
            <div id="ProfitTresMeses" style="height:300px; width:99%;">
            </div> 
            <div id="ProfitTable" style=" width:50%; margin-left:auto;margin-right:auto;margin-bottom:2%;margin-top:2%;border: 1px solid #e2e2e2; padding:5px 5px 5px 5px; border-radius:4px;">
            </div> 
        </div>
    </div>
</div>

</div>

<div style="height:10px; clear:both;">
</div>
<div style="width:100%;">
    <div style="float:left; width:49.5%;">
        <div style="width:100%;">
            <div class="titleForm">
                <div class="title">Revenues</div>
            </div>
            <div class="bodyForm">
                <div class="inBodyForm">
                    <div id="Revenues" style="height:300px; width:99%;">
                    </div>
                    <div id="TableRevenues" style="width:60%;margin-left:auto;margin-right:auto;margin-bottom:2%;margin-top:2%; border: 1px solid #e2e2e2; padding:5px; border-radius:4px;">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div style="float:right; width:49.5%;">
        <div style="width:100%;">
            <div class="titleForm">
                <div class="title">Expenses</div>
            </div>
            <div class="bodyForm">
                <div class="inBodyForm">
                    <div id="Expenses" style="height:300px; width:99%;">
                    </div>
                    <div id="TableExpenses" style="width:60%;margin-left:auto;margin-right:auto;margin-bottom:2%;margin-top:2%; border: 1px solid #e2e2e2; padding:5px; border-radius:4px;">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
<script type="text/javascript">

    $("#reset").click(function (event) {
        event.preventDefault();

        var title = '@ResourceLanguaje.Resource.OperationCancelled';
        var body = "<div style='border-bottom:1px dotted #dadada;padding:0px 0px 10px 0px;'>" +
        "<div style='padding:10px 0px 10px 0px;'>The operation to perform was cancelled</div>" +
        "<div style='float:right; padding:20px 6px 0px 6px; font-size:0.9em;'>" +
        "<button id='btnContinuer' class='k-button'>Continue</button>" +
        "</div></div>";

        winPopUpModal(title, body, 400, 128);

        $("#btnContinuer").bind("click", function () {
            closeWinModalPopUp();
            location.reload(true);
            });

        $("#closebtnmodal").click(function () {
            location.reload(true);
            });

    });

    $(document).ready(function () {

        $("#submit").click(function () {
            winPopUpModalLoad('@ResourceLanguaje.Resource.SavingYourTicket', '@ResourceLanguaje.Resource.PleaseWait', 300, 130);
        });

    });
</script>

<script type="text/javascript">

    function uploadDone(msg, code){
    
        if (msg == "OK") {
            closeWinModalPopUpLoad();
            winPopUpModal("Information Saved / Notification Send", "<div style='border-bottom:1px dotted #dadada;padding:0px 0px 20px 0px;'>"
           + "<div style='padding:10px 0px 10px 0px;'>Transaccion information was succesfully saved</div>" +
           "<div style='float:right; padding:30px 0px 0px 0px; '>" +
           "<button id='continues' class='k-button'>Continue</button>" +
           "</div></div>"
             , 400, 140);

            var undo = $("#continues")
           .bind("click", function () {
               closeWinModalPopUp();
               $("#ContReportIndex").empty();
               $("#ContReportIndex").load("/Transaction/Create?var=" + Math.random());
           });

            $("#closebtnmodal").click(function () {
                location.reload(true);
            });
        }
        else{
            closeWinModalPopUpLoad();

            var titleAsset = '';
            var messageAsset = '';
            if (code == '0') {
                titleAsset = '@ResourceLanguaje.Resource.InformationMissing';
                 messageAsset = '@ResourceLanguaje.Resource.InformationMissingMsn';
             }
             else if (code == '1') {
                 titleAsset = '@ResourceLanguaje.Resource.BasedDrawback';
                messageAsset = '@ResourceLanguaje.Resource.BasedDrawbackMsn';
            }

            winPopUpModal(titleAsset, "<div style='border-bottom:1px dotted #dadada;padding:0px 0px 20px 0px;'>" +
               "<div style='padding:10px 0px 10px 0px;'>" + messageAsset + "</div>" +
                   "<div style='float:right; padding:30px 0px 0px 0px; '>" +
                   "<button id='continuee' class='k-button'>Continue</button>" +
                   "</div></div>"
                   , 400, 140);

            var undo = $("#continuee")
            .bind("click", function () {
                closeWinModalPopUp();
            });
        }
    }
</script>

<script type="text/javascript">
    $("#IGV_TRAN").kendoNumericTextBox();
    $("#AMO_TRANS").kendoNumericTextBox();
    $("#TOT_TRAN").kendoNumericTextBox();

    var AMO_TRANS = $("#AMO_TRANS").data("kendoNumericTextBox");
    var IGV_TRAN = $("#IGV_TRAN").data("kendoNumericTextBox");
    var TOT_TRAN = $("#TOT_TRAN").data("kendoNumericTextBox");

    $("#YEA_TRAN").kendoComboBox({
        index: 1,
        dataTextField: "ID_ACCO_YEAR",
        dataValueField: "ID_ACCO_YEAR",
        filter: "contains",
        autoBind: true,
        delay: 500,
        minLength: 0,
        suggest: true,
        dataSource: {
            schema: {
                data: "Data",
                total: "Count"
            },
            transport: {
                read: "/AccountingYear/List?var=" + Math.random()
            }
        }
    });
    var YEA_TRAN = $("#YEA_TRAN").data("kendoComboBox");

    $("#ID_ACCO_MONT").kendoComboBox({
        /*index: 0,*/
        /*placeholder: "Select movie",*/
        cascadeFrom: "YEA_TRAN",
        dataTextField: "NAM_ACCO_MONT",
        dataValueField: "ID_ACCO_MONTH",
        filter: "contains",
        autoBind: false,
        delay: 500,
        minLength: 0,
        suggest: true,
        dataSource: {
            //type: "odata",
            serverFiltering: true,
            //serverPaging: true,
            //pageSize: 20,
            schema: {
                data: "Data",
                total: "Count"
            },
            transport: {
                read: "/AccountingMonth/List?var=" + Math.random()
            }
        }
    });

    var ID_ACCO_MONT = $("#ID_ACCO_MONT").data("kendoComboBox");

    ID_ACCO_MONT.bind('dataBound', function (e) {
        ID_ACCO_MONT.value(YEA_TRAN.dataItem().DEFAULT);
    });

    $("#ID_TYPE_TRAN").kendoComboBox({
        index: 0,
        /*placeholder: "Select movie",*/
        dataTextField: "NAM_TYPE_TRAN",
        dataValueField: "ID_TYPE_TRAN",
        filter: "contains",
        autoBind: true,
        delay: 500,
        minLength: 0,
        suggest: true,
        dataSource: {
            //type: "odata",
            //serverFiltering: true,
            //serverPaging: true,
            //pageSize: 20,
            schema: {
                data: "Data",
                total: "Count"
            },
            transport: {
                read: "/TypeTransaction/List?var=" + Math.random()
            }
        }
    });

    var ID_TYPE_TRAN = $("#ID_TYPE_TRAN").data("kendoComboBox");

    //    var cmbSTAT = $("#ID_STAT").data("kendoComboBox");
    ID_TYPE_TRAN.bind("change", function (e) {
        //cmbSTAT.value(cmbQUEU.dataItem().ID_STAT);
        if (ID_TYPE_TRAN.dataItem().ID_TYPE_TRAN == 2) {
            IGV_TRAN.value(0);
            //IGV_TRAN.enable(false);
        }
        else {
            //IGV_TRAN.enable(true);
        }
    });
    $("#ID_CATE_TRAN").kendoComboBox({
        index: 0,
        /*placeholder: "Select movie",*/
        cascadeFrom: "ID_TYPE_TRAN",
        dataTextField: "NAM_CATE_TRAN",
        dataValueField: "ID_CATE_TRAN",
        filter: "contains",
        autoBind: false,
        delay: 500,
        minLength: 0,
        suggest: true,
        dataSource: {
            serverFiltering: true,
            schema: {
                data: "Data",
                total: "Count"
            },
            transport: {
                read: "/CategoryTransaction/List?var=" + Math.random()
            }
        }
    });

    var ID_CATE_TRAN = $("#ID_CATE_TRAN").data("kendoComboBox");

    ID_CATE_TRAN.bind('dataBound', function (e) {
        ID_CATE_TRAN.value(ID_TYPE_TRAN.dataItem().DEFAULT);
        //alert(ID_TYPE_TRAN.dataItem().DEFAULT);
    });



    // bind to the change event
    AMO_TRANS.bind("change", function (e) {
        if (ID_TYPE_TRAN.value() == 1) {
            IGV_TRAN.value(AMO_TRANS.value() * 0.18);
            TOT_TRAN.value(AMO_TRANS.value() * 1.18);
            //IGV_TRAN.enable(true);
        }
        else if (ID_TYPE_TRAN.value() == 2) {
            TOT_TRAN.value(AMO_TRANS.value());
            IGV_TRAN.value(0);
            //IGV_TRAN.enable(false);
        }
    });

    TOT_TRAN.bind("change", function (e) {
        if (ID_TYPE_TRAN.value() == 1) {
            IGV_TRAN.value((TOT_TRAN.value() / 1.18) * 0.18);
            AMO_TRANS.value(TOT_TRAN.value() / 1.18);
            //IGV_TRAN.enable(true);
        }
        else if (ID_TYPE_TRAN.value() == 2) {
            AMO_TRANS.value(TOT_TRAN.value());
            IGV_TRAN.value(0);
            //IGV_TRAN.enable(false);
        }
    });

    $("#files").kendoUpload({
        localization: {
            select: "Attach"
        }
    });

    $("#DAT_TRAN").kendoDateTimePicker();
    $("#DES_TRANS").kendoEditor({
        tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",       
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
        ], encoded: false
    });

</script>

<script type="text/javascript">
    function CreateChar(parm){
        //console.log(parm.id);
        $("#ProfitTable").empty();
        $("#ProfitTresMeses").empty();
        $.ajax({
            url: '/Transaction/ProfitTresMeses?var=' + Math.random()+'&igv='+parm.id,
            dataType: 'json',
            cache: false,
            async: true,
            success: function (json) {

                var namCat = new Array();
                var ingreso = new Array();
                var egreso = new Array();
                var utilidad = new Array();
                var profAVG = 0;
                var div = 0

                $.each(json['result'], function (index, value) {
                    namCat[index] = value['FECHA'].substring(0,1).toUpperCase()+value['FECHA'].substring(1,value['FECHA'].length);
                    ingreso[index] = value['REVENUES'];
                    egreso[index] = value['EXPENSES'];
                    utilidad[index] = value['UTILIDAD'];

                    if (index == 0) {
                        $("#ProfitTable").append('<div style="float:left;width:49.5%;color:black;font-weight:bold;text-transform:capitalize;padding-left:0.5%;"></div');
                        $("#ProfitTable").append('<div style="float:right;width:44.5%;text-align:right;padding-right:0.5%;font-weight:bold;">Profit Rate</div');
                        $("#ProfitTable").append('<div style="clear:both;">' + '</div');
                    }
                    $("#ProfitTable").append('<div style="float:left;width:49.5%;color:black;font-weight:bold;text-transform:capitalize;padding-left:0.5%;">' + namCat[index] + '</div');
                    $("#ProfitTable").append('<div style="float:right;width:44.5%;text-align:right;padding-right:0.5%;">' + Highcharts.numberFormat(value['PROFIT'], 2) + ' %</div');
                    $("#ProfitTable").append('<div style="clear:both;"></div');
                    profAVG = profAVG + value['PROFIT'];
                    div = div+1;
                });

                //$("#ProfitTable").append('<div style="width:100%;margin-left:auto;margin-right:auto;text-align:center;display:block;background-color:black;">Profit Average '+Highcharts.numberFormat(profAVG/6,2)+' % </div');
                $("#ProfitTable").append('<div style="float:left;width:54.5%;color:white;font-weight:bold;text-transform:capitalize;padding-left:0.5%;background-color:black;">Profit Rate Average</div');
                $("#ProfitTable").append('<div style="float:right;width:44.5%;color:white;font-weight:bold;text-align:right;padding-right:0.5%;background-color:black;">' +Highcharts.numberFormat(profAVG/div,2) + ' %</div');
                $("#ProfitTable").append('<div style="clear:both;">' + '</div');

                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: 'ProfitTresMeses',
                        type: 'line',
                        zoomType: 'xy',
                        margin:[20, 20, 80, 60]
                    },
                    colors: ['#516882','#B21E1E','#7CBB00'],
                    title: {
                        text: null//,
                        //x: -20 //center
                    },
                    subtitle: {
                        text: null
                    },
                    credits: {
                        enabled: false
                    },
                    xAxis: {
                        categories: namCat,
                        gridLineWidth:1
                    },
                    yAxis: {
                        title: {
                            text: null
                        },
                        lineWidth:1,
                        gridLineWidth:1,
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        crosshairs: true,
                        shared: true,
                        valueDecimals:2,
                        valuePrefix:"@ViewData["SIM_MONE_ACCO"] "/*,
                        formatter: function () {
                            return '<b>' + this.series.name + '</b><br/>' +
                        '<b>'+this.x+'</b><br/>'+"@ViewData["SIM_MONE_ACCO"]"+' ' +  Highcharts.numberFormat(this.y,2);
                }*/
                },
            plotOptions: {
                line: { lineWidth: 3,
                    marker: {symbol:'circle'}
                }
            },
            //                    legend: {
            //                        //layout: 'vertical',
            //                        align: 'right',
            //                        verticalAlign: 'top',
            //                        x: -10,
            //                        y: 100,
            //                        borderWidth: 0
            //                    },
            series: [{
                name: 'Revenues',
                data: ingreso
            }, {
                name: 'Expenses',
                data: egreso
            }, {
                name: 'Profit',
                data: utilidad
            }]
        });

    }
    });
    }
</script>

<script type="text/javascript">

    $(document).ready(function () {
        $.ajax({
            url: '/Transaction/ProfitTresMeses?var=' + Math.random()+'&igv=sinIGV',
            dataType: 'json',
            cache: false,
            async: true,
            success: function (json) {

                var namCat = new Array();
                var ingreso = new Array();
                var egreso = new Array();
                var utilidad = new Array();
                var profAVG = 0;
                var div = 0

                $.each(json['result'], function (index, value) {
                    namCat[index] = value['FECHA'].substring(0,1).toUpperCase()+value['FECHA'].substring(1,value['FECHA'].length);
                    ingreso[index] = value['REVENUES'];
                    egreso[index] = value['EXPENSES'];
                    utilidad[index] = value['UTILIDAD'];

                    if (index == 0) {
                        $("#ProfitTable").append('<div style="float:left;width:49.5%;color:black;font-weight:bold;text-transform:capitalize;padding-left:0.5%;"></div');
                        $("#ProfitTable").append('<div style="float:right;width:44.5%;text-align:right;padding-right:0.5%;font-weight:bold;">Profit Rate</div');
                        $("#ProfitTable").append('<div style="clear:both;">' + '</div');
                    }
                    $("#ProfitTable").append('<div style="float:left;width:49.5%;color:black;font-weight:bold;text-transform:capitalize;padding-left:0.5%;">' + namCat[index] + '</div');
                    $("#ProfitTable").append('<div style="float:right;width:44.5%;text-align:right;padding-right:0.5%;">' + Highcharts.numberFormat(value['PROFIT'], 2) + ' %</div');
                    $("#ProfitTable").append('<div style="clear:both;">' + '</div');
                    profAVG = profAVG + value['PROFIT'];
                    div = div+1;
                });

                //$("#ProfitTable").append('<div style="width:100%;margin-left:auto;margin-right:auto;text-align:center;display:block;background-color:black;">Profit Average '+Highcharts.numberFormat(profAVG/6,2)+' % </div');
                $("#ProfitTable").append('<div style="float:left;width:54.5%;color:white;font-weight:bold;text-transform:capitalize;padding-left:0.5%;background-color:black;">Profit Rate Average</div');
                $("#ProfitTable").append('<div style="float:right;width:44.5%;color:white;font-weight:bold;text-align:right;padding-right:0.5%;background-color:black;">' +Highcharts.numberFormat(profAVG/div,2) + ' %</div');
                $("#ProfitTable").append('<div style="clear:both;">' + '</div');

                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: 'ProfitTresMeses',
                        type: 'line',
                        zoomType: 'xy',
                        margin:[20, 20, 80, 60]
                    },
                    colors: ['#516882','#B21E1E','#7CBB00'],
                    title: {
                        text: null//,
                        //x: -20 //center
                    },
                    subtitle: {
                        text: null
                    },
                    credits: {
                        enabled: false
                    },
                    xAxis: {
                        categories: namCat,
                        gridLineWidth:1
                    },
                    yAxis: {
                        title: {
                            text: null
                        },
                        lineWidth:1,
                        gridLineWidth:1,
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        crosshairs: true,
                        shared: true,
                        valueDecimals:2,
                        valuePrefix:"@ViewData["SIM_MONE_ACCO"] "/*,
                        formatter: function () {
                            return '<b>' + this.series.name + '</b><br/>' +
                        '<b>'+this.x+'</b><br/>'+"@ViewData["SIM_MONE_ACCO"]"+' ' +  Highcharts.numberFormat(this.y,2);
                }*/
                },
            plotOptions: {
                line: { lineWidth: 3,
                    marker: {symbol:'circle'}
                }
            },
            //                    legend: {
            //                        //layout: 'vertical',
            //                        align: 'right',
            //                        verticalAlign: 'top',
            //                        x: -10,
            //                        y: 100,
            //                        borderWidth: 0
            //                    },
            series: [{
                name: 'Revenues',
                data: ingreso
            }, {
                name: 'Expenses',
                data: egreso
            }, {
                name: 'Profit',
                data: utilidad
            }]
        });

    }
    });

    $.ajax({
        url: '/Transaction/ComparisonTable/1?var=' + Math.random(),
        dataType: 'json',
        cache: false,
        async: true,
        success: function (json) {
            var MES1 = 0;
            var MES2 = 0;

            $.each(json['result'], function (index, value) {

                if (index == 0) {
                    $("#TableRevenues").append('<div style="float:left;width:50%"></div');
                    $("#TableRevenues").append('<div style="float:right;width:24.5%;font-weight:bold;text-align:right;padding-right:0.5%;">' + value['MES1'] + '</div');
                    $("#TableRevenues").append('<div style="float:right; width:25%;font-weight:bold;text-align:right">' + value['MES2'] + '</div');
                    $("#TableRevenues").append('<div style="clear:both;">' + '</div');
                }
                $("#TableRevenues").append('<div style="float:left;width:49.5%;color:#516882;font-weight:bold;text-transform:capitalize;padding-left:0.5%;">' + value['NAM_CATE_TRAN'] + '</div');
                $("#TableRevenues").append('<div style="float:right;width:24.5%;text-align:right;padding-right:0.5%;">' + Highcharts.numberFormat(value['TOTAL1'], 2) + '</div');
                $("#TableRevenues").append('<div style="float:right; width:25%;text-align:right">' + Highcharts.numberFormat(value['TOTAL2'], 2) + '</div');
                $("#TableRevenues").append('<div style="clear:both;">' + '</div');

                MES1 = MES1 + value['TOTAL1'];
                MES2 = MES2 + value['TOTAL2'];
            });

            $("#TableRevenues").append('<div style="float:left;width:49.5%;background-color:#516882;font-weight:bold;color:white;padding-left:0.5%;">Total Revenues</div');
            $("#TableRevenues").append('<div style="float:right;width:24.5%;background-color:#516882;font-weight:bold;color:white;text-align:right;padding-right:0.5%;">' + Highcharts.numberFormat(MES1, 2) + '</div');
            $("#TableRevenues").append('<div style="float:right; width:25%;background-color:#516882;font-weight:bold;color:white;text-align:right">' + Highcharts.numberFormat(MES2, 2) + '</div');
            $("#TableRevenues").append('<div style="clear:both;">' + '</div');
        }
    });

    $.ajax({
        url: '/Transaction/ComparisonTable/2?var=' + Math.random(),
        dataType: 'json',
        cache: false,
        async: true,
        success: function (json) {
            var MES1 = 0;
            var MES2 = 0;

            $.each(json['result'], function (index, value) {

                if (index == 0) {
                    $("#TableExpenses").append('<div style="float:left;width:50%"></div');
                    $("#TableExpenses").append('<div style="float:right;width:24.5%;font-weight:bold;text-align:right;padding-right:0.5%;">' + value['MES1'] + '</div');
                    $("#TableExpenses").append('<div style="float:right; width:25%;font-weight:bold;text-align:right">' + value['MES2'] + '</div');
                    $("#TableExpenses").append('<div style="clear:both;">' + '</div');
                }
                $("#TableExpenses").append('<div style="float:left;width:49%;color:#B21E1E;font-weight:bold;text-transform:capitalize;padding-left:0.5%;">' + value['NAM_CATE_TRAN'] + '</div');
                $("#TableExpenses").append('<div style="float:right;width:24.5%;text-align:right;padding-right:0.5%;">' + Highcharts.numberFormat(value['TOTAL1'], 2) + '</div');
                $("#TableExpenses").append('<div style="float:right; width:25%;text-align:right;">' + Highcharts.numberFormat(value['TOTAL2'], 2) + '</div');
                $("#TableExpenses").append('<div style="clear:both;">' + '</div');

                MES1 = MES1 + value['TOTAL1'];
                MES2 = MES2 + value['TOTAL2'];
            });

            $("#TableExpenses").append('<div style="float:left;width:49.5%;background-color:#B21E1E;font-weight:bold;color:white;padding-left:0.5%;">Total Expenses</div');
            $("#TableExpenses").append('<div style="float:right;width:24.5%;background-color:#B21E1E;font-weight:bold;color:white;text-align:right;padding-right:0.5%;">' + Highcharts.numberFormat(MES1, 2) + '</div');
            $("#TableExpenses").append('<div style="float:right; width:25%;background-color:#B21E1E;font-weight:bold;color:white;text-align:right;">' + Highcharts.numberFormat(MES2, 2) + ' </div');
            $("#TableExpenses").append('<div style="clear:both;">' + '</div');
        }
    });
    //GRAF 1
    $.ajax({
        url: '/Transaction/Comparison/2?var=' + Math.random(),
        dataType: 'json',
        cache: false,
        async: true,
        success: function (json) {
            //INICIO CHART
            var chart;
            $(document).ready(function () {
                var namCat = new Array();
                var totCat = new Array();
                var money = json['money'];

                $.each(json['result'], function (index, value) {

                    namCat[index] = value['name'];
                    totCat[index] = value['total'];

                });

                var colors = Highcharts.getOptions().colors,
        categories = ['MSIE'],
        name = 'Browser brands',
        data = [{
            y: 55.11,
            color: "#B21E1E",
            drilldown: {
                name: 'MSIE versions',
                categories: namCat,
                data: totCat,
                color: colors[0]
            }
        }];


                // Build the data arrays
                var browserData = [];
                var versionsData = [];
                for (var i = 0; i < data.length; i++) {

                    // add browser data
                    browserData.push({
                        name: categories[i],
                        y: data[i].y,
                        color: data[i].color
                    });

                    // add version data
                    for (var j = 0; j < data[i].drilldown.data.length; j++) {
                        var brightness = j / 10; //0.2 - (j / data[i].drilldown.data.length) / 5;
                        //console.log(j);
                        //console.log(brightness);
                        versionsData.push({
                            name: data[i].drilldown.categories[j],
                            y: data[i].drilldown.data[j],
                            color: Highcharts.Color(data[i].color).brighten(brightness).get()
                        });
                    }
                }

                // Create the chart
                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: 'Expenses',
                        type: 'pie'
                    },
                    credits: {
                        enabled: false
                    },
                    title: {
                        text: null
                    },
                    yAxis: {
                        title: {
                            text: 'Total percent market share'
                        }
                    },
                    plotOptions: {
                        pie: {
                            shadow: false,
                            size: '60%'
                        }
                    },
                    tooltip: {
                        formatter: function () {
                            //console.log(this);
                            return '<div style="text-transform:capitalize; font-weight:bold;" >' + this.key + '</div><br/>' +
                            Highcharts.numberFormat(this.percentage, 2) + ' %';
                        }
                    },
                    series: [{
                        name: 'Versions',
                        data: versionsData,
                        innerSize: '40%',
                        dataLabels: {
                            formatter: function () {
                                // display only if larger than 1
                                return this.y > 1 ? '<div style="text-transform:capitalize; font-weight:bold;">' + this.point.name + '</div><br> ' + money + ' ' + Highcharts.numberFormat(this.point.y, 2) : null;
                            }
                        }
                    }]
                });
            });
            //FIN CHART
        }
    });

    //
    $.ajax({
        url: '/Transaction/Comparison/1?var=' + Math.random(),
        dataType: 'json',
        cache: false,
        async: true,
        success: function (json) {

            //INICIO CHART
            var chart;
            $(document).ready(function () {
                var namCat = new Array();
                var totCat = new Array();
                var money = json['money'];

                $.each(json['result'], function (index, value) {

                    namCat[index] = value['name'];
                    totCat[index] = value['total'];

                });

                var colors = Highcharts.getOptions().colors,
        categories = ['MSIE'],
        name = 'Browser brands',
        data = [{
            y: 55.11,
            color: "#516882",
            drilldown: {
                name: 'MSIE versions',
                categories: namCat,
                data: totCat,
                color: colors[0]
            }
        }];


                // Build the data arrays
                var browserData = [];
                var versionsData = [];
                for (var i = 0; i < data.length; i++) {

                    // add browser data
                    browserData.push({
                        name: categories[i],
                        y: data[i].y,
                        color: data[i].color
                    });

                    // add version data
                    for (var j = 0; j < data[i].drilldown.data.length; j++) {
                        var brightness = j / 10; //0.2 - (j / data[i].drilldown.data.length) / 5;
                        //console.log(brightness);
                        versionsData.push({
                            name: data[i].drilldown.categories[j],
                            y: data[i].drilldown.data[j],
                            color: Highcharts.Color(data[i].color).brighten(brightness).get()
                        });
                    }
                }

                // Create the chart
                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: 'Revenues',
                        type: 'pie'
                    },
                    credits: {
                        enabled: false
                    },
                    title: {
                        text: null
                    },
                    yAxis: {
                        title: {
                            text: 'Total percent market share'
                        }
                    },
                    plotOptions: {
                        pie: {
                            shadow: false,
                            size: '60%'
                        }
                    },
                    tooltip: {
                        formatter: function () {
                            //console.log(this);
                            return '<div style="text-transform:capitalize; font-weight:bold;" >' + this.key + '</div><br/>' +
                            Highcharts.numberFormat(this.percentage, 2) + ' %';
                        }
                    },
                    series: [{
                        name: 'Versions',
                        data: versionsData,
                        innerSize: '40%',
                        dataLabels: {
                            formatter: function () {
                                // display only if larger than 1
                                return this.y > 1 ? '<div style="text-transform:capitalize; font-weight:bold;">' + this.point.name + '</div><br>' + money + ' ' + Highcharts.numberFormat(this.point.y, 2) : null;
                            }
                        }
                    }]
                });
            });
            //FIN CHART
        }
    });
    });

</script>