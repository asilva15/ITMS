@{
    Layout = null;
    var searchList = ViewBag.SearchList as List<int>;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>Organigrama Electrodata</title>

    <link href="~/Content/themes/plugin/primitives/css/jquery-ui.min.css" rel="stylesheet" />
    <script src="~/Content/themes/plugin/primitives/js/jquery.js"></script>
    <script src="~/Content/themes/plugin/primitives/js/jquery-ui.min.js"></script>
    <!-- # include file="src/src.primitives.html"-->
    <script src="~/Content/themes/plugin/primitives/js/primitives.min.js"></script>
    <script src="~/Content/themes/plugin/primitives/js/primitives.jquery.min.js"></script>
    <link href="~/Content/themes/plugin/primitives/css/primitives.latest.css" rel="stylesheet" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <script type='text/javascript'>
        //<![CDATA[
        $(window).ready(function () {
            var listCount = @Html.Raw(Json.Encode(searchList != null ? searchList.Count : 0));
            var searchList = @Html.Raw(Json.Encode(ViewBag.SearchList));

            for (var i = 0; i < listCount; i++) {
                initializeDiagram(i);
            }

            function initializeDiagram(i) {
                var searchIdArea = searchList[i];

                $.ajax({
                    url: '/Organigrama/ObtenerOrganigramaBusqueda?id=' + searchIdArea + '&name=@ViewBag.SearchName',
                    dataType: 'json',
                    cache: false,
                    async: true,
                    success: function (jsonx) {

                        var options = new primitives.orgdiagram.Config();
                        var items = jsonx;

                        options.items = items;
                        options.cursorItem = 0;
                        options.templates = [getDepartmentTitleTemplate()];
                        options.onItemRender = onTemplateRender;
                        options.hasSelectorCheckbox = primitives.common.Enabled.True;
                        options.normalLevelShift = 20;
                        options.dotLevelShift = 20;
                        options.lineLevelShift = 10;
                        options.normalItemsInterval = 10;
                        options.dotItemsInterval = 10;
                        options.lineItemsInterval = 4;

                        jQuery("#basicdiagram_" + i).orgDiagram(options);
                    }
                });
            }

            function onTemplateRender(event, data) {
                switch (data.renderingMode) {
                    case primitives.common.RenderingMode.Create:
                        /* Initialize widgets here */
                        break;
                    case primitives.common.RenderingMode.Update:
                        /* Update widgets here */
                        break;
                }

                var itemConfig = data.context;

                if (data.templateName == "DepartmentTitleTemplate") {
                    data.element.find("[name=titleBackground]").css({ "background": itemConfig.itemTitleColor });

                    var fields = ["title"];
                    for (var index = 0; index < fields.length; index++) {
                        var field = fields[index];

                        var element = data.element.find("[name=" + field + "]");
                        if (element.text() != itemConfig[field]) {
                            element.text(itemConfig[field]);
                        }
                    }
                }
            }

            function getDepartmentTitleTemplate() {
                var result = new primitives.orgdiagram.TemplateConfig();
                result.name = "DepartmentTitleTemplate";
                result.isActive = true;

                /*var buttons = [];
                buttons.push(new primitives.orgdiagram.ButtonConfig("delete", "ui-icon-close", "Delete"));
                buttons.push(new primitives.orgdiagram.ButtonConfig("properties", "ui-icon-gear", "Info"));
                buttons.push(new primitives.orgdiagram.ButtonConfig("add", "ui-icon-person", "Add"));
                buttons.push(new primitives.orgdiagram.ButtonConfig("notice", "ui-icon-notice", "Notice"));
                result.buttons = buttons;*/

                result.itemSize = new primitives.common.Size(200, 30);
                result.minimizedItemSize = new primitives.common.Size(3, 3);
                result.highlightPadding = new primitives.common.Thickness(2, 2, 2, 2);


                var itemTemplate = jQuery(
                    '<div class="bp-item bp-corner-all bt-item-frame">'
                    + '<div name="titleBackground" class="bp-item bp-corner-all bp-title-frame" style="top: 2px; left: 2px; width: 196px; height: 25px;">'
                    + '<div name="title" class="bp-item bp-title" style="top: 3px; left: 6px; width: 188px; height: 23px; text-align:center;">'
                    + '</div>'
                    + '</div>'
                    + '</div>'
                ).css({
                    width: result.itemSize.width + "px",
                    height: result.itemSize.height + "px"
                }).addClass("bp-item");
                result.itemTemplate = itemTemplate.wrap('<div>').parent().html();

                return result;
            }
        });//]]>



    </script>
</head>
<body style="background-color:#0C2A3E">
    <div style="width:100%">
        <div style="width:33%; float:left">
            <img src="http://itms.electrodata.com.pe/images/logoED.png" width="250" />
        </div><div><span style="font-size:xx-large; font-family:Arial;color:white; float:left">ESTRUCTURA ORGANIZACIONAL</span></div>
    </div>
    @if (searchList != null && searchList.Count > 0)
    {
        <div>
            @for (int i = 0; i < searchList.Count; i++)
            {
                
                <div id="basicdiagram_@i" style="margin-bottom: 15px; width: 100%; height: 600px; border-style: dotted; border-width: 1px; background-color:white; float:left;"></div>
            }
        </div>
    }
    else
    {
        <div style="width: 100%; height: 200px; border-style: dotted; border-width: 1px; background-color: white; display: flex; text-align: center; justify-content: center; align-items: center; position: relative;">
            <i class="fa fa-exclamation-triangle" aria-hidden="true" style="font-size: 30px; position: absolute; top: 40px;"></i>
            <h1>No hay resultados para la búsqueda</h1>
        </div>
    }

</body>
</html>
