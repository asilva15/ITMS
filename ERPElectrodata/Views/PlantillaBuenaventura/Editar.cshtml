@model ERPElectrodata.Models.TICKET

@{
    ViewBag.Title = "Create";
    //Layout = null;
}
<style>
    .editCombo {
        position: absolute;
        background-image: url(/Content/Images/Edit.png);
        background-repeat: no-repeat;
        width: 16px;
        height: 16px;
        top: 29px;
        right: 60px;
        cursor: pointer;
    }

    .btn-error {
        color: #fff;
        background-color: #d92550;
        border-color: #d92550;
    }
</style>
<script src="~/Content/themes/plugin/toastr/toastr.min.js"></script>
<link href="~/Content/themes/plugin/toastr/toastr.min.css" rel="stylesheet" />
<link href="~/Content/themes/plugin/iCheck/square/blue.css" rel="stylesheet" />
<script src="~/Content/themes/plugin/iCheck/icheck.js"></script>
<script>
    $(document).ready(function () {
        $('input').iCheck({
            checkboxClass: 'icheckbox_square-blue',
            radioClass: 'iradio_square-blue',
            increaseArea: '20%' // optional
        });
    });
</script>
<input type="hidden" id="Id" name="Id" value="@ViewBag.Id" />
<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div class="page-title-icon">
                <i class="fa fa-user-check icon-gradient bg-sunny-morning"> </i>
            </div>
            <div>
                Edición de Plantillas de Tickets
                <div class="page-title-subheading">
                    Vista de edición de plantillas de tickets.
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-10">
        <div class="main-card mb-3 card">
            <div class="card-header">
                Datos de plantilla
            </div>
            <div class="card-body">
                <form class="">
                    <div class="form-row">
                        <div class="col-md-3">
                            <div class="position-relative form-group">
                                <label for="cbGrupo">Grupo<span style="color:red">(*)</span></label>
                                <input id="cbGrupo" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="position-relative form-group">
                                <label for="txtNombre">Nombre<span style="color:red">(*)</span></label>
                                <input id="txtNombre" type="text" class="form-control" placeholder="Ingrese un nombre para la plantilla">
                            </div>
                        </div>
                    </div>
                    @*<div class="form-row">
                        <div class="col-md-9">
                            <div class="position-relative form-group">
                                <label for="txtNombre">Nombre</label>
                                <input id="txtNombre" type="text" class="form-control" placeholder="Ingrese un nombre para la plantilla">
                            </div>
                        </div>
                    </div>*@
                </form>
            </div>
        </div>
        
        <div class="main-card mb-3 card">
                <input type="hidden" name="hdnSubCuenta" id="hdnSubCuenta" value="" readonly />
                @Html.ValidationSummary(true)
                <div class="card-header">
                    Datos de Ticket
                </div>
                <div class="card-body">
                    <input type="hidden" name="ID_CIA" id="ID_CIA" value="0" />
                    <input type="hidden" value="@ViewBag.UploadFile" name="KEY_ATTA" id="KEY_ATTA" readonly="readonly" />
                    <input type="hidden" name="ID_CAT_N1" id="ID_CAT_N1" value="0" />
                    <input type="hidden" name="ID_CAT_N2" id="ID_CAT_N2" value="0" />
                    <input type="hidden" name="ID_CAT_N3" id="ID_CAT_N3" value="0" />
                    <input type="hidden" name="ID_CAT" id="ID_CAT" value="0" />
                    <input type="hidden" name="FEC_TICK" id="FEC_TICK" value="@ViewBag.DATE" />
                    <input type="hidden" name="IDCATBNV" id="IDCATBNV" />


                    <fieldset>
                        <div class="form-row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label id="" for="" class="">Título de la Solicitud <span style="color:red">(*)</span></label>
                                    @Html.TextBoxFor(model => model.TITLE_TICK, new { @class = "form-control", @placeholder = "Título de la Solicitud" })
                                    @Html.ValidationMessageFor(model => model.TITLE_TICK)
                                </div>
                            </div>

                        </div>
                        <div class="form-row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    Tipo Ticket <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_TYPE_TICK, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_TYPE_TICK)

                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    Prioridad <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_PRIO, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_PRIO)
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    Medio de Comunicación <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_SOUR, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_SOUR)
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    Estado <span style="color:red">(*)</span>
                                    @Html.TextBoxFor(model => model.ID_STAT)
                                    @Html.ValidationMessageFor(model => model.ID_STAT)
                                </div>
                            </div>
                            <div class="col-md-4" id="divFecIniTick" hidden>
                                <div class="form-group">
                                    Fecha Programada
                                    @Html.TextBoxFor(model => model.FEC_INI_TICK)
                                    @Html.ValidationMessageFor(model => model.FEC_INI_TICK)
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    Fecha de recepción de Solicitud
                                    @Html.EditorFor(model => model.FechaRecepcionSolicitud, new { @class = "form-control", @placeholder = "Fecha Recepción de Solicitud" })
                                    @Html.ValidationMessageFor(model => model.FechaRecepcionSolicitud)
                                </div>
                            </div>
                            <div class="col-md-4">
                                @{
                                    if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 60)
                                    {

                                        <div class="form-group" id="divRazon">
                                            Razón
                                            @Html.Editor("IdRazon")
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            Ticket Externo
                                            @{
                                                if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 1)
                                                {
                                                    @Html.TextBoxFor(model => model.TicketExterno, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.TicketExterno)
                                                }
                                            }
                                        </div>
                                    }
                                }

                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-4">
                                <div class="form-group">

                                    <div id="divRequest" class="editor-label">
                                        <span class="">Solicitante</span>
                                    </div>

                                    <div id="divRequestNew" class="editor-label" data-toggle="modal" data-target="#miModal" onclick="NewContact()" style="cursor:pointer; display:none;" title="Register New Contact">
                                        <span class="">Solicitante</span><span style="color:red"> (*)</span>
                                    </div>
                                    @Html.EditorFor(model => model.ID_PERS_ENTI, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_PERS_ENTI)
                                </div>
                                <div id="divEditCombo" style="display:none;" class="editCombo" data-toggle="modal" data-target="#miModal" onclick="EditContact()" title="Editar persona"></div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    Unidad Minera<span style="color:red">(*)</span>
                                    @Html.EditorFor(model => model.ID_COMP, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_COMP)
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    Usuario Afectado<span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_PERS_ENTI_END, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_PERS_ENTI_END)
                                </div>
                            </div>
                            @*<div class="col-md-4">
                                <div class="form-group">

                                    Activo
                                    @Html.EditorFor(model => model.ID_ASSE, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_ASSE)
                                </div>
                            </div>*@
                        </div>


                        <div class="form-row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    Área Responsable <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_QUEU, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_QUEU)
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    Asignado a <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_PERS_ENTI_ASSI, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_PERS_ENTI_ASSI)
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    SLA <span style="color:red">(*)</span>

                                    @Html.Editor("IdSLA")
                                </div>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @*Unidad de Negocio*@
                                    Macroservicio <span style="color:red">(*)</span>

                                    @Html.Editor("ID_CATE_N1")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @*Macroservicio*@
                                    Categoría 1 <span style="color:red">(*)</span>

                                    @Html.Editor("ID_CATE_N2")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @*Servicio*@
                                    Categoría 2 <span style="color:red">(*)</span>

                                    @Html.Editor("ID_CATE_N3")
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @*Incidente/Requerimiento*@
                                    Categoría 3 <span style="color:red">(*)</span>

                                    @Html.EditorFor(model => model.ID_CATE, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_CATE)
                                </div>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    Control Remoto
                                    @Html.CheckBox("REM_CTRL_TICK", false)
                                    @Html.ValidationMessageFor(model => model.REM_CTRL_TICK)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    Es Ticket Padre
                                    @Html.CheckBox("IS_PARENT", false)
                                    @Html.ValidationMessageFor(model => model.IS_PARENT)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    Ticket Padre
                                    @Html.EditorFor(model => model.ID_TICK_PARENT, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_TICK_PARENT)
                                </div>
                            </div>


                        </div>
                        <div class="form-row">
                            @{
                                if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 60)
                                {
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            Reportado por <span style="color:red">(*)</span>
                                            @*@Html.Editor("IdGrupoReportador")*@
                                            @Html.TextBoxFor(model => model.IdGrupoReportador, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.IdGrupoReportador)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            Modalidad de Trabajo <span style="color:red">(*)</span>
                                            @*@Html.Editor("IdModTrabajo")*@
                                            @Html.TextBoxFor(model => model.IdModTrabajo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.IdModTrabajo)

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group" id="divlocacion">
                                            Locación <span style="color:red">(*)</span>
                                            @Html.Editor("ID_LOCA")
                                        </div>
                                    </div>

                                }
                            }

                        </div>
                        <div class="form-row" id="AnaTipoPaseLoca" hidden>
                            @{
                                if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 60)
                                {
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            Analista
                                            @Html.Editor("ID_PERS_ENTI_ANLT")
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            Tipo de Pase
                                            @Html.Editor("IdTipoPase")

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group" id="divSolman" hidden>
                                            Solman
                                            @Html.TextBoxFor(model => model.Solman, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Solman)
                                        </div>
                                    </div>
                                }
                            }

                        </div>

                        @*<div class="form-row">
                            @{
                                <div class="col-md-4">
                                    <div class="form-group">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        Grupo
                                        @Html.Editor("IDGRUPO")
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        Plantilla
                                        @Html.Editor("IDPLAN")

                                    </div>
                                </div>

                            }

                        </div>*@

                        @{
                            if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 3)
                            {
                                <div class="form-row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            Servicio
                                            @Html.CheckBox("SERVICE", false)
                                            @Html.ValidationMessageFor(model => model.SERVICE)
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            Fecha Inicio Real
                                            @Html.TextBoxFor(model => model.FEC_INI_REAL)
                                            @Html.ValidationMessageFor(model => model.FEC_INI_REAL)
                                        </div>
                                    </div>
                                </div>

                            }

                        }
                        <div class="form-row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.TextAreaFor(model => model.SUM_TICK, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SUM_TICK)
                                </div>
                            </div>
                        </div>


                        @{
                            if (Convert.ToInt32(Session["ID_ACCO"].ToString()) == 60)
                            {
                                <div class="form-row" id="DivSolucion" hidden>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            Solución
                                            @Html.TextAreaFor(model => model.Solucion, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Solucion)
                                        </div>
                                    </div>
                                </div>
                            }

                        }

                    </fieldset>
                </div>

                <div class="d-block text-right card-footer">
                    @*<button class="mr-2 btn btn-link" id="reset" type="button">Limpiar</button>*@
                    <button class="btn-shadow btn btn-primary" id="btnGuardar" type="button">Guardar</button>
                    <button class="btn-shadow btn btn-danger" id="btnEliminar" type="button">Eliminar</button>
                </div>
                <input type="hidden" name="hdnTkAutomatico" id="hdnTkAutomatico" value="0" />
                <input type="hidden" name="hdnTitulo" id="hdnTitulo" value="0" />
                <input type="hidden" name="hdnFrecuencia" id="hdnFrecuencia" value="1" />
                <input type="hidden" name="hdnDiaSemana" id="hdnDiaSemana" value="" />
                <input type="hidden" name="hdnDiaMes" id="hdnDiaMes" value="0" />
                <input type="hidden" name="hdnVigencia" id="hdnVigencia" value="1" />
                <input type="hidden" name="hdnVigenciaInicio" id="hdnVigenciaInicio" value="0" />
                <input type="hidden" name="hdnVigenciaFin" id="hdnVigenciaFin" value="0" />
                <input type="hidden" name="hdnHoraCreacion" id="hdnHoraCreacion" value="0" />
            
        </div>
        
        
    </div>
    
</div>
<iframe id="upload_target" name="upload_target" src="" class="d-none"></iframe>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

<script type="text/javascript">
    var idpriory = 0;
    var swt = 0;

    $("#cbGrupo").kendoComboBox({
        /*autoBind: true,*/
        dataValueField: "Id",
        dataTextField: "Nombre",
        placeholder: "Seleccione un grupo",
        filter: "contains",
        suggest: true,
        dataSource: {
            transport: {
                //read: "/AccountEntity/ListCompanyByAccount?var=" + Math.random()
                schema: {
                    data: "Data"
                },
                read: {
                    url: "/PlantillaBuenaventura/ListarGrupos"
                }
            }

        }
    });
    $('#btnGuardar').click(function () {

        //Obtencion de Valores
        var mensaje = '';
        let idPlantilla = $("#Id").val();
        let grupo = $("#cbGrupo").val();
        let nombrePlantilla = $("#txtNombre").val();
        let tituloTicket = $("#TITLE_TICK").val();
        let tipoTicket = $("#ID_TYPE_TICK").val();
        let prioridad = $("#ID_PRIO").val();
        let origen = $("#ID_SOUR").val();
        let estado = $("#ID_STAT").val();
        let fechaInicio = $("#FEC_INI_TICK").val();
        let fechaRecepcion = $("#FechaRecepcionSolicitud").val();
        let razon = $("#IdRazon").val();
        let ticketExterno = $("#TicketExterno").val();
        let solicitante = $("#ID_PERS_ENTI").val();
        let unidadMinera = $("#ID_COMP").val();
        let usuarioAfectado = $("#ID_PERS_ENTI_END").val();
        let areaResponsable = $("#ID_QUEU").val();
        let usuarioAsignado = $("#ID_PERS_ENTI_ASSI").val();
        let sla = $("#IdSLA").val();
        let macroservicio = $("#ID_CATE_N1").val();
        let categoria1 = $("#ID_CATE_N2").val();
        let categoria2 = $("#ID_CATE_N3").val();
        let categoria3 = $("#ID_CATE").val();
        let controlRemoto = $("#REM_CTRL_TICK").val();
        let esTicketPadre = $("#IS_PARENT").val();
        let ticketPadre = $("#ID_TICK_PARENT").val();
        let reportador = $("#IdGrupoReportador").val();
        let modalidad = $("#IdModTrabajo").val();
        let locacion = $("#ID_LOCA").val();
        let usuarioAnalista = $("#ID_PERS_ENTI_ANLT").val();
        let tipoPase = $("#IdTipoPase").val();
        let solman = $("#Solman").val();
        let service = $("#SERVICE").val();
        let fechaInicioReal = $("#FEC_INI_REAL").val();
        let comentario = $("#SUM_TICK").val();
        let solucion = $("#Solucion").val();

        //Validaciones
        if (grupo == '') mensaje += '-Seleccione un grupo para la plantilla. \n';
        if (nombrePlantilla == '') mensaje += '-Ingrese un nombre para la Plantilla. \n';
        if (tituloTicket == '') mensaje += '-Ingrese un Título para el Ticket. \n';
        if (tipoTicket == '') mensaje += '-Seleccione un tipo de Ticket. \n';
        if (prioridad == '') mensaje += '-Seleccione una prioridad. \n';
        if (origen == '') mensaje += '-Seleccione un medio de comunicación. \n';
        if (estado == '') mensaje += '-Seleccione un estado. \n';
        if (unidadMinera == '') mensaje += '-Seleccione una unidad minera. \n';
        if (usuarioAfectado == '') mensaje += '-Seleccione un usuario afectado. \n';
        if (areaResponsable == '') mensaje += '-Seleccione un área responsable. \n';
        if (usuarioAsignado == '') mensaje += '-Seleccione un usuario asignado. \n';
        if (sla == '') mensaje += '-Seleccione el SLA. \n';
        if (categoria3 == '') mensaje += '-Seleccione una categoría. \n';
        if (reportador == '') mensaje += '-Seleccione el reportador. \n';
        if (modalidad == '') mensaje += '-Seleccione la modalidad de trabajo. \n';
        if (locacion == '') mensaje += '-Seleccione la locación. \n';

        //Proceso
        if (mensaje != "") {
            toastr.warning(mensaje, "Advertencia");
            return false;
        } else {
            swal({
                title: "Generando...",
                text: "Espere por favor",
                imageUrl: "Images/spinner.gif",
                showConfirmButton: false,
                allowOutsideClick: false
            });

            let jsonPlantilla = {
                plantilla: {
                    "Id": idPlantilla,
                    "IdGrupo": grupo,
                    "Nombre": nombrePlantilla,
                    "TITLE_TICK": tituloTicket,
                    "ID_TYPE_TICK":tipoTicket,
                    "ID_PRIO":prioridad,
                    "ID_SOUR":origen,
                    "ID_STAT":estado,
                    "FEC_INI_TICK":fechaInicio,
                    "FechaRecepcionSolicitud":fechaRecepcion,
                    "IdRazon":razon,
                    "TicketExterno":ticketExterno,
                    "ID_PERS_ENTI":solicitante,
                    "ID_COMP":unidadMinera,
                    "ID_PERS_ENTI_END":usuarioAfectado,
                    "ID_QUEU":areaResponsable,
                    "ID_PERS_ENTI_ASSI":usuarioAsignado,
                    "IdSLA":sla,
                    "ID_CATE_N1":macroservicio,
                    "ID_CATE_N2":categoria1,
                    "ID_CATE_N3":categoria2,
                    "ID_CATE":categoria3,
                    "REM_CTRL_TICK":controlRemoto,
                    "IS_PARENT":esTicketPadre,
                    "ID_TICK_PARENT":ticketPadre,
                    "IdGrupoReportador":reportador,
                    "IdModTrabajo":modalidad,
                    "ID_LOCA":locacion,
                    "ID_PERS_ENTI_ANLT":usuarioAnalista,
                    "IdTipoPase":tipoPase,
                    "Solman":solman,
                    "SERVICE":service,
                    "FEC_INI_REAL":fechaInicioReal,
                    "SUM_TICK":comentario,
                    "Solucion":solucion
                }
            };

            $.ajax({
                type: "POST", 
                url: '/PlantillaBuenaventura/EditarPlantilla',
                data : JSON.stringify(jsonPlantilla),
                contentType: "application/json; charset=utf-8",
                //dataType: 'jsonp',
                success: function ({ code }) {
                    if (code == "OK") {
                        //swal.close();
                        swal({
                            title: "Plantilla editada con éxito",
                            type: 'success',
                            text: 'La plantilla fue editada con éxito. Será redirigido al listado de plantillas',
                            focusConfirm: false,
                            confirmButtonText:
                                'Continuar',
                            confirmButtonAriaLabel: 'Thumbs up, great!'

                        }, function () {
                            location = "http://" + location.host + `/PlantillaBuenaventura/Principal`;
                        });
                    } else {
                        swal.close();
                        toastr.error("Error", "Hubo un problema, comuníquese con mesa de servicio");
                    }
                        
                },
            });
        }

    });

    $('#btnEliminar').click(function () {

        let idPlantilla = $("#Id").val();
        swal({
            title: "Confirmación",
            type: "warning",
            text: "¿Está seguro que desea eliminar la plantilla?",
            confirmButtonText: 'Continuar',
            cancelButtonText: 'Cancelar',
            showCancelButton: true,
            allowOutsideClick: true
        }, function (input) {
            $.ajax({
                type: "POST",
                url: '/PlantillaBuenaventura/EliminarPlantilla/' + idPlantilla,
                /*data: { Id: idPlantilla },*/
                //contentType: "application/json; charset=utf-8",
                success: function ({ code }) {
                    if (code == "OK") {
                        setTimeout(function () {
                            swal({
                                title: "Plantilla eliminada con éxito",
                                type: 'success',
                                text: 'La plantilla fue eliminada con éxito. Será redirigido al listado de plantillas',
                                confirmButtonText: 'Continuar'
                            }, function (input2) {
                                console.log("ok");
                                location = "http://" + location.host + `/PlantillaBuenaventura/Principal`;
                            });
                        }, 1000);
                    } else {
                        swal.close();
                        toastr.error("Error", "Hubo un problema, comuníquese con mesa de servicio");
                    }

                },
            });
        });



    });


    function MensajeError(msj, flag) {
        swal({
            title: 'Mensaje',
            type: 'info',
            text: msj,
            focusConfirm: false,
            confirmButtonText:
                'Continue',
            confirmButtonAriaLabel: 'Thumbs up, great!'

        })
    }

    //Función ejecutada despues de enviar datos al servidor y recibir respuesta.

    function perdioSesion() {

        swal({
            title: 'Algo salio mal',
            type: 'error',
            text: 'Se perdió la conexión',
            focusConfirm: false,
            confirmButtonText: 'Continuar',
        }, function () {

            location = "http://" + location.host + `/Home/Principal`;
        })
    }

    $(document).ready(function () {
        
        if ('@ViewBag.ACCESO_NEWREQ' == '1') {
            $("#divRequest").css("display", "none");
            $("#divRequestNew").css("display", "inline-block");
        }

        var ID_COMP = $("#ID_COMP").kendoComboBox({
            autoBind: false,
            cascadeFrom: "ID_PERS_ENTI",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            placeholder: "Seleccionar ... ",
        }).data("kendoComboBox");
        ID_COMP.list.width(350);

        ID_COMP.bind("change", function (e) {
            $('#sla').css('background', 'white');

            if ('@ViewBag.ACCESO_NEWREQ' == '1') {
                if (ID_COMP.dataItem()) {
                    $("#divRequest").css("display", "none");
                    $("#divRequestNew").css("display", "inline-block");
                    $('#ID_CIA').attr('value', ID_COMP.dataItem().ID_ENTI);
                    $("#divEditCombo").css("display", "none");
                }
                else {
                    $("#divRequest").css("display", "inline-block");
                    $("#divRequestNew").css("display", "none");
                    $('#ID_CIA').attr('value', 0);
                }
            }

        });

        //Declaración de objeto ComboBox Kendo
        var ID_PERS_ENTI = $("#ID_PERS_ENTI").kendoComboBox({
            //autoBind: false,
            //cascadeFrom: "ID_COMP",
            filter: "contains",
            dataTextField: "CLIE",
            dataValueField: "ID_PERS_ENTI",
            minLength: 0,
            suggest: true,
            placeholder: "Seleccionar ... ",
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/CargarListaAsignadosBnv"
                }
            }
        }).data("kendoComboBox");
        ID_PERS_ENTI.list.width(300);

        var ID_PERS_ENTI_END = $("#ID_PERS_ENTI_END").kendoComboBox({
            //autoBind: false,
            //cascadeFrom: "ID_PERS_ENTI",
            filter: "contains",
            dataTextField: "CLIE",
            dataValueField: "ID_PERS_ENTI",
            placeholder: "Seleccionar ... ",
            //delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/CargarListaAfectadosBnv"
                }
            }
        }).data("kendoComboBox");
        ID_PERS_ENTI_END.list.width(300);

        //Función para verificar cambio de registro seleccionado
        ID_PERS_ENTI.bind("change", function (e) {
            //Store para vista Detail User
            ID_PERS_ENTI_END.value($("#ID_PERS_ENTI").val())
            $("#ID_COMP").kendoComboBox({
                dataTextField: "COM_NAME",
                dataValueField: "ID_ENTI",
                //suggest: true,
                autoBind: true,
                suggest: true,
                index: 0,
                dataSource: {
                    //serverFiltering: true,
                    schema: {
                        data: "Data",
                        total: "Count"
                    },
                    transport: {
                        // REFERENCIA al controlador TypeTicketController
                        read: "/AccountEntity/CargarListaUnidadesMineras?id=" + $("#ID_PERS_ENTI").val()
                    },
                    sort: { field: "COM_NAME", dir: "asc" }
                }
            })
        });


        //AQUI EMPIEZA LA CASCADA DE TYPE_TICKET, SLA, PRIORIDAD

        //AQUI SE ENVIA EL ID PARA FILTRAR POR TICKET

        var ID_TYPE_TIKET;
        var ID_TYPE_TICK = $("#ID_TYPE_TICK").kendoComboBox({
            autoBind: true,
            dataTextField: "NAM_TYPE_TICK",
            dataValueField: "ID_TYPE_TICK",
            suggest: true,
            index: 1,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    // REFERENCIA al controlador TypeTicketController

                    read: "/TypeTicket/ListarCboTypeTicketxEmpresa?var=" + Math.random()

                }
            }
        }).data("kendoComboBox");

        ID_TYPE_TICK.bind("change", function (e) {
            ID_TYPE_TIKET=ID_TYPE_TICK.dataItem().ID_TYPE_TICK;

            if (ID_TYPE_TICK.dataItem()) {
                $('#ID_TYPE_TICK').attr('value', ID_TYPE_TICK.dataItem().ID_TYPE_TICK);
            }
            else {
                $('#ID_TYPE_TICK').attr('value', 0);
            }
        });
        var IdSLA = $("#IdSLA").kendoComboBox({
            cascadeFrom: "ID_TYPE_TICK",
            /*placeholder: "Prioridad",*/
            dataTextField: "Nombre",
            dataValueField: "Id",
            filter: "contains",
            autoBind: true,
            delay: 500,
            minLength: 0,
            suggest: true,
            index: 0,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/SLA/ListarCboSLAxTypeTick?var="+ Math.random(),
                    /* read: "/SLA/ListarEM?var=" + Math.random()*/

                }
            },
        });



        var ID_PRIO = $("#ID_PRIO").kendoComboBox({
            cascadeFrom: "IdSLA",
      /*      placeholder: "Prioridad",*/
            dataTextField: "Prioridad",
            dataValueField: "IdPrioridad",
            filter: "contains",
            autoBind: false,
            delay: 500,
            minLength: 0,
            suggest: true,
            index: 2,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: {
                        url: function () {
                            return "/SLA/ListarCboPrioridadxSLA?var=" + Math.random() + "&text=" + $("#ID_PRIO").data("kendoComboBox").text()
                        }
                    }
                }
            }
        });

        var cboID_PRIO = $("#ID_PRIO").data("kendoComboBox");
        var cboIdSLA = $("#IdSLA").data("kendoComboBox");

         //-----FIN DE CASCADA-----------

        var ID_SOUR = $("#ID_SOUR").kendoComboBox({
            //index: 2,
            //autoBind:true,
            filter:"contains",
            dataTextField: "NAM_SOUR",
            dataValueField: "ID_SOUR",
            suggest: true,
            placeholder: "Seleccionar ... ",
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/SourceTicket/List"
                },
                sort: { field: "NAM_SOUR", dir: "asc" }
            }
        }).data("kendoComboBox");

        var FEC_INI_TICK = $("#FEC_INI_TICK").kendoDateTimePicker().data("kendoDateTimePicker");


        if (parseInt(@Session["ID_ACCO"]) == 3) {
            var FEC_INI_REAL = $("#FEC_INI_REAL").kendoDateTimePicker().data("kendoDateTimePicker");
            FEC_INI_REAL.value("@ViewBag.DATE");
        }

        var FechaRecepcionSolicitud = $("#FechaRecepcionSolicitud").kendoDateTimePicker().data("kendoDateTimePicker");
        FechaRecepcionSolicitud.value();

        if (parseInt(@Session["ID_ACCO"]) == 60) {
            FechaRecepcionSolicitud.value("@ViewBag.DATE");
        }

                jQuery('#IDPLAN').on('change', function () {

            $.ajax({
                url: '/Plantilla/ObtenerDescripcionPlantilla/',
                data: { IdGrupo: $("#IDGRUPO").val(), IdPlan: $("#IDPLAN").val() },
                type: 'GET',
                dataType: 'text',
                success: function (data) {


                    $("#SUM_TICK").data('kendoEditor').value(data);
                    //alert(data);
                    //jQuery("#SUM_TICK").data('kendoEditor').value(data);

                },
                error: function (data) {
                },
            });
        });

        $("#SUM_TICK").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false,
            paste: OnPaste
        });

        $("#Adicional1").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false,
            paste: OnPaste
        });

        $("#Adicional2").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false,
            paste: OnPaste
        });

        $("#Solucion").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false,
            paste: OnPaste
        });
        var jsonArr = [];

        var ArrayFile = $("#ArrayFile").kendoComboBox({
            dataTextField: "NAM_TYPE_DOCU_ATTA",
            dataValueField: "ID_TYPE_DOCU_ATTA",
            filter: "contains",
            index: 1,
            autoBind: true,
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Total"
                },
                transport: {
                    read: "/TypeDocumentModule/ListByModule/1?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var ID_QUEU = $("#ID_QUEU").kendoComboBox({
            dataTextField: "DES_QUEU",
            dataValueField: "ID_QUEU",
            placeholder: "Seleccione...",
            filter: "contains",
            autoBind: true,
            delay: 500,
            minLength: 0,
            suggest: true,
            template: '<div style="text-transform:capitalize; display: width:100%;">' +
                        '${data.DES_QUEU}</div>',
            //template: '<div style="text-transform:capitalize; display: inline-block; width:100%; height:35px; position:relative; ">' +
            //            '<span><strong>${data.QUEU}</strong></span><br />' +
            //            '<span style="position:absolute; top:15px;">${data.DES_QUEU}</span></div>',
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountQueue/ListByAcco?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        ID_QUEU.bind("dataBound", function () {

        });

        ID_QUEU.bind("change", function (e) {
            //ID_STAT.value(ID_QUEU.dataItem().ID_STAT);
            //ID_PERS_ENTI_ASSI.value(ID_QUEU.dataItem().ID_PERS_ENTI_ASSI_DEFA);
            $.ajax({
                url: "/AccountEntity/TicketSeleccionarAsignadoA/" + $("#ID_QUEU").val(),
                type: "GET",
                cache: false,
                dataType: "text",
                success: function (source) {
                    //alert(source);
                    console.log(source)
                    if (source != '0') {
                        //alert(1);
                        console.log(source)
                        ID_PERS_ENTI_ASSI.value(source);
                    }
                    else {
                        //alert(2);
                        ID_PERS_ENTI_ASSI.value(@ViewBag.ID_PERS_ENTI_ASSI);
                    }
                },
                error: function (source) {
                }
            });
        });

        var ID_PERS_ENTI_ASSI = $("#ID_PERS_ENTI_ASSI").kendoComboBox({
            autoBind: false,
            cascadeFrom: "ID_QUEU",
            filter: "contains",
            dataTextField: "ASSI",
            template: '<div style="text-transform:capitalize; display: inline-block; width:100%;">' +
                                      '<div style="float:left;">${data.ASSI}</div>' +
                                      '<div style="float:right; ">(WL ${data.WorkLoad})</div>' +
                                  '</div>',
            dataValueField: "ID_PERS_ENTI",
            placeholder: "Seleccionar ... ",

            dataSource: {
                //type: "odata",
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/AssigneByQueue?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        ID_PERS_ENTI_ASSI.bind("dataBound", function () {
            cbPE = $("#ID_PERS_ENTI_ASSI").data("kendoComboBox");
            ds = cbPE.dataSource;
            console.log(ds)
            data = ds.data();
            for (var i = 0; i <= data.length - 1; i++) {
                if (parseInt('@ViewBag.ID_PERS_ENTI_ASSI') == data[i].ID_PERS_ENTI && (swt == 0 || swt == 1)) {
                    ID_PERS_ENTI_ASSI.value(data[i].ID_PERS_ENTI);
                    ID_STAT = $("#ID_STAT").data("kendoComboBox");
                    //ID_STAT.value(1);
                    swt = 2;
                }
            }
        });

        ID_PERS_ENTI_ASSI.bind("change", function (e) {
            console.log('cambio')
            validaCapacidadUsuario($("#ID_PERS_ENTI_ASSI").val());
        });

        var ID_STAT = $("#ID_STAT").kendoComboBox({
            autoBind: true,
            //cascadeFrom: "ID_QUEU",
            //placeholder: "Select Status...",
            filter:"contains",
            dataTextField: "NAM_STAT",
            dataValueField: "ID_STAT",
            index: 0,
            dataSource: {
                //type: "odata",
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/StatusTicket/List"
                },
                sort: { field: "NAM_STAT", dir: "asc" }
            }
        }).data("kendoComboBox");

        ID_STAT.bind("change", function (e) {
            //debugger
            if (@Session["ID_ACCO"] == 60) {
                $("#divRazon").removeAttr("hidden");

                if (ID_STAT.dataItem().ID_STAT == 4) {
                    $("#DivSolucion").removeAttr("hidden");
                }
                else
                {
                    $("#DivSolucion").attr("hidden", true);
                    $("#Solucion").val('');
                }

            }
            else {
                $("#divRazon").attr("hidden", true);
                $('#IdRazon').attr('value', 0);

                    //$("#IdRazon").val('');
                }

            if (ID_STAT.dataItem().ID_STAT == 5) {
                //$("#divFecIniTick").removeClass('divHide');

                $("#divFecIniTick").removeAttr("hidden");

                if (@Session["ID_ACCO"] == 60) {
                    var FEC_INI_TICK = $("#FEC_INI_TICK").kendoDateTimePicker().data("kendoDateTimePicker");

                    FEC_INI_TICK.min("@ViewBag.DATE");
                    FEC_INI_TICK.value("@ViewBag.DATE");

                }

            }

            else {
                //$("#divFecIniTick").addClass('divHide');
                $("#divFecIniTick").attr("hidden", true);
                $("#FEC_INI_TICK").val('');
                    //FEC_INI_TICK.value("");

            }
        });

        var ID_CATE_N1 = $("#ID_CATE_N1").kendoComboBox({
            autoBind: false,
            dataTextField: "NAM_CATE",
            filter: "contains",
            cascadeFrom: "ID_TYPE_TICK",
            //cascadeFrom: "ID_ACCOUNT_CAT",
            dataValueField: "ID_CATE",
            placeholder: "Seleccionar ... ",
            dataSource: {
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Administrator/ListCategory?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        ID_CATE_N1.bind("change", function (e) {
            if (ID_CATE_N1.dataItem()) {
                $('#ID_CAT_N1').attr('value', ID_CATE_N1.dataItem().ID_CATE);
            }
            else {
                $('#ID_CAT_N1').attr('value', 0);

            }
        });

        var ID_CATE_N2 = $("#ID_CATE_N2").kendoComboBox({
            autoBind: false,
            filter: "contains",
            cascadeFrom: "ID_CATE_N1",
            dataTextField: "NAM_CATE2",
            dataValueField: "ID_CATE2",
            delay:500,
            placeholder: "Seleccionar ... ",
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Administrator/ListCategory2?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        ID_CATE_N2.bind("change", function (e) {
            if (ID_CATE_N2.dataItem()) {
                $('#ID_CAT_N2').attr('value', ID_CATE_N2.dataItem().ID_CATE2);
            }
            else {
                $('#ID_CAT_N2').attr('value', 0);
                if (@Session["ID_ACCO"] ==60) {
                    $("#IdTipoPase").data("kendoComboBox").select("");
                    $("#IdModTrabajo").data("kendoComboBox").select("");

                }

            }
        });

        var ID_CATE_N3 = $("#ID_CATE_N3").kendoComboBox({
            autoBind: false,
            filter: "contains",
            cascadeFrom: "ID_CATE_N2",
            dataTextField: "NAM_CATE3",
            dataValueField: "ID_CATE3",
            placeholder: "Seleccionar ... ",
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Administrator/ListCategory3?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        ID_CATE_N3.bind("change", function (e) {
            if (ID_CATE_N3.dataItem()) {
                $('#ID_CAT_N3').attr('value', ID_CATE_N3.dataItem().ID_CATE3);
            }
            else {
                $('#ID_CAT_N3').attr('value', 0);
            }
        });

        var ID_CATE_N4 = $("#ID_CATE").kendoComboBox({
            autoBind: true,
            filter: "contains",
            cascadeFrom: "ID_CATE_N3",
            dataTextField: "NAM_CATE4",
            dataValueField: "ID_CATE4",
            placeholder: "Seleccionar ... ",
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Administrator/ListCategory4?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        ID_CATE_N4.bind("change", function (e) {
            //alert(ID_CATE_N4.dataItem().ID_CATE4 );
            if (@Session["ID_ACCO"] == 60) {
                var IDCATE = ID_CATE_N4.dataItem().ID_CATE4

                $.ajax({
                    url: "/CategoryTicket/ListarPermisoCategoriaBNV/" + IDCATE,
                    type: "GET",
                    cache: false,
                    dataType: "json",
                    success: function (data) {
                        //alert(data)
                        if (data == "OK") {

                            $("#AnaTipoPaseLoca").removeAttr("hidden");
                            $("#divSolman").removeAttr("hidden");

                        }
                        else {
                            //$("#divlocacion").attr("hidden", true);
                            //$('#ID_LOCA').attr('value', 0);

                            //$("#ID_LOCA").data("kendoComboBox").select(-1);
                            $("#AnaTipoPaseLoca").attr("hidden", true);
                            $("#IdTipoPase").data("kendoComboBox").select(-1);
                            $("#ID_PERS_ENTI_ANLT").data("kendoComboBox").select(-1);
                            $("#divSolman").attr("hidden", true);
                            $("#Solman").val('');
                        }

                    },
                    error: function (source) {
                    }
                });

            }

            if (ID_CATE_N3.dataItem()) {
                $('#ID_CATE_N4').attr('value', ID_CATE_N4.dataItem().ID_CATE4);
            }
            else {
                $('#ID_CATE_N4').attr('value', 0);
            }

        });

        var ID_TICK_PARENT = $("#ID_TICK_PARENT").kendoComboBox({
            autoBind: false,
            //cascadeFrom: "ID_CATE",
            //enable: false,
            dataTextField: "COD_TICK",
            dataValueField: "ID_TICK",
            suggest: true,
            dataSource: {
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Ticket/TicketParent?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        $('#IS_PARENT').click(function () {
            var $this = $(this);
            // $this will contain a reference to the checkbox
            if ($this.is(':checked')) {
                ID_TICK_PARENT.value("");
                ID_TICK_PARENT.enable(false);
                //alert('SI');
            } else {
                // the checkbox was unchecked
                ID_TICK_PARENT.enable(true);
            }
        });

        var IDGRUPO = $("#IDGRUPO").kendoComboBox({
            autoBind: true,
            dataTextField: "NOMBRE",
            dataValueField: "IDGRUPO",
            //placeholder: "Seleccione un grupo",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Grupo/ListarCboGrupoCuentaEstado?ID_ACCO=" + @Session["ID_ACCO"] + "&var=" + Math.random()
                }
            }
        }).data("kendoComboBox");

        var IDPLAN = $("#IDPLAN").kendoComboBox({
            autoBind: true,
            cascadeFrom: "IDGRUPO",
            /*placeholder: "",*/
            dataTextField: "NOMBRE",
            dataValueField: "ID_PLAN",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Plantilla/ListarPlantillaGrupo?ID_TIPOPLAN=1"

                }
            }
        }).data("kendoComboBox");


        var ID_LOCA = $("#ID_LOCA").kendoComboBox({
            //cascadeFrom: "ID_COMP",
            //autoBind: true,
            dataTextField: "text",
            dataValueField: "id",
            //template: '<div><div style="font-weight:bold">${ data.NamSite }</div>' +
            //    '<div>${ data.NamLoca }</div></div>',
            //index: 0,
            placeholder: "Seleccionar ... ",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data"
                },
                transport: {
                    read: "/Location/ListarLocacionesxCompaniaBnv?var=" + Math.random()
                },
                sort: { field: "text", dir: "asc" }
            }
        }).data("kendoComboBox");

        var ID_TIPOPASE = $("#IdTipoPase").kendoComboBox({
            autoBind: true,
            filter: "contains",
            //cascadeFrom: "ID_CATE_N4",
            dataTextField: "text",
            dataValueField: "id",
            index: 1,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Ticket/ListarTipoPase",
                }
            }
        }).data("kendoComboBox");

        var ID_MODTRABAJO = $("#IdModTrabajo").kendoComboBox({
            autoBind: true,
            dataTextField: "text",
            dataValueField: "id",
            filter: "contains",
            index: 1,
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Ticket/ListarModalidadTrabajo"
                }
            }
        }).data("kendoComboBox");

        var ID_RAZON = $("#IdRazon").kendoComboBox({
            autoBind: true,
            cascadeFrom: "ID_STAT",
            dataTextField: "text",
            dataValueField: "id",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            index: 0,
            dataSource: {
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/StatusTicket/ListarRazonxEstado?IDESTADO=" + 0 + "&Tipo=" + 1 + "&var=" + Math.random()

                }
            }
        }).data("kendoComboBox");


        //Cargar Datos de Plantilla
        $.ajax({
            url: '/PlantillaBuenaventura/ObtenerPlantilla/',
            data: { IdPlantilla: $("#Id").val() },
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                let plantilla = data[0];
                //let plantilla = data;
                console.log(plantilla.SUM_TICK);
                $("#cbGrupo").data("kendoComboBox").value(plantilla.IdGrupo);
                $("#txtNombre").val(plantilla.Nombre);
                $("#TITLE_TICK").val(plantilla.TITLE_TICK);
                $("#ID_TYPE_TICK").data("kendoComboBox").value(plantilla.ID_TYPE_TICK);
                $("#ID_PRIO").data("kendoComboBox").value(plantilla.ID_PRIO);
                $("#ID_SOUR").data("kendoComboBox").value(plantilla.ID_SOUR);
                $("#ID_STAT").data("kendoComboBox").value(plantilla.ID_STAT);
                $("#FechaRecepcionSolicitud").val(plantilla.FechaRecepcionSolicitud);
                $("#IdRazon").data("kendoComboBox").value(plantilla.IdRazon);
                $("#ID_PERS_ENTI").data("kendoComboBox").value(plantilla.ID_PERS_ENTI);
                $("#ID_PERS_ENTI").data("kendoComboBox").trigger('change');
                $("#ID_COMP").data("kendoComboBox").value(plantilla.ID_COMP);
                $("#ID_PERS_ENTI_END").data("kendoComboBox").value(plantilla.ID_PERS_ENTI_END);
                $("#ID_QUEU").data("kendoComboBox").value(plantilla.ID_QUEU);
                $("#ID_PERS_ENTI_ASSI").data("kendoComboBox").value(plantilla.ID_PERS_ENTI_ASSI);
                $("#IdSLA").data("kendoComboBox").value(plantilla.IdSLA);
                $("#ID_CATE_N1").data("kendoComboBox").value(plantilla.ID_CATE_N1);
                $("#ID_CATE_N2").data("kendoComboBox").value(plantilla.ID_CATE_N2);
                $("#ID_CATE_N3").data("kendoComboBox").value(plantilla.ID_CATE_N3);
                $("#ID_CATE").data("kendoComboBox").value(plantilla.ID_CATE);
                if (plantilla.REM_CTRL_TICK == "True") $("#REM_CTRL_TICK").val(true);
                if (plantilla.IS_PARENT == "True") { $("#IS_PARENT").val(true); $("#ID_TICK_PARENT").data("kendoComboBox").value(plantilla.ID_TICK_PARENT); }
                $("#IdGrupoReportador").data("kendoComboBox").value(plantilla.IdGrupoReportador);
                $("#IdModTrabajo").data("kendoComboBox").value(plantilla.IdModTrabajo);
                $("#ID_LOCA").data("kendoComboBox").value(plantilla.ID_LOCA);
                $("#SUM_TICK").data("kendoEditor").value(plantilla.SUM_TICK);

            },
            error: function (data) {
            },
        });


    });

    var ID_PERS_ENTI_ANLT = $("#ID_PERS_ENTI_ANLT").kendoComboBox({
        autoBind: true,
        dataTextField: "Personal",
        dataValueField: "IdPersEnti",
        index: 1,
        filter: "contains",
        delay: 500,
        minLength: 0,
        suggest: true,
        dataSource: {
            serverFiltering: true,
            schema: {
                data: "Data",
                total: "Count"
            },
            transport: {
                read: "/AccountEntity/ListarPersonalxCuenta?IdCuenta=" + @Session["ID_ACCO"],
            }
        }
    }).data("kendoComboBox");

    var IdGrupoReportador = $("#IdGrupoReportador").kendoComboBox({
        autoBind: true,
        dataTextField: "NomGrupoReportador",
        dataValueField: "IdGrupoReportador",
        index: 1,
        filter: "contains",
        delay: 500,
        minLength: 0,
        suggest: true,
        dataSource: {
            serverFiltering: true,
            schema: {
                data: "Data",
                total: "Count"
            },
            transport: {
                read: "/Ticket/ListarGrupoReportador?var="  + Math.random(),
            }
        }
    }).data("kendoComboBox");

    function OnPaste(e) {
        //var texto = e.html
        //if ((/^<img src="/).test(e.html)) {
        //    toastr.warning("No se permiten imágenes en este campo.");
        //    e.html = "";
        //}
        //if (texto.includes('<img data-imagetype=')) {
        //    toastr.warning("No se permiten imágenes en este campo.");
        //    e.html = "";
        //}
        if (/<img\s+[^>]*>/i.test(e.html)) {
            toastr.warning("No se permiten imágenes en este campo.");
            e.html = "";
        } else if ((/^<img src="data:image/).test(e.html)) {
            toastr.warning("No se permiten imágenes en este campo.");
            e.html = "";
        }
    }
    function a_entero(valor) {
        //intento convertir a entero.
        //si era un entero no le afecta, si no lo era lo intenta convertir
        valor = parseInt(valor);
        //comprobamos si es un valor entero
        if (isNaN(valor)) {
            //no es entero 0
            return 0;
        } else {
            //es un valor entero
            return valor;
        }
    }
    function EditContact() {

        var combobox = $("#ID_PERS_ENTI").data("kendoComboBox");

        if (a_entero(combobox.value()) > 0) {
            $("#lblTitulo").text("Editar Solicitante");

            $(".modal-dialog").removeClass("modal-sm");
            $(".modal-dialog").removeClass("modal-lg");
            $(".modal-dialog").addClass("modal-lg");

            $('#modal-content').empty();
            $('#modal-content').load("/AccountEntity/ViewEditClient?id=" + combobox.value() + "&var=" + Math.random());

            }
        else { $("#divEditCombo").css("display", "none"); }
    }

    function nuevotema() {
        var idcategoria = $("#ID_CATE").val();
        if (idcategoria == "") {
            swal("Seleccione una Categoría", "Nuevo Tema", "info");
            return false;
        }
        $("#myTema").empty();
        $("#myTema").modal("show");
        $.get('/KnowledgeManagement/_NewThemeTicket', { idCategoria: idcategoria }, function (html) {
            $("#myTema").html(html);
        })
    }

    function cargarTemas(id, idcatNivel1) {
        var IdTema = $("#IdTema").kendoComboBox({
            autoBind: false,
            index: -1,
            dataTextField: "Nomtema",
            filter: "contains",
            dataValueField: "IdTema",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/KnowledgeManagement/ListTemaLessonLearned?ID_ACCO=" + id + "&ID_CATE=" + idcatNivel1
                }
            }
        }).data("kendoComboBox");
    }

    var key_atta = $("#KEY_ATTA").val()

    function validaCapacidadUsuario(id) {
        // Valida la capacidad del usuario relacionado a los tickets (por cuenta)
        $.ajax({
            url: "/Capacidad/ValidarCantidadTicket_PersAsignado/" + id,
            type: "GET",
            cache: false,
            dataType: "text",
            success: function (source) {
                if (source != "") {
                    $("#capacidadTicket").removeClass("divHide");
                    $("#capacidadTicket").attr("alt", source);
                    $("#capacidadTicket").attr("title", source);
                }
            },
            error: function (source) {
            }
        });
    }

    function NewContact() {
        $("#lblTitulo").text("Nuevo Solicitante");

        $(".modal-dialog").removeClass("modal-sm");
        $(".modal-dialog").removeClass("modal-lg");
        $(".modal-dialog").addClass("modal-lg");

        $('#modal-content').empty();
        $('#modal-content').load("/AccountEntity/ViewNewClient?id=" + $("#ID_CIA").val() + "&var=" + Math.random());
        }

</script>

<script type="text/javascript">
    function NewClient() {
        var htmlForm = '<div id="FormNewClient"></div>';
        winFormPopUpModal("Nuevo Ciente", htmlForm, 740, 390);
        $("#FormNewClient").load("/AccountEntity/ViewNewClient?var=" + Math.random());
    }
</script>

<script type="text/javascript">
    var vector = {}, ctime;
    vector.s = 0;
    vector.m = 0;
    vector.h = 0;
    const btCrear = document.getElementById("myBtn");
    function show5(vector) {
        var hours = vector.h;
        var minutes = vector.m;
        var seconds = vector.s;

        vector.s = vector.s + 1;
        if (vector.s == 60) {
            vector.s = 0;
            vector.m = vector.m + 1;
        }

        if (vector.m == 60) {
            vector.m = 0;
            vector.h = vector.h + 1;
        }
        //change color
        myclock = "Resolución de primera llamada: <span style='color:" + (vector.h >= 1 ? 'red' : (vector.m > 20 ? 'red' : 'black')) + "'>"
            + (hours <= 9 ? '0' : '') + hours + ":"
            + (minutes <= 9 ? '0' : '') + minutes + ":"
            + (seconds <= 9 ? '0' : '') + seconds + "</span>";
        if (document.layers) {
            document.layers.liveclock.document.write(myclock)
            document.layers.liveclock.document.close()
        }
        else if (document.all)
            liveclock.innerHTML = myclock
        else if (document.getElementById)
            document.getElementById("liveclock").innerHTML = myclock;
        ctime = setTimeout("show5(vector);", 1000);
    }

    if (ctime) {
        clearTimeout(ctime);
    }
    //show5(vector);
</script>

<script type="text/ecmascript">
    var DivHeight = $("#divNewTicket").height();
    var divDetailsTicket = $("#divDetailsTicket").height();
    var divDetailsUser = $("#divDetailsUser").height();
    var divTitleDetailsTicket = $("#divTitleDetailsTicket").height();
    $("#divAssetByUser").height(DivHeight - divDetailsTicket - 20 - divTitleDetailsTicket * 2 - divDetailsUser - 2);
    $("#gridAssetByUser").height(DivHeight - divDetailsTicket - 20 - divTitleDetailsTicket * 2 - divDetailsUser -2- 55);
</script>