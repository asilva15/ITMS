@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<script src="~/Scripts/highcharts/highcharts.js"></script>
<script src="~/Scripts/highcharts/highcharts-more.js"></script>
<script src="~/Scripts/highcharts/modules/solid-gauge.src.js"></script>
<script src="~/Scripts/highcharts/modules/exporting.js"></script>*@

<style>
    .divFind {
        width: 100%;
        display: inline-block;
        border: 1px #eee solid;
    }

    .divHead {
        padding: 5px 10px 5px 10px;
    }

    .rowx {
        float: left;
        margin-left: 10px;
        /*text-align:center;*/
    }
</style>
<div class="app-page-title">
    <div class="page-title-wrapper">
        <div class="page-title-heading">
            <div class="page-title-icon">
                <i class="fa fa-user-check icon-gradient bg-sunny-morning"> </i>
            </div>
            <div>
               Carga de Trabajo
                <div class="page-title-subheading">

                </div>
            </div>
        </div>
    </div>
</div>
<input type="hidden" id="IdIdioma" name="IdIdioma" value="@Session["IdIdioma"]" />
<div class="row">
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            <div class="card-header">
                Tickets Por Equipo / Estado
            </div>
            <div class="card-body">
                @using (Html.BeginForm("xx", "Assistance", FormMethod.Post, new { id = "FrmWorkLoad" }))
                {
                    
                    <div class="form-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label id="" for="" class="">Área Responsable </label>
                                @Html.TextBox("ID_QUEU")
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div id="WLG1" style="height:345px;width:99%;"></div>
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Desde </label>
                                @Html.TextBox("SIN_DATE")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Hasta </label>
                                @Html.TextBox("TO_DATE")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-row divSubCuenta">
                                <div class="col-md-4">
                                    <label>Sub Cuenta</label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbTodos" name="rbSubCuenta" class="form-check-input" value="0" checked> TODOS
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbInterno" name="rbSubCuenta" class="form-check-input" value="1"> INTERNO
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbExterno" name="rbSubCuenta" class="form-check-input" value="2"> EXTERNO
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        
    </div>
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            <div class="card-header">
                Tickets Por Área
            </div>
            <div class="card-body">
                @using (Html.BeginForm("xxx", "Assistance", FormMethod.Post, new { id = "FrmWorkLoadArea" }))
                {
                
                    <div class="form-row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div id="WLG2" style="height:428px;width:99%;"></div>
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Desde </label>
                                @Html.TextBox("SIN_DATE_WA")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Hasta </label>
                                @Html.TextBox("TO_DATE_WA")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-row divSubCuenta">
                                <div class="col-md-4">
                                    <label>Sub Cuenta</label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbTodosWA" name="rbSubCuentaWA" class="form-check-input" value="0" checked> TODOS
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbInternoWA" name="rbSubCuentaWA" class="form-check-input" value="1"> INTERNO
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbExternoWA" name="rbSubCuentaWA" class="form-check-input" value="2"> EXTERNO
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            <div class="card-header">
                Tickets Por Marca
            </div>
            <div class="card-body">
                @using (Html.BeginForm("xxxxx", "Assistance", FormMethod.Post, new { id = "FrmWorkLoadManufacturer" }))
                {

                    <div class="form-row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div id="WLG3">
                                    <div id="WLG3_1"></div>
                                    <div id="WLG3_2"></div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Desde </label>
                                @Html.TextBox("SIN_DATE_WM")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Hasta </label>
                                @Html.TextBox("TO_DATE_WM")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-row divSubCuenta">
                                <div class="col-md-4">
                                    <label>Sub Cuenta</label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbTodosWM" name="rbSubCuentaWM" class="form-check-input" value="0" checked> TODOS
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbInternoWM" name="rbSubCuentaWM" class="form-check-input" value="1"> INTERNO
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbExternoWM" name="rbSubCuentaWM" class="form-check-input" value="2"> EXTERNO
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        
    </div>
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            <div class="card-header">
                Tickets Por Soporte / Proyecto
            </div>
            <div class="card-body">
                @using (Html.BeginForm("xxxx", "Assistance", FormMethod.Post, new { id = "FrmWorkLoadSupProject" }))
                {

                    <div class="form-row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div id="WLG4" style="height:401px;width:99%;"></div>
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Desde </label>
                                @Html.TextBox("SIN_DATE_WSP")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Hasta </label>
                                @Html.TextBox("TO_DATE_WSP")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-row divSubCuenta">
                                <div class="col-md-4">
                                    <label>Sub Cuenta</label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbTodosWSP" name="rbSubCuentaWSP" class="form-check-input" value="0" checked> TODOS
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbInternoWSP" name="rbSubCuentaWSP" class="form-check-input" value="1"> INTERNO
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbExternoWSP" name="rbSubCuentaWSP" class="form-check-input" value="2"> EXTERNO
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="main-card mb-3 card">
            <div class="card-header">
                Tickets Por Compañía
            </div>
            <div class="card-body">
                @using (Html.BeginForm("xxxxx", "Assistance", FormMethod.Post, new { id = "FrmWorkLoadCIA" }))
                {

                    <div class="form-row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div id="WLG5" style="height:345px;width:99%;">

                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Desde </label>
                                @Html.TextBox("SIN_DATE_WC")
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label id="" for="" class="">Hasta </label>
                                @Html.TextBox("TO_DATE_WC")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-row divSubCuenta">
                                <div class="col-md-4">
                                    <label>Sub Cuenta</label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbTodosWC" name="rbSubCuentaWC" class="form-check-input" value="0" checked> TODOS
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbInternoWC" name="rbSubCuentaWC" class="form-check-input" value="1"> INTERNO
                                        </label>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label><br /></label>
                                    <div class="position-relative form-check">
                                        <label class="form-check-label">
                                            <input type="radio" id="rbExternoWC" name="rbSubCuentaWC" class="form-check-input" value="2"> EXTERNO
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
</div>


<script type="text/javascript">

    function CreateGraph() {
        $.ajax({
            url: '/ReportTicket/ResultWorkLoad?' + ($("#FrmWorkLoad").serialize()),
            dataType: 'json',
            cache: false,
            async: true,
            success: function (jsonx) {

                var Serie = new Array();
                var Active = new Array();
                var Cancelled = new Array();
                var Scheduled = new Array();
                var Resolved = new Array();
                var Closed = new Array();
                var Color = new Array();
                var x = 0;
                $.each(jsonx['Data'], function (index, value) {
                    Serie[index] = value['EMPLOYEE'];
                    Active[index] = value['ACTIVE'];
                    Cancelled[index] = value['CANCELLED'];
                    Scheduled[index] = value['SCHEDULED'];
                    Resolved[index] = value['RESOLVED'];
                    Closed[index] = value['CLOSED'];
                    x = x + 1;
                });

                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: 'WLG1',
                        type: 'column',
                        zoomType: 'xy'//,
                        //margin: [20, 20, 80, 60]
                    },
                    colors: ["#BA141A", "#F2BA0C", "#679700", "#2D5C88", "#333333"],
                    title: {
                        text: null
                    },
                    credits: {
                        enabled: false
                    },
                    xAxis: {
                        categories: Serie,
                        gridLineWidth: 1,
                        title: {
                            text: 'Staff',
                            align: 'high',
                            style: {
                                color: '#666',
                                fontWeight: 'bold'
                            }
                        },
                        labels: {
                            rotation: (x>6 ? -45 : 0)
                        }

                    },

                    yAxis: {
                        lineWidth: 1,
                        gridLineWidth: 1,
                        title: {
                            text: '@ResourceLanguaje.Resource.Tickets',
                            align: 'high',
                            style: {
                                color: '#666',
                                fontWeight: 'bold'
                            }
                        },
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        crosshairs: true,
                        shared: true,
                        valueSuffix: ' Tickets',
                        valueDecimals: 0
                    },
                    //plotOptions: {
                    //    column: {
                    //        stacking: 'normal',
                    //        shadow: false,
                    //        tooltip: {
                    //            headerFormat: headerFormat,
                    //            pointFormat: pointFormat
                    //        }
                    //    },
                    //    series: {
                    //        events: {
                    //            click: function (event) {
                    //                event.preventDefault();
                    //            }
                    //        }
                    //    }
                    //},
                    plotOptions: {
                        column: {
                            stacking: 'normal',
                            shadow: false,
                            tooltip: {
                                headerFormat: headerFormat,
                                pointFormat: pointFormat
                            }
                        },
                        series: {
                            //events: {
                            //    click: function (event) {

                            //    }
                            //}
                        }
                    },

                    series: [{
                        name: 'Active',
                        data: Active
                    }, {
                        name: 'Scheduled',
                        data: Scheduled

                    }, {
                        name: 'Resolved',
                        data: Resolved

                    }, {
                        name: 'Closed',
                        data: Closed

                    }, {
                        name: 'Cancelled',
                        data: Cancelled

                    }]
                });
            }

        });

        //myVarWorkload = setTimeout("UpdateWorkload();", 300000);
    }

    function WorkLoadArea() {

        $.ajax({
            url: '/ReportTicket/WorkLoadByArea?' + ($("#FrmWorkLoadArea").serialize()),
            dataType: 'json',
            cache: false,
            async: true,
            success: function (jsonx) {

                var Serie = new Array();
                var Active = new Array();
                var Cancelled = new Array();
                var Scheduled = new Array();
                var Resolved = new Array();
                var Closed = new Array();
                var Color = new Array();

                $.each(jsonx['Data'], function (index, value) {
                    Serie[index] = value['NAM_QUEU'];
                    Active[index] = value['ACTIVE'];
                    Closed[index] = value['CLOSED'];
                });

                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: 'WLG2',
                        type: 'column',
                        zoomType: 'xy',
                        margin: [20, 20, 80, 60]
                    },
                    colors: ["#BA141A", "#2D5C88", "#7CBB00", "#516882", "#333333"],
                    title: {
                        text: null
                    },
                    credits: {
                        enabled: false
                    },
                    xAxis: {
                        categories: Serie,
                        gridLineWidth: 1,
                        title: {
                            text: 'Area',
                            align: 'high',
                            style: {
                                color: '#666',
                                fontWeight: 'bold'
                            }
                        }
                    },

                    yAxis: {
                        lineWidth: 1,
                        gridLineWidth: 1,
                        title: {
                            text: '@ResourceLanguaje.Resource.Tickets',
                            align: 'high',
                            style: {
                                color: '#666',
                                fontWeight: 'bold'
                            }
                        },
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        crosshairs: true,
                        shared: true,
                        valueSuffix: ' Tickets',
                        valueDecimals: 0
                    },
                    plotOptions: {
                        column: {
                            stacking: 'normal',
                            shadow: false,
                            tooltip: {
                                headerFormat: headerFormat,
                                pointFormat: pointFormat
                            }
                        },
                        series: {
                            //events: {
                            //    click: function (event) {

                            //    }
                            //}
                        }
                    },

                    series: [{
                        name: 'Open',
                        data: Active
                    },
                    {
                        name: 'Closed',
                        data: Closed

                    }]
                });
            }

        });
    }

function WorkLoadManufacturer() {
    $.ajax({
            url: '/ReportTicket/WorkLoadManufacturer?' + ($("#FrmWorkLoadManufacturer").serialize()),
            dataType: 'json',
            cache: false,
            async: true,
            success: function (jsonx) {

                var Serie = new Array();
                var Support = new Array();
                var Projects = new Array();

                $.each(jsonx['Data'], function (index, value) {
                    Serie[index] = value['NAM_CATE'];
                    Support[index] = -1 * value['Support'];
                    Projects[index] = value['Projets'];
                    //Support[index] = [value['NAM_CATE'], value['Support']];
                    //Projects[index] = [value['NAM_CATE'], value['Projets']];
                });

                $('#WLG3').highcharts({
                    chart: {
                        type: 'bar'
                    },
                    colors: ["#BA141A", "#2D5C88", "#7CBB00", "#516882", "#333333"],
                    title: {
                        text: null
                    },
                    subtitle: {
                        text: null
                    },
                    credits: { enabled: false },
                    xAxis: [
                        {
                            gridLineWidth: 1,
                            categories: Serie,
                            reversed: false,
                            labels: {
                                step: 1
                            }
                        },
                        { // mirror axis on right side
                            opposite: true,
                            reversed: false,
                            categories: Serie,
                            linkedTo: 0,
                            labels: {
                                step: 1
                            }
                        }
                    ],
                    yAxis: {
                        gridLineWidth: 1,
                        title: {
                            text: null
                        },
                        labels: {
                            formatter: function () {
                                return (Math.abs(this.value));
                            }
                        },
                        min: -250,
                        max: 250
                    },

                    plotOptions: {
                        series: {
                            stacking: 'normal',
                            dataLabels: {
                                enabled: true,
                                inside: false,
                                //align:'left',
                                useHTML: true,
                                formatter: function () {
                                    if (this.point.y < 0) {
                                        return '<div style="float:left;">' + Highcharts.numberFormat(Math.abs(this.point.y), 0) + '</div>';
                                    }
                                    return '<div style="float:right;">' + Highcharts.numberFormat(Math.abs(this.point.y), 0) + '</div>';
                                }
                            }
                        }
                    },

                    tooltip: {
                        formatter: function () {
                            return '<b>' + this.series.name +' '+ this.point.category + '</b><br/>' +
                                Highcharts.numberFormat(Math.abs(this.point.y), 0)+' Tickets';
                        }
                    },
                    series: [{
                        name: 'Support',
                        data: Support
                    },{
                        name: 'Projects / Renovations',
                        data: Projects
                    }]
                });

                //$('#WLG3_1').highcharts({
                //    title: {
                //        text: null
                //    },
                //    tooltip: {
                //        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                //    },
                //    credits: { enabled: false },
                //    colors: ["#BA141A", "#2D5C88", "#7CBB00", "#516882", "#333333"],
                //    plotOptions: {
                //        pie: {
                //            allowPointSelect: true,
                //            cursor: 'pointer',
                //            dataLabels: {
                //                enabled: true,
                //                format: '<b>{point.name}</b>:</br> {point.y:.1f} %',
                //                style: {
                //                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                //                },
                //                distance:10
                //            }
                //        }
                //    },
                //    series: [{
                //        type: 'pie',
                //        name: 'Top 5 Support',
                //        data: Support
                //    }]
                //});

                //$('#WLG3_2').highcharts({
                //    title: {
                //        text: null
                //    },
                //    tooltip: {
                //        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                //    },
                //    credits:{enabled:false},
                //    colors: ["#BA141A", "#2D5C88", "#7CBB00", "#516882", "#333333"],
                //    plotOptions: {
                //        pie: {
                //            allowPointSelect: true,
                //            cursor: 'pointer',
                //            dataLabels: {
                //                enabled: true,
                //                format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                //                style: {
                //                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                //                }
                //            }
                //        }
                //    },
                //    series: [{
                //        type: 'pie',
                //        name: 'Top 5 Projects',
                //        data: Projects
                //    }]
                //});
            }

        });
}

function WorkLoadCIA() {
    $.ajax({
        url: '/ReportTicket/WorkLoadCIA?' + ($("#FrmWorkLoadCIA").serialize()),
        dataType: 'json',
        cache: false,
        async: true,
        success: function (jsonx) {

            var Serie = new Array();
            var Support = new Array();
            var Projects = new Array();

            $.each(jsonx['Data'], function (index, value) {
                Serie[index] = value['COM_NAME'];
                Support[index] = -1 * value['Support'];
                Projects[index] = value['Projects'];
            });

            $('#WLG5').highcharts({
                chart: {
                    type: 'bar'
                },
                colors: ["#BA141A", "#2D5C88", "#7CBB00", "#516882", "#333333"],
                title: {
                    text: null
                },
                subtitle: {
                    text: null
                },
                credits: { enabled: false },
                xAxis: [{
                    gridLineWidth: 1,
                    categories: Serie,
                    reversed: false,
                    labels: {
                        step: 1
                    }
                }, { // mirror axis on right side
                    opposite: true,
                    reversed: false,
                    categories: Serie,
                    linkedTo: 0,
                    labels: {
                        step: 1
                    }
                }],
                yAxis: {
                    gridLineWidth: 1,
                    title: {
                        text: null
                    },
                    labels: {
                        formatter: function () {
                            return (Math.abs(this.value));
                        }
                    },
                    min: -100,
                    max: 100
                },

                plotOptions: {
                    series: {
                        stacking: 'normal',
                        dataLabels: {
                            enabled: true,
                            //verticalAlign: 'top',
                            inside: false,
                            //align:'left',
                            useHTML: true,
                            formatter: function () {
                                if (this.point.y < 0) {
                                    return '<div style="float:left;">' + Highcharts.numberFormat(Math.abs(this.point.y), 0) + '</div>';
                                }
                                return '<div style="float:right;">' + Highcharts.numberFormat(Math.abs(this.point.y), 0) + '</div>';
                            }
                        }
                    }
                },

                tooltip: {
                    formatter: function () {
                        return '<b>' + this.series.name + ' ' + this.point.category + '</b><br/>' +
                            Highcharts.numberFormat(Math.abs(this.point.y), 0) + ' Tickets';
                    }
                },
                series: [{
                    name: 'Support',
                    data: Support
                }, {
                    name: 'Projects / Renovations',
                    data: Projects
                }]
            });
        }
    });
}

function WorkLoadSupProject() {

        $.ajax({
            url: '/ReportTicket/WorkLoadBySupProject?' + ($("#FrmWorkLoadSupProject").serialize()),
            dataType: 'json',
            cache: false,
            async: true,
            success: function (jsonx) {

                var Serie = new Array();
                var Active_Sup = new Array();
                var Active_Proj = new Array();
                var Closed_Sup = new Array();
                var Closed_Proj = new Array();

                $.each(jsonx['Data'], function (index, value) {
                    Serie[index] = value['NAM_QUEU'];

                    Active_Sup[index] = value['ACTIVE_SUP'];
                    Closed_Sup[index] = value['CLOSED_SUP'];

                    Active_Proj[index] = value['ACTIVE_PROJ'];
                    Closed_Proj[index] = value['CLOSED_PROJ'];
                });

                chart = new Highcharts.Chart({
                    chart: {
                        renderTo: 'WLG4',
                        type: 'column',
                        zoomType: 'xy',
                        margin: [20, 20, 80, 60]
                    },
                    colors: ["#BA141A", "#2D5C88", "#679700", "#F2BA0C", "#333333"],
                    title: {
                        text: null
                    },
                    credits: {
                        enabled: false
                    },
                    xAxis: {
                        categories: Serie,
                        gridLineWidth: 1,
                        title: {
                            text: 'Area',
                            align: 'high',
                            style: {
                                color: '#666',
                                fontWeight: 'bold'
                            }
                        }
                    },

                    yAxis: {
                        lineWidth: 1,
                        gridLineWidth: 1,
                        title: {
                            text: '@ResourceLanguaje.Resource.Tickets',
                            align: 'high',
                            style: {
                                color: '#666',
                                fontWeight: 'bold'
                            }
                        },
                        plotLines: [{
                            value: 0,
                            width: 1,
                            color: '#808080'
                        }]
                    },
                    tooltip: {
                        crosshairs: true,
                        shared: true,
                        valueSuffix: ' Tickets',
                        valueDecimals: 0
                    },
                    plotOptions: {
                        column: {
                            stacking: 'normal',
                            shadow: false,
                            tooltip: {
                                headerFormat: headerFormat,
                                pointFormat: pointFormat
                            }
                            //,dataLabels: {
                            //    enabled: true,
                            //    //verticalAlign: 'top',
                            //    inside: true,
                            //    //align:'left',
                            //    useHTML: true,
                            //    formatter: function () {
                            //        if (this.point.y < 0) {
                            //            return '<div style="float:left;color:black;">' + Highcharts.numberFormat(Math.abs(this.point.y), 0) + '</div>';
                            //        }
                            //        else if (this.point.y == 0) {
                            //            return '';
                            //        }
                            //        return '<div style="float:right;color:black;">' + Highcharts.numberFormat(Math.abs(this.point.y), 0) + '</div>';
                            //    }
                            //}
                        },
                        series: {
                            //events: {
                            //    click: function (event) {

                            //    }
                            //}
                        }
                    },

                    series: [{
                        name: 'Open Support',
                        data: Active_Sup,
                        stack: 'Support'
                    }, {
                        name: 'Closed Support',
                        data: Closed_Sup,
                        stack: 'Support'
                    },
                    {
                        name: 'Open Project',
                        data: Active_Proj,
                        stack: 'Project'

                    },
                    {
                        name: 'Closed Project',
                        data: Closed_Proj,
                        stack: 'Project'
                    }]
                });
                //$('#myModalLoading').modal('hide');
            }

        });

    }

    function cambioIdiomaTexto() {
        idIdioma = $("#IdIdioma").val();
        if (idIdioma != 0) {
            $.ajax({
                url: "/Account/cambioIdiomaTexto?IdIdioma=" + idIdioma,
                type: "GET",
                cache: false,
                dataType: "json",
                success: function (source) {
                    data = source;
                    var valTextos = new Array()
                    $.each(data['Data'], function (index) {
                        valTextos.push((data['Data'][index]));
                    });
                    for (var i = 0; i < valTextos.length; i++) {
                        var valores = valTextos[i].split("|");
                        var valorLlave = valores[1];
                        var valorTexto = valores[0];
                        var clases = document.getElementsByClassName(valorLlave);
                        for (var j = 0; j < clases.length; j++) {
                            clases[j].innerText = valorTexto;
                        }
                    }
                },
                error: function (source) {
                }
            });
        }
    }


</script>

<script type="text/javascript">

        var headerFormat = '<span style="font-size: 12px;font-weight:bold;">{point.key}</span><br/>';
        var pointFormat = '<span style="color:{series.color}">{series.name}</span>: {point.y}<br/>';

        $(document).ready(function () {
            $("#SIN_DATE").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', @DateTime.Now.Month-1, 1),
                change: function () {
                    CreateGraph();
                }
            });
            $("#TO_DATE").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', @DateTime.Now.Month-1, '@DateTime.Now.Day'),
                change: function () {
                    CreateGraph();
                }
            });

            $("#rbTodos").bind("change", function (e) {
                CreateGraph();
            });
            $("#rbInterno").bind("change", function (e) {
                CreateGraph();
            });
            $("#rbExterno").bind("change", function (e) {
                CreateGraph();
            });

            $("#SIN_DATE_WA").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', @DateTime.Now.Month-1, 1),
                change: function () {
                    //CreateGraph();
                    WorkLoadArea();
                }
            });
            $("#TO_DATE_WA").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', @DateTime.Now.Month-1, '@DateTime.Now.Day'),
                change: function () {
                    //CreateGraph();
                    WorkLoadArea();
                }
            });

            $("#rbTodosWA").bind("change", function (e) {
                WorkLoadArea();
            });
            $("#rbInternoWA").bind("change", function (e) {
                WorkLoadArea();
            });
            $("#rbExternoWA").bind("change", function (e) {
                WorkLoadArea();
            });

            $("#SIN_DATE_WSP").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', @DateTime.Now.Month-1, 1),
                change: function () {
                    WorkLoadSupProject();
                }
            });
            $("#TO_DATE_WSP").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', @DateTime.Now.Month-1, '@DateTime.Now.Day'),
                change: function () {
                    WorkLoadSupProject();
                }
            });
            $("#rbTodosWSP").bind("change", function (e) {
                WorkLoadSupProject();
            });
            $("#rbInternoWSP").bind("change", function (e) {
                WorkLoadSupProject();
            });
            $("#rbExternoWSP").bind("change", function (e) {
                WorkLoadSupProject();
            });

            $("#SIN_DATE_WM").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', 0, 1),
                change: function () {
                    WorkLoadManufacturer();
                }
            });
            $("#TO_DATE_WM").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', @DateTime.Now.Month-1, '@DateTime.Now.Day'),
                change: function () {
                    WorkLoadManufacturer();
                }
            });
            $("#rbTodosWM").bind("change", function (e) {
                WorkLoadManufacturer();
            });
            $("#rbInternoWM").bind("change", function (e) {
                WorkLoadManufacturer();
            });
            $("#rbExternoWM").bind("change", function (e) {
                WorkLoadManufacturer();
            });

            //WorkLoadCIA
            $("#SIN_DATE_WC").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', 0, 1),
                change: function () {
                    WorkLoadCIA();
                }
            });
            $("#TO_DATE_WC").kendoDatePicker({
                value: new Date('@DateTime.Now.Year', @DateTime.Now.Month-1, '@DateTime.Now.Day'),
                change: function () {
                    WorkLoadCIA();
                }
            });
            $("#rbTodosWC").bind("change", function (e) {
                WorkLoadCIA();
            });
            $("#rbInternoWC").bind("change", function (e) {
                WorkLoadCIA();
            });
            $("#rbExternoWC").bind("change", function (e) {
                WorkLoadCIA();
            });

            
        if (@Session["ID_ACCO"] != 4) {
            $(".divSubCuenta").css("display", "none");
        }
            var ID_QUEU = $("#ID_QUEU").kendoComboBox({
                dataTextField: "QUEU",
                dataValueField: "ID_QUEU",
                filter: "contains",
                autoBind: true,
                index: 0,
                delay: 500,
                minLength: 0,
                suggest: true,
                dataBound: function (e) {
                    // handle the event
                    var SIN_DATE = $("#SIN_DATE").data("kendoDatePicker");
                    var TO_DATE = $("#TO_DATE").data("kendoDatePicker");
                    SIN_DATE.value(new Date('@DateTime.Now.Year',@DateTime.Now.Month -1, 1));
                    TO_DATE.value(new Date('@DateTime.Now.Year',@DateTime.Now.Month -1, '@DateTime.Now.Day'));
                    CreateGraph();
                },
                change: function (e) {
                    //var value = this.value();
                    CreateGraph();
                    // Use the value of the widget
                },
                dataSource: {
                    schema: {
                        data: "Data",
                        total: "Count"
                    },
                    transport: {
                        read: "/AccountQueue/ListByAcco?var=" + Math.random()
                    }
                }
            }).data("kendoComboBox");
            //GenerateAttendance();

            WorkLoadArea();
            WorkLoadManufacturer();
            WorkLoadCIA();
            WorkLoadSupProject();

            //cambioIdiomaxLlave('CargadeTrabajo|TicketsporEquipo/Estado|ÁreaResponsable|Desde|Hasta|TicketsporÁrea|TicketsporMarca|TicketsporSoporte/Proyecto|TicketsporCompañía');


        });
</script>
