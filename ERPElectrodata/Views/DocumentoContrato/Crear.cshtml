@model ERPElectrodata.Models.DocumentoContrato

@{
    ViewBag.Title = "Crear";
    //Layout = null;
}

<script src="~/Content/themes/plugin/toastr/toastr.min.js"></script>
<link href="~/Content/themes/plugin/toastr/toastr.min.css" rel="stylesheet" />
<div class="form-row">
    <div class="card mb-2">
        <div class="card-header-tab card-header">
            Nuevo Registro de Contrato
        </div>
        <div class="card-body">
            @using (Html.BeginForm("CrearRegistro", "DocumentoContrato", FormMethod.Post, new { enctype = "multipart/form-data", id = "FrmDocumentoContrato", target = "upload_target" }))
            {
                <div class="form-row">
                    <div class="col-md-2">
                        <div class="editor-label">
                            Concepto <span style="color:red">(*)</span>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ConceptoContrato)
                            @Html.ValidationMessageFor(model => model.ConceptoContrato)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Número de OP
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.IdOP)
                            @Html.ValidationMessageFor(model => model.IdOP)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Nombre de Documento
                        </div>
                        <div class="k-textbox" style="width:100%">
                            @Html.EditorFor(model => model.NombreDocumentoContrato)
                            @Html.ValidationMessageFor(model => model.NombreDocumentoContrato)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Estado de contrato <span style="color:red">(*)</span>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.EstadoFirmaContrato)
                            @Html.ValidationMessageFor(model => model.EstadoFirmaContrato)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Cliente <span style="color:red">(*)</span>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.IdCliente)
                            @Html.ValidationMessageFor(model => model.IdCliente)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Cliente Final <span style="color:red">(*)</span>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.IdClienteFinal)
                            @Html.ValidationMessageFor(model => model.IdClienteFinal)
                        </div>
                    </div>

                </div>
                <div class="form-row">
                    <div class="col-md-2">
                        <div class="editor-label">
                            Tipo de Moneda
                        </div>
                        <div class="editor-label">
                            @Html.EditorFor(model => model.TipoMonedaContrato)
                            @Html.ValidationMessageFor(model => model.TipoMonedaContrato)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Monto con IGV
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.MontoContratoConIgv)
                            @Html.ValidationMessageFor(model => model.MontoContratoConIgv)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Visado Legal y/o ZR
                        </div>
                        <div class="form-group">
                            @Html.CheckBox("VisadoLegal", false)
                            @Html.ValidationMessageFor(model => model.VisadoLegal)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Porcentaje Máximo de Penalidad
                        </div>
                        <div class="editor-field" max="100">
                            @Html.EditorFor(model => model.PorcentajeMaximo)
                            @Html.ValidationMessageFor(model => model.PorcentajeMaximo)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Firmante <span style="color:red">(*)</span>
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.IdFirmanteContrato)
                            @Html.ValidationMessageFor(model => model.IdFirmanteContrato)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Fecha de Firma
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.FechaFirmaContrato)
                            @Html.ValidationMessageFor(model => model.FechaFirmaContrato)
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="col-md-2">
                        <div class="editor-label">
                            Fecha Inicio Contrato
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.FechaInicioContrato)
                            @Html.ValidationMessageFor(model => model.FechaInicioContrato)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Fecha Fin Contrato
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.FechaFinContrato)
                            @Html.ValidationMessageFor(model => model.FechaFinContrato)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Fecha Inicio Soporte
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.FechaInicioSoporte)
                            @Html.ValidationMessageFor(model => model.FechaInicioSoporte)
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="editor-label">
                            Fecha Fin Soporte
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.FechaFinSoporte)
                            @Html.ValidationMessageFor(model => model.FechaFinSoporte)
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="col-md-12">
                        <div class="editor-label">
                            Observaciones
                        </div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Observaciones)
                            @Html.ValidationMessageFor(model => model.Observaciones)
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="col-md-4">
                        <br />
                        <button id="submit" class="btn btn-primary btn-block">Crear</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

<!--Cuadro necesario para enviar archivos Adjuntos si realizar reload de toda la página.-->
<iframe id="upload_target" name="upload_target" src="" class="frameHidden" style="display:none"></iframe>

<script id="tmp-CIA" type="text/x-kendo-template">
    <div style="width: 100%; font-size: 1em;">
        <span style="width:100%; font-size:1em;">#= COM_NAME #</span>
        <div style="width:100%; font-size:0.9em; margin-top:-5px;">RUC: #= NUM_TYPE_DI #</div>
    </div>
</script>

<script type="text/javascript">

    $(document).ready(function () {

        $("#Observaciones").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false
        });

        $("#ConceptoContrato").kendoComboBox({
            autoBind: false,
            dataTextField: "VAL_ACCO_PARA",
            dataValueField: "ID_ACCO_PARA",
            filter: "contains",
            suggest: true,
            dataSource: {
                //type: "odata",
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Parameter/ListarConceptoContrato?var=" + Math.random()
                }
            }
        });

        var ConceptoContrato = $("#ConceptoContrato").data("kendoComboBox");

        $("#ConceptoContrato").change(function (e) {
            if (ConceptoContrato.text() == 'Adenda' || ConceptoContrato.text() == 'Contrato') {
                NumeroOP.value("");
                NumeroOP.enable(true);
            } else {
                NumeroOP.value("");
                NumeroOP.enable(false);
            }
        });

        var EstadoFirmaContrato = $("#EstadoFirmaContrato").kendoComboBox({
            autoBind: false,
            dataTextField: "VAL_ACCO_PARA",
            dataValueField: "ID_ACCO_PARA",
            filter: "contains",
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Parameter/ListarEstadoFirmaContrato?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");
        EstadoFirmaContrato.list.width(350);

        var NumeroOP = $("#IdOP").kendoComboBox({
            autoBind: false,
            dataTextField: "NUM_DOCU_SALE",
            dataValueField: "ID_DOCU_SALE",
            filter: "contains",
            suggest: true,
            enable: false,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/DocumentoContrato/ListarNumeroOP?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");
        NumeroOP.list.width(350);

        $("#IdOP").on('change', function (e) {
            //NumeroOP.value()
            
            let OP = $("#IdOP").val();
            if (OP != '') {
                $.ajax({
                    url: "/DocumentoContrato/BuscarPorOP/" + OP,
                    type: "GET",
                    cache: false,
                    dataType: "json",
                    success: function ({ ClienteInicial, ClienteFinal }) {
                        IdCliente.value(ClienteInicial);IdCliente.trigger("change");
                        IdClienteFinal.value(ClienteFinal); IdClienteFinal.trigger("change");
                    },
                    error: function (source) {
                        toastr.error("Error en traer info de OP", "Mensaje");
                    }
                });
            }
        });

        var IdCliente = $("#IdCliente").kendoComboBox({
            autoBind: false,
            dataTextField: "COM_NAME",
            dataValueField: "ID_ENTI",
            filter: "contains",
            suggest: true,
            template: kendo.template($("#tmp-CIA").html()),
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/ListCompanyByAccount?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");
        IdCliente.list.width(350);

        var IdClienteFinal = $("#IdClienteFinal").kendoComboBox({
            autoBind: false,
            dataTextField: "COM_NAME",
            dataValueField: "ID_ENTI",
            filter: "contains",
            suggest: true,
            template: kendo.template($("#tmp-CIA").html()),
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/ListCompanyByAccount?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");
        IdClienteFinal.list.width(350);

        var TipoMonedaContrato = $("#TipoMonedaContrato").kendoComboBox({
            autoBind: false,
            dataTextField: "VAL_ACCO_PARA",
            dataValueField: "ID_ACCO_PARA",
            filter: "contains",
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Parameter/ListarTipoMonedaContrato?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");
        TipoMonedaContrato.list.width(350);

        var IdFirmanteContrato = $("#IdFirmanteContrato").kendoComboBox({
            autoBind: false,
            dataTextField: "Nombre",
            dataValueField: "IdNombre",
            filter: "contains",
            suggest: true,
            dataSource: {
                //type: "odata",
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/Parameter/ListarFirmanteContrato?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");
        IdFirmanteContrato.list.width(350);

        var FechaInicioContrato = $("#FechaInicioContrato").kendoDateTimePicker().data("kendoDateTimePicker");

        var FechaFinContrato = $("#FechaFinContrato").kendoDateTimePicker().data("kendoDateTimePicker");

        var FechaInicioSoporte = $("#FechaInicioSoporte").kendoDateTimePicker().data("kendoDateTimePicker");

        var FechaFinSoporte = $("#FechaFinSoporte").kendoDateTimePicker().data("kendoDateTimePicker");

        var FechaFirmaContrato = $("#FechaFirmaContrato").kendoDateTimePicker().data("kendoDateTimePicker");

        $("#MontoContratoConIgv").kendoNumericTextBox({
            format: '#.###',
            decimals: 2,
            min: 0
        });

        $("#PorcentajeMaximo").kendoNumericTextBox({
            format: '#.###',
            decimals: 2,
            min: 0,
            max: 100
        });

    });
</script>

<script type="text/javascript">

    function uploadDone(msg, code) {
        if (msg == "OK") {

            toastr.success("", "Información actualizada");

            setTimeout(function () {
                location = "http://" + location.host + "/DocumentoContrato/Detalle/" + code;
            }, 1500);

        }
        else {

            var titulo = 'Advertencia';
            var mensaje = 'Contacte al Administrador.';

            if (code == 1) {
                mensaje = 'La OP ingresada no es válida, verifique por favor.';
            } else
                if (code == 2) {
                    mensaje = 'Por favor ingrese los datos obligatorios.';
                }

            toastr.error(mensaje, titulo);
        }
    }

</script>
