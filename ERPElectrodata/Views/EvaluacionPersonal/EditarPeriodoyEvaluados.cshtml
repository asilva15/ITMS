@{
    ViewBag.Title = "EditarPeriodoyEvaluados";
    Layout = null;
}


<link href="~/Content/custom.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery.smartWizard.js"></script>

<link href="~/Content/themes/plugin/select2/select2.css" rel="stylesheet" />
<script src="~/Content/themes/plugin/select2/select2.full.js"></script>
<link href="~/Content/themes/plugin/datepicker/datepicker3.css" rel="stylesheet" />
<script src="~/Content/themes/plugin/datepicker/bootstrap-datepicker.js"></script>
<link href="~/Content/UtilElectrodata.css" rel="stylesheet" />

<link href="~/Content/themes/AdminLTE.css" rel="stylesheet" />
<link href="~/Content/themes/ionicons/css/ionicons.css" rel="stylesheet" />

<link href="~/Content/themes/plugin/DataTables/datatables.css" rel="stylesheet" />
<link href="~/Content/themes/plugin/DataTables/Buttons-1.4.2/css/buttons.bootstrap.css" rel="stylesheet" />
<link href="~/Content/themes/plugin/DataTables/DataTables-1.10.16/css/dataTables.bootstrap4.css" rel="stylesheet" />
<link href="~/Content/ITMS/styles.css" rel="stylesheet" />

<script src="~/Content/themes/plugin/DataTables/datatables.js"></script>
<script src="~/Content/themes/plugin/DataTables/Buttons-1.4.2/js/buttons.bootstrap.js"></script>
<script src="~/Content/themes/plugin/DataTables/Buttons-1.4.2/js/dataTables.buttons.js"></script>
<script src="~/Content/themes/plugin/DataTables/DataTables-1.10.16/js/dataTables.bootstrap4.js"></script>

<link rel="stylesheet" href="~/Content/themes/plugin/iCheck/all.css">
<script src="~/Content/themes/plugin/iCheck/icheck.min.js"></script>

<style>
    #SmallModalTitle {
        font-size: 18px;
    }
</style>
<div class="container-fluid">
    @using (Html.BeginForm("GuardarEditarPeriodoyEvaluados", "EvaluacionPersonal", FormMethod.Post, new { enctype = "multipart/form-data", id = "FrmEvaluacion", name = "FrmEvaluacion", target = "FrmEvaluacionDesempeno" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <input type="hidden" name="FormEstadoPeriodo" id="FormEstadoPeriodo" value="@ViewBag.estadoPeriodo" />
        <input type="hidden" name="FormIdPeriodo" id="FormIdPeriodo" value="@ViewBag.IdPeriodo" />
        <div class="x_panel">
            <div class="x_title">
                <div style="width:85%;padding-left:10%">
                    <br />
                    <center><h2>EDICIÓN DE PERIODO Y EVALUADOS</h2></center>
                    <div class="clearfix"></div>
                </div>
            </div>

            <div class="x_content">
                <!-- Smart Wizard -->
                <div id="wizard" class="form_wizard wizard_horizontal">
                    <ul class="wizard_steps">
                        <li>
                            <a href="#step-1" id="step1">
                                <span class="step_no"><i class="glyphicon glyphicon-calendar"></i></span>
                                <span class="step_descr" title="SGD - Periodo">
                                    1.Periodo
                                </span>
                            </a>
                        </li>
                        <li>
                            <a href="#step-2" id="step2">
                                <span class="step_no"><i class="glyphicon glyphicon-user"></i></span>
                                <span class="step_descr" title="SGD - Evaluados">
                                    2.Evaluados
                                </span>
                            </a>
                        </li>

                    </ul>
                    <div id="step-1" class="form-horizontal">
                        <div class="form-horizontal form-label-left">
                            <div id="divRegistroObjetivos">

                                <div style="padding-left: 30%; ">
                                    <form>
                                        <br /><br />
                                        <div class="form-group">
                                            <label for="FormPeriodo">Periodo</label>
                                            <input type="text" class="form-control" id="FormPeriodo" name="FormPeriodo" style="width:50%">
                                        </div>
                                        <div class="form-group">
                                            <label for="FormDescripcion">Descripcion</label>
                                            <textarea class="form-control" id="FormDescripcion" name="FormDescripcion" rows="3" style="width:50%"></textarea>
                                        </div>
                                        <div class="form-group" style="text-align: right;">
                                            @*<label for="FormDescripcion">Descripcion</label>*@
                                            <label>&nbsp;</label> <!-- Etiqueta vacía para alineación -->
                                            <button type="submit" id="guardarTodo" class="btn btn-primary">Guardar Cambios</button>
                                        </div>
                                    </form>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div id="step-2" class="">
                        <div class="form-horizontal form-label-left">
                            <div class="box-body">
                                <div class="row">
                                    <div class="col-sm-8">
                                        <div class="form-group">
                                            <label for="cbCargo">Cargo: </label>
                                            <input id="cbCargo" class="form-control select2" style="width:80%" />
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group" style="text-align: right;">
                                            <label>&nbsp;</label> <!-- Etiqueta vacía para alineación -->
                                            <button type="submit" id="guardarTodo" class="btn btn-primary">Guardar Cambios</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-content">
                                <div class="tab-pane active" id="tab_1">
                                    <div class="box">
                                        <!-- /.box-header -->
                                        <div class="box-body">
                                            <table id="tablaEvaluados" class="table table-bordered table-striped" style="width:100%">
                                                <thead>
                                                    <tr style="text-align:center;">
                                                        <th>Evaluado</th>
                                                        <th>Jefe Directo</th>
                                                        <th>Cargo</th>
                                                        <th>Evaluar <input type="checkbox" /></th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>

                                            </table>
                                        </div>
                                        <!-- /.box-body -->
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>

        </div>
    }
</div>
<iframe id="FrmEvaluacionDesempeno" name="FrmEvaluacionDesempeno" src="" style="width:0px; height:0px; visibility:hidden;"></iframe>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $(function () {
        $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });
    });
</script>
<script>
    $(document).ready(function () {

        $('#FrmEvaluacion').on('submit', function (e) {
            comboBox.value(""); 
            table.search('').columns().search('').draw();
        });

        $("#FormPeriodo").val("@ViewBag.Periodo");
        $("#FormDescripcion").val("@ViewBag.Descripcion");

        $('#wizard').smartWizard();
        $('.buttonNext').addClass('btn btn-success');
        $('.buttonPrevious').addClass('btn btn-success');
        $('.buttonFinish').addClass('btn btn-default');
        $('.buttonFinish').hide();

          // Initialize the ComboBox
        var comboBox = $("#cbCargo").kendoComboBox({
            autoBind: true,
            dataTextField: "text",
            dataValueField: "id",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/EvaluacionPersonal/ListarCargosEvaluados"
                }
            },
            change: onCargoChange 
        }).data("kendoComboBox");

        // Store checkbox states
        var checkboxStates = {};

        // Initialize DataTable
        var table = $('#tablaEvaluados').DataTable({
            ajax: {
                url: "/EvaluacionPersonal/ListarPersonalED/" + @ViewBag.IdPeriodo,
                dataSrc: function(json) {
                    // Initialize checkboxStates based on initial data
                    json.data.forEach(function(item) {
                        checkboxStates[item.IdPersEntiEvaluado] = item.Check;
                    });
                    return json.data;
                }
            },
            columns: [
                { data: "Evaluado" },
                { data: "Jefe" },
                { data: "Cargo" },
                {
                    data: null,
                    render: function(data, type, row) {
                        // Use checkboxStates to determine if checked
                        var isChecked = checkboxStates[data.IdPersEntiEvaluado] ? 'checked' : '';
                        return '<div><input type="checkbox" id="Evaluado' + data.IdPersEntiEvaluado + '" name="' + data.Evaluado + '" style="width:80%" class="flat-red" ' + isChecked + '></div>';
                    }
                },
            ],
            "bPaginate": false,
            buttons: [
                {
                    extend: 'collection',
                    text: 'Export',
                    buttons: [
                        'excel',
                        'csv',
                        'pdf'
                    ]
                }
            ],
            initComplete: function() {
                // Add event handler for header checkbox
                $('#tablaEvaluados thead').on('change', 'input[type="checkbox"]', function() {
                    var isChecked = $(this).prop('checked');
                    toggleAllCheckboxes(isChecked);
                });

                // Initial update of header checkbox based on initial data
                updateHeaderCheckbox();
            }
        });

        // Update checkbox states when checked/unchecked
        $('#tablaEvaluados tbody').on('change', 'input[type="checkbox"]', function() {
            var data = table.row($(this).parents('tr')).data();
            checkboxStates[data.IdPersEntiEvaluado] = $(this).prop('checked');
            updateHeaderCheckbox();
        });

        // Event handler for ComboBox change
        function onCargoChange() {
            var selectedCargo = comboBox.text();
            if (selectedCargo) {
                // Filter the table based on the selected cargo
                table.columns(2).search(selectedCargo).draw();
            } else {
                // Clear the search filter when combo box is cleared
                table.columns(2).search('').draw();
            }

            // Restore checkbox states after filtering
            restoreCheckboxStates();
            updateHeaderCheckbox();
        }

        // Restore checkbox states after filtering
        function restoreCheckboxStates() {
            $('#tablaEvaluados tbody input[type="checkbox"]').each(function() {
                var data = table.row($(this).parents('tr')).data();
                if (checkboxStates[data.IdPersEntiEvaluado] !== undefined) {
                    $(this).prop('checked', checkboxStates[data.IdPersEntiEvaluado]);
                }
            });
        }

        // Update header checkbox based on row checkboxes
        function updateHeaderCheckbox() {
            var allChecked = true;
            var anyChecked = false;

            $('#tablaEvaluados tbody input[type="checkbox"]').each(function() {
                if (!$(this).prop('checked')) {
                    allChecked = false;
                } else {
                    anyChecked = true;
                }
            });

            var headerCheckbox = $('#tablaEvaluados thead input[type="checkbox"]');
            headerCheckbox.prop('checked', allChecked);
            headerCheckbox.prop('indeterminate', !allChecked && anyChecked);
        }

        // Toggle all checkboxes based on header checkbox
        function toggleAllCheckboxes(isChecked) {
            $('#tablaEvaluados tbody input[type="checkbox"]').each(function() {
                $(this).prop('checked', isChecked);
                var data = table.row($(this).parents('tr')).data();
                checkboxStates[data.IdPersEntiEvaluado] = isChecked;
            });
        }

    });

    function uploadDoneEva(msg, msnErr) {

      /*  $('#myModalLoading').modal('hide');*/
       if (msg == 'OK') {
           toastr.success("", "Se aplicaron los cambios correctamente.");
           $("#divCuerpo").empty();
           $("#divCuerpo").load("/EvaluacionPersonal/PeriodoyEvaluados?var=" + Math.random());
       }
        

       else {
           toastr.warning("", "El registro ha sido guardado.");
       }
    }


</script>

