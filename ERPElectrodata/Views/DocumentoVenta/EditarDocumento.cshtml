
@model ERPElectrodata.Models.DocumentoVenta


@{
    Layout = null;
}

@using (Html.BeginForm("EditarRegistro", "DocumentoVenta", FormMethod.Post, new { enctype = "multipart/form-data", id = "FrmEditarDocVenta", target = "upload_target" }))
{
    @Html.HiddenFor(Model => Model.Id)
    <!--AQUI BTNS-->
<div class="text-right">
    <input id="EstadoTipo" type="hidden" value="@ViewBag.EstadoTipo" />
    <div class="form-check form-check-inline">
        <input type="radio" class="form-check-input" id="radioop" value="1" name="radion">
        <label class="form-check-label" for="radioop"><strong>OPERACIONES</strong></label>
    </div>
    <div class="form-check form-check-inline">
        <input type="radio" class="form-check-input" id="radioout" value="2" name="radion">
        <label class="form-check-label" for="radioout"><strong>MINERIA</strong></label>
    </div>
    @*@if (Convert.ToInt32(Session["EJECUTIVOCOMERCIAL"]) == 1)
        {
            <div class="form-check form-check-inline">
                <input type="radio" class="form-check-input" id="radioop" value="1" name="radion">
                <label class="form-check-label" for="radioop"><strong>OPERACIONES</strong></label>
            </div>
        }
        else if (Convert.ToInt32(Session["EJECUTIVOCOMERCIAL_OUTSOURCING"]) == 1)
        {
            <div class="form-check form-check-inline">
                <input type="radio" class="form-check-input" id="radioout" value="2" name="radion">
                <label class="form-check-label" for="radioout"><strong>OUTSOURCING</strong></label>
            </div>
        }*@
</div>
    <hr style="color: #0056b2;" />
    <!---->
    <div class="form-group row">
        <div class="col-md-3">
            <div class="editor-label">
                Tipo OP <span style="color:red">(*)</span>
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IdTipoOP)
                @Html.ValidationMessageFor(model => model.IdTipoOP)
            </div>
        </div>
        <div class="col-md-3">
            <div class="editor-label">
                OP <span style="color:red">(*)</span>
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IdOP)
                @Html.ValidationMessageFor(model => model.IdOP)
            </div>
        </div>
        <div class="col-md-3">
            <div class="editor-label">
                Cliente <span style="color:red">(*)</span>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.IdCliente)
                @Html.ValidationMessageFor(model => model.IdCliente)
            </div>
        </div>
        <div class="col-md-3">
            <div class="editor-label">
                Cliente Final <span style="color:red">(*)</span>
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.IdClienteFinal)
                @Html.ValidationMessageFor(model => model.IdClienteFinal)
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-4">
            <div class="editor-label">
                Objeto del Servicio
            </div>
            <div class="k-textbox" style="width:100%">
                @Html.EditorFor(model => model.Servicio)
                @Html.ValidationMessageFor(model => model.Servicio)
            </div>
        </div>
        <div class="col-md-2">
            <div class="editor-label">
                Tipo de Cambio
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.TipoCambio)
                @Html.ValidationMessageFor(model => model.TipoCambio)
            </div>
        </div>
        <div class="col-md-3">
            <div class="editor-label">
                $ Monto Facturado
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MontoDolares)
                @Html.ValidationMessageFor(model => model.MontoDolares)
            </div>
        </div>
        <div class="col-md-3">
            <div class="editor-label">
                S/ Monto Facturado
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.MontoSoles)
                @Html.ValidationMessageFor(model => model.MontoSoles)
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-3">
            <div class="editor-label">
                Fecha Inicio Contrato
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FechaInicioContrato)
                @Html.ValidationMessageFor(model => model.FechaInicioContrato)
            </div>
        </div>
        <div class="col-md-3">
            <div class="editor-label">
                Fecha Fin Contrato
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FechaFinContrato)
                @Html.ValidationMessageFor(model => model.FechaFinContrato)
            </div>
        </div>
        <div class="col-md-3">
            <div class="editor-label">
                Fecha Inicio Soporte
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FechaInicioSoporte)
                @Html.ValidationMessageFor(model => model.FechaInicioSoporte)
            </div>
        </div>
        <div class="col-md-3">
            <div class="editor-label">
                Fecha Fin Soporte
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FechaFinSoporte)
                @Html.ValidationMessageFor(model => model.FechaFinSoporte)
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-12">
            <div class="editor-label">
                Descripción de la Solución
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Descripcion)
                @Html.ValidationMessageFor(model => model.Descripcion)
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-8"></div>
        <div class="col-md-2">
            <button id="btnCancelar" class="btn btn-light btn-block" type="button">Cancelar</button>
        </div>
        <div class="col-md-2">
            <button id="btnEditar" class="btn btn-primary btn-block" type="submit">Editar</button>
        </div>
    </div>
}

<!--Cuadro necesario para enviar archivos Adjuntos si realizar reload de toda la página.-->
<iframe id="upload_target" name="upload_target" src="" class="frameHidden" style="display:none"></iframe>

<script id="tmp-CIA" type="text/x-kendo-template">
    <div style="width: 100%; font-size: 1em;">
        <span style="width:100%; font-size:1em;">#= COM_NAME #</span>
        <div style="width:100%; font-size:0.9em; margin-top:-5px;">RUC: #= NUM_TYPE_DI #</div>
    </div>
</script>
<script>
    function estadoType() {

        var EstadoTipo = document.getElementById("EstadoTipo").value;
        /*if (EstadoTipo== 1 || EstadoTipo=='1' ) {
            $("#radioop").prop("checked", true);
        } else {
            $("#radioout").prop("checked", true);
        }*/
        if (!!document.getElementById("radioop") == true && (EstadoTipo == 1 || EstadoTipo == '1')) {
            $("#radioop").prop("checked", true);
        } else if (!!document.getElementById("radioout") == true && (EstadoTipo == 2 || EstadoTipo == '2')) {
            $("#radioout").prop("checked", true);
        }
    }
    $(function () {
        $('input[name=radion]').change(function (e) {
            var cbtop = $("#IdTipoOP").data("kendoComboBox");
            cbtop.value("");
        });
    });
</script>
<script type="text/javascript">

    $(document).ready(function () {

        estadoType();

        $("#Descripcion").kendoEditor({
            tools: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "foreColor",
                "backColor",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "justifyFull",
                "insertUnorderedList",
                "insertOrderedList",
                "indent",
                "outdent",
                "createLink",
                "unlink",
                "subscript",
                "superscript"
            ], encoded: false
        });

        $("#IdTipoOP").kendoComboBox({
            autoBind: true,
            dataTextField: "COD_TYPE_DOCU_SALE",
            dataValueField: "ID_TYPE_DOCU_SALE",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                //type: "odata",
                serverFiltering: false,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/TypeDocumentSale/ListAll?var=" + Math.random()
                }
            }
        });
        var IdTipoOP = $("#IdTipoOP").data("kendoComboBox");

        $("#IdOP").kendoComboBox({
            autoBind: true,
            dataTextField: "NUM_DOCU_SALE",
            dataValueField: "ID_DOCU_SALE",
            cascadeFrom: 'IdTipoOP',
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            dataSource: {
                //type: "odata",
                serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/TypeDocumentSale/ListOPxTipo?var=" + Math.random(),
                    parameterMap: function (data, read) {
                        return {
                            EstadoTipo: $("#radioop").prop('checked') == true ? '1' : $("#radioout").prop('checked') == true ? '2' : '0',
                            //EstadoTipo: !!document.getElementById("radioop") == true ? '1' : '2',
                            idTypeDocuSale: data.filter.filters[0].field,
                            IdTypeOp: data.filter.filters[0].value
                        }
                    }
                }
            }
        });
        var IdOP = $("#IdOP").data("kendoComboBox");

        $("#IdSolucionTI").kendoComboBox({
            autoBind: true,
            dataTextField: "NombreSolucion",
            dataValueField: "IdSolucion",
            filter: "contains",
            suggest: true,
            dataSource: {
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/SolucionTI/Listar?var=" + Math.random()
                }
            }
        });
        var IdSolucionTI = $("#IdSolucionTI").data("kendoComboBox");

        var IdCliente = $("#IdCliente").kendoComboBox({
            autoBind: true,
            dataTextField: "COM_NAME",
            dataValueField: "ID_ENTI",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            template: kendo.template($("#tmp-CIA").html()),
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/ListCompanyByAccount?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");
        IdCliente.list.width(350);

        var IdClienteFinal = $("#IdClienteFinal").kendoComboBox({
            autoBind: true,
            dataTextField: "COM_NAME",
            dataValueField: "ID_ENTI",
            filter: "contains",
            delay: 500,
            minLength: 0,
            suggest: true,
            template: kendo.template($("#tmp-CIA").html()),
            dataSource: {
                //serverFiltering: true,
                schema: {
                    data: "Data",
                    total: "Count"
                },
                transport: {
                    read: "/AccountEntity/ListCompanyByAccount?var=" + Math.random()
                }
            }
        }).data("kendoComboBox");
        IdClienteFinal.list.width(350);

        var FechaInicioContrato = $("#FechaInicioContrato").kendoDateTimePicker().data("kendoDateTimePicker");
        var FechaFinContrato = $("#FechaFinContrato").kendoDateTimePicker().data("kendoDateTimePicker");
        var FechaInicioSoporte = $("#FechaInicioSoporte").kendoDateTimePicker().data("kendoDateTimePicker");
        var FechaFinSoporte = $("#FechaFinSoporte").kendoDateTimePicker().data("kendoDateTimePicker");

        $("#TipoCambio").kendoNumericTextBox({
            format: '#.###',
            decimals: 3,
            min: 0
        });
        $("#MontoDolares").kendoNumericTextBox({
            format: '#.###',
            decimals: 3,
            min: 0
        });
        $("#MontoSoles").kendoNumericTextBox({
            format: '#.###',
            decimals: 3,
            min: 0
        });

        $("#btnCancelar").click(function (event) {
            $("[data-dismiss=modal]").trigger({ type: "click" });
        });

    });

</script>
