@model ERPElectrodata.Models.TablaLookerStudio
@{
    Layout = null;
}
<style>
    .select2-container--bootstrap .select2-selection--single {
        height: calc(2.25rem + 2px);
    }
    .titulo {
        height: 45px;
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="main-card card">
            @using (Html.BeginForm("AgregarLookerStudio", "ServiceNow", FormMethod.Post, new { enctype = "multipart/form-data", id = "FrmAgregarLookerStudio", target = "upload_target" }))
            {
                <input type="hidden" id="id_TablaLookerStudio" name="id_TablaLookerStudio" value="@Model.id_TablaLookerStudio" />
                <input type="hidden" id="created_at" name="created_at" value="@Model.created_at" />
                <input type="hidden" id="GrupoAsignacionTexto" name="GrupoDeAsignacion" />
                <input type="hidden" id="AtribuidoATexto" name="AtribuidoA"/>
                <input type="hidden" id="CategoriaTexto" name="Categoria" />
                <input type="hidden" id="AbiertoPorTexto" name="AbiertoPor" />
                <input type="hidden" id="ActualizadoPorTexto" name="ActualizadoPor" />
                <input type="hidden" id="SubCategoriaTexto" name="SubCategoria" />
                <input type="hidden" id="SolicitanteTexto" name="Solicitante" />
                <input type="hidden" id="CerradoPorTexto" name="CerradoPor" />
                //Inputs con valor en numero

                <input type="hidden" id="Supervision_estimadoNumero" name="Supervision_estimado" />
                <input type="hidden" id="Infraestructura_estimadoNumero" name="Infraestructura_estimado" />
                <input type="hidden" id="HelpDesk_estimadoNumero" name="HelpDesk_estimado" />
                <input type="hidden" id="SoporteUser_estimadoNumero" name="SoporteUser_estimado" />
                <input type="hidden" id="Arquitectura_estimadoNumero" name="Arquitectura_estimado" />
                <input type="hidden" id="ServicioDBA_estimadoNumero" name="ServicioDBA_estimado" />
                <input type="hidden" id="TotalHoras_estimadoNumero" name="TotalHoras_estimado" />
                <input type="hidden" id="Supervision_realNumero" name="Supervision_real" />
                <input type="hidden" id="Infraestructura_realNumero" name="Infraestructura_real" />
                <input type="hidden" id="HelpDesk_realNumero" name="HelpDesk_real" />
                <input type="hidden" id="SoporteUser_realNumero" name="SoporteUser_real" />
                <input type="hidden" id="Arquitectura_realNumero" name="Arquitectura_real" />
                <input type="hidden" id="ServicioDBA_realNumero" name="ServicioDBA_real" />
                <input type="hidden" id="TotalHoras_realNumero" name="TotalHoras_real" />


                <div class="card-body">
                    <div class="col-md-12">
                        <div class="form-row">
                            <div class="col-md-12">
                                <div class="form-row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Tipo de Atencion</label>
                                            <select id="TipoAtencion" name="TipoAtencion" class="form-control">
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Grupo de Asignación</label>
                                            <select id="GrupoDeAsignacion" class="form-control">
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Atribuido a</label>
                                            <select id="AtribuidoA" class="form-control">
                                                <option value="">&nbsp;</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Area</label>
                                            <input class="form-control" type="text" id="Area" name="Area" readonly />
                                        </div>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Descripción del ticket (RQ/IN - Texto)</label>
                                            <input class="form-control" type="text" id="BreveDescripcion" name="BreveDescripcion" />
                                        </div>
                                    </div>
                                    <div class="col-md-2" hidden>
                                        <div class="form-group">
                                            <label>Tipo</label>
                                            <input class="form-control" type="text" id="Tipo" name="Tipo" readonly />
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Prioridad</label>
                                            <select id="Prioridad" name="Prioridad" class="form-control">
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Unidad de Negocio</label>
                                            <select id="UnidadNegocio" name="UnidadNegocio" class="form-control">
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-row">

                                    <div class="col-md-3" hidden>
                                        <div class="form-group">
                                            <label id="" for="" class="">Canal</label>
                                            <select id="Canal" name="Canal" class="form-control">
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3" hidden>
                                        <div class="form-group">
                                            <label>Estado de Incidencia</label>
                                            <select id="EstadoIncidencia" name="EstadoIncidencia" class="form-control">
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Solicitante</label>
                                            <select id="Solicitante" class="form-control">
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <label>Abierto</label>
                                        <input class="form-control" type="datetime-local" id="Abierto" name="Abierto" value="@ViewBag.Abierto" step="1" />
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Resolución(Horas)</label>
                                            <input class="form-control" type="text" placeholder="00:00" id="ResolucionHrs" name="ResolucionHrs" oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Comentario</label>
                                            <input class="form-control" type="text" id="Comentario" name="Comentario" />
                                        </div>
                                    </div>
                                </div>
                                <div class="form-row" hidden>
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>Motivo Poner Espera</label>
                                            <input class="form-control" type="text" id="MotivoPonerEspera" name="MotivoPonerEspera" />
                                        </div>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="col-md-4" hidden>
                                        <div class="form-group">
                                            <label>Creado Por</label>
                                            <input class="form-control" type="text" id="CreadoPor" name="CreadoPor" readonly />
                                        </div>
                                    </div>
                                   

                                </div>
                                <div class="form-row" hidden>
                                    
                                    <div class="col-md-3" hidden>
                                        <div class="form-group">
                                            <label>Fecha de Vencimiento</label>
                                            <input class="form-control" type="datetime-local" id="FechaVencimiento" name="FechaVencimiento" value="@ViewBag.Abierto" step="1" />
                                        </div>
                                    </div>
                                    <div class="col-md-3" hidden>
                                        <div class="form-group">
                                            <label>Actualizado</label>
                                            <input class="form-control" type="datetime-local" id="Actualizado" name="Actualizado" value="@ViewBag.Abierto" step="1" />
                                        </div>

                                    </div>
                                </div>
                                <div class="form-row" hidden>
                                    <div class="col-md-4" hidden>
                                        <div class="form-group">
                                            <label>Abierto Por</label>
                                            <select id="AbiertoPor" class="form-control">
                                                <option value="">&nbsp;</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-4" hidden>
                                        <div class="form-group">
                                            <label>Cerrado Por</label>
                                            <select id="CerradoPor" class="form-control">
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-4" hidden>
                                        <div class="form-group">
                                            <label>Actualizado Por</label>
                                            <select id="ActualizadoPor" class="form-control">
                                                <option value="">&nbsp;</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Categoria</label>
                                            <select id="Categoria" class="form-control">
                                                <option value="No Aplica">No Aplica</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Subcategoria</label>
                                            <select id="SubCategoria" class="form-control">
                                                <option value="No Aplica">No Aplica</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="col-md-2">
                                        <div class="form-group">
                                            <label class="titulo"></label>
                                            <label class="font-weight-bold">Horas Estimadas</label>
                                        </div>
                                    </div>
                                    <div class="col-md-8 form-row">
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="titulo">Supervisión</label>
                                                <input class="form-control" type="text" placeholder="00:00" id="Supervision_estimado" oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="titulo">Infraestructura</label>
                                                <input class="form-control" type="text" placeholder="00:00" id="Infraestructura_estimado" oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="titulo">HelpDesk</label>
                                                <input class="form-control" type="text" placeholder="00:00" id="HelpDesk_estimado"  oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="titulo">Soporte Usuario</label>
                                                <input class="form-control" type="text" placeholder="00:00" id="SoporteUser_estimado"  oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="titulo">Arquitectura</label>
                                                <input class="form-control" type="text" placeholder="00:00" id="Arquitectura_estimado"  oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="titulo">Servicio DBA</label>
                                                <input class="form-control" type="text" placeholder="00:00" id="ServicioDBA_estimado"  oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-group">
                                            <label class="titulo font-weight-bold">Total</label>
                                            <input class="form-control" type="text" placeholder="00:00" id="TotalHoras_estimado"  readonly />
                                        </div>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="col-md-2">
                                        <label class="font-weight-bold">Horas Reales</label>
                                    </div>
                                    <div class="col-md-8 form-row">
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <input class="form-control" type="text" placeholder="00:00" id="Supervision_real" oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <input class="form-control" type="text" placeholder="00:00" id="Infraestructura_real"  oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <input class="form-control" type="text" placeholder="00:00" id="HelpDesk_real" oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <input class="form-control" type="text" placeholder="00:00" id="SoporteUser_real" oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <input class="form-control" type="text" placeholder="00:00" id="Arquitectura_real" oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <input class="form-control" type="text" placeholder="00:00" id="ServicioDBA_real" oninput="handleInput(event)" onchange="validarHora(event)" autocomplete="off" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-group">
                                            <input class="form-control" type="text" placeholder="00:00" id="TotalHoras_real" readonly />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="d-block text-right card-footer">
                    <button class="btn-shadow btn btn-primary" id="submit" type="submit">Guardar</button>
                </div>
            }
        </div>
    </div>
    <button id="closeModal" data-dismiss="modal" hidden></button>
</div>
<input type="hidden" id="usuarioNoEncontrado" value="" />
<script>
    var listaAtribuidoA = []
    var listaSubcategoria = []
    var listaCategoriasOriginal = []
    var listaFiltrada = []
    var dataPrioridad = [
        {
            id: '1 - Crítico',
            text: '1 - Crítico',
        },
        {
            id: '2 - Alto',
            text: '2 - Alto',
        },
        {
            id: '3 - Moderado',
            text: '3 - Moderado',
        },
        {
            id: '4 - Bajo',
            text: '4 - Bajo',
        },
        {
            id: '5 - En planificación',
            text: '5 - En planificación',
        },
        {
            id: '6 - No Definido',
            text: '6 - No Definido',
        }]
    var dataUN = [
        {
            id: 'Hudbay Peru',
            text: 'Hudbay Peru',
        },
        {
            id: 'Hudbay Arizona',
            text: 'Hudbay Arizona',
        }]
    var estadoIncidencia = [
        {
            id: 'Nuevo',
            text: 'Nuevo'
        },
        {
            id: 'En espera',
            text: 'En espera'
        },
        {
            id: 'Cerrado',
            text: 'Cerrado'
        }]
    $(document).ready(function () {
        
        //Se agrega las animaciones y funciones extras a selectores
        //Selector de Prioridades
        $('#Prioridad').select2({
            data: dataPrioridad,
            theme: "bootstrap"
        })
        $('#Prioridad').val('4 - Bajo').trigger('change');
        

        $('#UnidadNegocio').select2({
            data: dataUN,
            theme: "bootstrap"
        })

        $('#EstadoIncidencia').select2({
            data: estadoIncidencia,
            theme: "bootstrap"
        })
        $('#EstadoIncidencia').val('Cerrado').trigger('change');

        $('#AtribuidoA').prop("disabled",true)

        $.ajax({
            url: '/ServiceNow/ObtenerTiposAtencion',
            type: "GET",
            dataType: "json",
            success: function (data) {
                //Se eliminara Ticket
                const dataFiltrada = data.data.filter(tipo => tipo.text != "Ticket")
                let atencionSelect = $('#TipoAtencion').select2({
                    data: dataFiltrada,
                    theme: "bootstrap"
                });
                cargarCategorias()
                /*document.getElementById("CategoriaTexto").value = "No Aplica"*/
            }
        });

        $.ajax({
            url: '/ServiceNow/ObtenerGrupoAsignacion',
            type: "GET",
            dataType: "json",
            success: function (data) {
                //Se eliminara Ticket
                //const dataFiltrada=data.data.filter(tipo=>tipo.text != "Ticket")
                let grupoAsignacion = $('#GrupoDeAsignacion').select2({
                    data: data.data,
                    theme: "bootstrap"
                });

                cargarDependientesAtribuidoA()
                /*console.log($('#GrupoDeAsignacion').select2('data'))*/
                document.getElementById("GrupoAsignacionTexto").value = $('#GrupoDeAsignacion').select2('data')[0].text
            }
        })

        $.ajax({
            url: '/ServiceNow/ObtenerSolicitantes',
            type: "GET",
            dataType: "json",
            success: function (data) {
                $('#Solicitante').select2({
                    data: data.data,
                    theme: "bootstrap"
                })

                $('#CerradoPor').select2({
                    data: data.data,
                    theme: "bootstrap"
                })
                $("#Solicitante").val(1).trigger('change');
                //$("#CerradoPor").val(1).trigger('change');
            }
        })
        

        $.ajax({
            url: '/ServiceNow/ObtenerCanales',
            type: "GET",
            dataType: "json",
            success: function (data) {
                $('#Canal').select2({
                    data: data.data,
                    theme: "bootstrap"
                });
            }
        })

        function cargarCategorias() {
            $.ajax({
                url: '/ServiceNow/ObtenerCategorias',
                type: "GET",
                dataType: "json",
                success: function (data) {
                    var valoresSeleccionados = $('#TipoAtencion').select2('data');
                    listaCategoriasOriginal = data.data
                    if (valoresSeleccionados[0].id == "No Aplica") {
                        listaFiltrada = listaCategoriasOriginal
                    } else {
                        listaFiltrada = listaCategoriasOriginal.filter(x => x.idTipoAtencion == valoresSeleccionados[0].idAtencion)
                    }
                    let categoriaSelect = $('#Categoria').select2({
                        data: listaFiltrada,
                        theme: "bootstrap"
                    });
                    var categorias = $('#Categoria');
                    //categorias.empty();
                    //categorias.append(new Option('No Aplica', "No Aplica", true, true));
                    listaFiltrada.forEach(function (item) {
                        categorias.append(new Option(item.text, item.id, true, true));
                    });
                    console.log('termino de cargar categorias')
                    cargarSubCategorias()
                }
            })
        }
        
        
        //$.ajax({
        //    url: '/ServiceNow/ObtenerServicesNowTickets',
        //    type: "GET",
        //    dataType: "json",
        //    success: function (data) {
        //        let numeroSelect = $('#Numero').select2({
        //            data:data.data,
        //            theme: "bootstrap"
        //        });
        //    }
        //})
    });

    function actualizarCategorias() {
        var valoresSeleccionados = $('#TipoAtencion').select2('data');
        listaFiltrada = listaCategoriasOriginal.filter(x => x.idTipoAtencion == valoresSeleccionados[0].idAtencion)
        var categorias = $('#Categoria');
        categorias.empty();
        categorias.append(new Option('No Aplica', "No Aplica", true, true));
        listaFiltrada.forEach(function (item) {
            categorias.append(new Option(item.text, item.id, true, true));
        });
        $("#Categoria").val('No Aplica').trigger('change');
        document.getElementById("CategoriaTexto").value = categorias.select2('data')[0].text
    }

    function cargarValoresIniciales() {

        console.log($("#SubCategoria"))
        $("#Categoria").val('No Aplica').trigger('change');
        document.getElementById("CategoriaTexto").value = "No Aplica"
    }

    $('#Solicitante').on('change', function (e) {
        
        const solicitanteSelect = $("#Solicitante").select2('data')
        document.getElementById("SolicitanteTexto").value = solicitanteSelect[0].text
        $("#CerradoPor").val(solicitanteSelect[0].id).trigger('change');
    })

    $('#CerradoPor').on('change', function (e) {
        const solicitanteSelect = $("#CerradoPor").select2('data')
        document.getElementById("CerradoPorTexto").value = solicitanteSelect[0].text
    })

    $('#TipoAtencion').on('change', function (e) {
        actualizarCategorias()  
    })
    
    $('#GrupoDeAsignacion').on('change', function (e) {
        $('#AtribuidoA').prop("disabled", false);
        var atribuidoLista = $('#AtribuidoA');
        var abiertoPor = $('#AbiertoPor');
        var actualizadoPor = $('#ActualizadoPor');
        document.getElementById("GrupoAsignacionTexto").value = $('#GrupoDeAsignacion').select2('data')[0].text
        document.getElementById("CreadoPor").value = ""
        const gpoSeleccionado = $('#GrupoDeAsignacion').select2('data')[0].id
        const filtrarListaEquivalencia = listaAtribuidoA.filter(x => x.id_GpoAsignacion == gpoSeleccionado)
        atribuidoLista.empty();
        filtrarListaEquivalencia.forEach(function (item) {
            atribuidoLista.append(new Option(item.text, item.id, item.area, true, true));
        });

        abiertoPor.empty();
        abiertoPor.append(new Option('\u00A0', "", true, true));
        filtrarListaEquivalencia.forEach(function (item) {
            abiertoPor.append(new Option(item.text, item.id, item.area, true, true));
        });

        actualizadoPor.empty();
        actualizadoPor.append(new Option('\u00A0', "", true, true));
        filtrarListaEquivalencia.forEach(function (item) {
            actualizadoPor.append(new Option(item.text, item.id, item.area, true, true));
        });

        if (filtrarListaEquivalencia.length == 0) {
            document.getElementById("Area").value=""
        }
        if (filtrarListaEquivalencia.length !== 0) {
            $("#AtribuidoA").val(filtrarListaEquivalencia[0].id).trigger('change');
            $("#AbiertoPor").val("").trigger('change');
            $("#ActualizadoPor").val("").trigger('change');
        }
        const atribuidoSeleccionado = $('#AtribuidoA').select2('data')
        if (atribuidoSeleccionado.length == 0) {
            document.getElementById("AtribuidoATexto").value = ""
            document.getElementById("AbiertoPorTexto").value = ""
            document.getElementById("ActualizadoPorTexto").value = ""
        } else {
            document.getElementById("AtribuidoATexto").value = atribuidoSeleccionado[0].text
        }
        
    });
    $('#AtribuidoA').on('change', function (e) {
        document.getElementById("AtribuidoATexto").value = $('#AtribuidoA').select2('data')[0].text
        var data = $(this).select2('data')[0]; // Obtener los datos del elemento seleccionado
        if (data == undefined) {
            toastr.warning(`No se encontro usuario ${document.getElementById("usuarioNoEncontrado").value} en la tabla Equivalencia`);
            $("#Area").val('').trigger('change');
            document.getElementById("Area").value = ""
            document.getElementById("CreadoPor").value = ""
        } else {
            if (data) {
                var nombre = data.id;
                var texto = data.text
                if (nombre == '') {
                    document.getElementById("Area").value = ""
                    document.getElementById("CreadoPor").value = ""
                } else {
                    const obtenerAtribuidoDetalle = listaAtribuidoA.filter(x => x.id == nombre)
                    document.getElementById("Area").value = obtenerAtribuidoDetalle[0].area
                    document.getElementById("CreadoPor").value = obtenerAtribuidoDetalle[0].usuarioRed
                }
            }
        }
        $("#ResolucionHrs").val("")
        actualizarHoras()
    });

    $('#AbiertoPor').on('change', function (e) {
        document.getElementById("AbiertoPorTexto").value = $('#AbiertoPor').select2('data')[0].text
    })
    $('#ActualizadoPor').on('change', function (e) {
        document.getElementById("ActualizadoPorTexto").value = $('#ActualizadoPor').select2('data')[0].text
    })

    $('#BreveDescripcion').on('change', function (e) {
        document.getElementById("Tipo").value = obtenerPrimeraPalabra(e.target.value)
    });
    $('#Solicitante').on('change', function (e) {
        document.getElementById("CerradoPor").value = document.getElementById("Solicitante").value
    });
    $('#ResolucionHrs').on('change', function (e) {
        if ($("#Area").val() == "Supervisión") {
            document.getElementById("Supervision_estimado").value = document.getElementById("ResolucionHrs").value
            document.getElementById("Supervision_real").value = document.getElementById("ResolucionHrs").value
        }
        if ($("#Area").val() == "Servicio Help Desk") {
            document.getElementById("HelpDesk_estimado").value = document.getElementById("ResolucionHrs").value
            document.getElementById("HelpDesk_real").value = document.getElementById("ResolucionHrs").value
        }
        if ($("#Area").val() == "Infraestructura") {
            document.getElementById("Infraestructura_estimado").value = document.getElementById("ResolucionHrs").value
            document.getElementById("Infraestructura_real").value = document.getElementById("ResolucionHrs").value
        }
        if ($("#Area").val() == "Arquitectura") {
            document.getElementById("Arquitectura_estimado").value = document.getElementById("ResolucionHrs").value
            document.getElementById("Arquitectura_real").value = document.getElementById("ResolucionHrs").value
        }
        if ($("#Area").val() == "Soporte a Usuario") {
            document.getElementById("SoporteUser_estimado").value = document.getElementById("ResolucionHrs").value
            document.getElementById("SoporteUser_real").value = document.getElementById("ResolucionHrs").value
        }
        if ($("#Area").val() == "Servicio DBA") {
            document.getElementById("ServicioDBA_estimado").value = document.getElementById("ResolucionHrs").value
            document.getElementById("ServicioDBA_real").value = document.getElementById("ResolucionHrs").value
        }
        
        calcularTotalHorasReales()
        calcularTotalHorasEstimadas()
    });

    $('#Categoria').on('change', function (e) {

        actualizarSubCategoriaLista()
        actualizarHoras()
        document.getElementById("CategoriaTexto").value = $('#Categoria').select2('data')[0].text
    });
    $('#SubCategoria').on('change', function (e) {
        const obtenerSubCate = $('#SubCategoria').select2('data')
        document.getElementById("SubCategoriaTexto").value = obtenerSubCate[0].text

        
    })
    

    $('#Abierto').on('change', function (e) {
        calcularFechaVencimiento()
    })

    $('#Supervision_estimado').on('change', function (e) {
        calcularTotalHorasEstimadas()
    })
    $('#Infraestructura_estimado').on('change', function (e) {
        calcularTotalHorasEstimadas()
    })
    $('#HelpDesk_estimado').on('change', function (e) {
        calcularTotalHorasEstimadas()
    })
    $('#SoporteUser_estimado').on('change', function (e) {
        calcularTotalHorasEstimadas()
    })
    $('#Arquitectura_estimado').on('change', function (e) {
        calcularTotalHorasEstimadas()
    })
    $('#ServicioDBA_estimado').on('change', function (e) {
        calcularTotalHorasEstimadas()
    })
    //Real
    $('#Supervision_real').on('change', function (e) {
        calcularTotalHorasReales()
    })
    $('#Infraestructura_real').on('change', function (e) {
        calcularTotalHorasReales()
    })
    $('#HelpDesk_real').on('change', function (e) {
        calcularTotalHorasReales()
    })
    $('#SoporteUser_real').on('change', function (e) {
        calcularTotalHorasReales()
    })
    $('#Arquitectura_real').on('change', function (e) {
        calcularTotalHorasReales()
    })
    $('#ServicioDBA_real').on('change', function (e) {
        calcularTotalHorasReales()
    })
    function actualizarHoras() {
        var dataCat = $('#Categoria').select2('data')[0]; // Obtener los datos del elemento seleccionado
        if (dataCat.id == 'No Aplica') {
            document.getElementById("Supervision_estimado").value = ""
            document.getElementById("Supervision_real").value = ""
            document.getElementById("Infraestructura_estimado").value = ""
            document.getElementById("Infraestructura_real").value = ""
            document.getElementById("HelpDesk_estimado").value = ""
            document.getElementById("HelpDesk_real").value = ""
            document.getElementById("SoporteUser_estimado").value = ""
            document.getElementById("SoporteUser_real").value = ""
            document.getElementById("Arquitectura_estimado").value = ""
            document.getElementById("Arquitectura_real").value = ""
            document.getElementById("ServicioDBA_estimado").value = ""
            document.getElementById("ServicioDBA_real").value = ""
            document.getElementById("TotalHoras_estimado").value = ""
            document.getElementById("TotalHoras_real").value = ""
        } else {
            $.ajax({
                url: `/ServiceNow/ObtenerDetalleCategoria?idCategoria=${dataCat.id}`,
                type: "GET",
                dataType: "json",
                success: function (res) {
                    const data = res.data[0]
                    document.getElementById("Supervision_estimado").value = convertirNumeroAHoras(data.Supervision_estimado)
                    document.getElementById("Supervision_real").value = convertirNumeroAHoras(data.Supervision_real)
                    document.getElementById("Infraestructura_estimado").value = convertirNumeroAHoras(data.Infraestructura_estimado)
                    document.getElementById("Infraestructura_real").value = convertirNumeroAHoras(data.Infraestructura_real)
                    document.getElementById("HelpDesk_estimado").value = convertirNumeroAHoras(data.HelpDesk_estimado)
                    document.getElementById("HelpDesk_real").value = convertirNumeroAHoras(data.HelpDesk_real)
                    document.getElementById("SoporteUser_estimado").value = convertirNumeroAHoras(data.SoporteUser_estimado)
                    document.getElementById("SoporteUser_real").value = convertirNumeroAHoras(data.SoporteUser_real)
                    document.getElementById("Arquitectura_estimado").value = convertirNumeroAHoras(data.Arquitectura_estimado)
                    document.getElementById("Arquitectura_real").value = convertirNumeroAHoras(data.Arquitectura_real)
                    document.getElementById("ServicioDBA_estimado").value = convertirNumeroAHoras(data.ServicioDBA_estimado)
                    document.getElementById("ServicioDBA_real").value = convertirNumeroAHoras(data.ServicioDBA_real)
                    document.getElementById("TotalHoras_estimado").value = convertirNumeroAHoras(data.TotalHoras_estimado)
                    document.getElementById("TotalHoras_real").value = convertirNumeroAHoras(data.TotalHoras_real)
                }
            })
        }
    }
    function calcularFechaVencimiento() {
        const fechaAbierto = new Date(document.getElementById("Abierto").value)
        const valorAbierto = convertirHorasANumero(document.getElementById("ResolucionHrs").value)
        const resolucionHoras = parseFloat(valorAbierto)
        fechaAbierto.setSeconds(fechaAbierto.getSeconds() + (resolucionHoras * 3600))
        const year = fechaAbierto.getFullYear();
        const month = (fechaAbierto.getMonth() + 1).toString().padStart(2, '0');
        const day = fechaAbierto.getDate().toString().padStart(2, '0');
        const hours = fechaAbierto.getHours().toString().padStart(2, '0');
        const minutes = fechaAbierto.getMinutes().toString().padStart(2, '0');
        const seconds = fechaAbierto.getSeconds().toString().padStart(2, '0');
        const fechaFormateada = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`;
        document.getElementById("FechaVencimiento").value = fechaFormateada
    }
    function convertirFecha(dateFromService) {
        if (dateFromService == null) {
            return null
        } else {
            // Extrae los milisegundos de la cadena
            const milliseconds = parseInt(dateFromService.replace(/\/Date\((-?\d+)\)\//, '$1'));

            // Crea un objeto Date usando los milisegundos
            const date = new Date(milliseconds);

            // Formato para input datetime-local (AAAA-MM-DDTHH:mm)
            const formattedDate = date.toISOString().slice(0, 19);

            return formattedDate;
        }
    }
    function calcularTotalHorasEstimadas() {
        const supervEst = convertirHorasANumero(document.getElementById('Supervision_estimado').value)
        const InfraEst = convertirHorasANumero(document.getElementById('Infraestructura_estimado').value)
        const helpDeskEst =convertirHorasANumero(document.getElementById('HelpDesk_estimado').value)
        const SoporteUserEst = convertirHorasANumero(document.getElementById('SoporteUser_estimado').value)
        const ArquiEst = convertirHorasANumero(document.getElementById('Arquitectura_estimado').value)
        const ServDBAEst = convertirHorasANumero(document.getElementById('ServicioDBA_estimado').value)
        const horasEstimada =supervEst + InfraEst + helpDeskEst + SoporteUserEst + ArquiEst + ServDBAEst
        document.getElementById('TotalHoras_estimado').value = convertirNumeroAHoras(horasEstimada)
    }
    function calcularTotalHorasReales() {
        const supervReal = convertirHorasANumero(document.getElementById('Supervision_real').value)
        const InfraReal = convertirHorasANumero(document.getElementById('Infraestructura_real').value)
        const helpDeskReal = convertirHorasANumero(document.getElementById('HelpDesk_real').value)
        const SoporteUserReal = convertirHorasANumero(document.getElementById('SoporteUser_real').value)
        const ArquiReal = convertirHorasANumero(document.getElementById('Arquitectura_real').value)
        const ServDBAReal = convertirHorasANumero(document.getElementById('ServicioDBA_real').value)
        const horasReal = supervReal + InfraReal + helpDeskReal + SoporteUserReal + ArquiReal + ServDBAReal
        document.getElementById('TotalHoras_real').value = convertirNumeroAHoras(horasReal)
    }
    function obtenerPrimeraPalabra(frase) {
        // Buscar el índice del primer guion (-)
        const indiceGuion = frase.indexOf('-');
        // Si no se encuentra el guion, devolver la frase completa como la primera palabra
        if (indiceGuion === -1) {
            return "";
        }

        // Extraer la primera palabra basada en la posición del guion
        const primeraPalabra = frase.substring(0, indiceGuion);

        return primeraPalabra.trim(); // Devolver la primera palabra eliminando espacios adicionales
    }
    function cargarSubCategorias() {
        $.ajax({
            url: '/ServiceNow/ObtenerSubCategorias',
            type: "GET",
            dataType: "json",
            success: function (data) {
                listaSubcategoria = data.data
                const cateSelect = $('#Categoria').select2('data')[0].id
                const filtrarLista = listaSubcategoria.filter(x=>x.id_Categoria == cateSelect)
                let subCategoriaSelect = $('#SubCategoria').select2({
                    data: filtrarLista,
                    theme: "bootstrap"
                });
                
                console.log('termino de cargar subcategorias')
                cargarValoresIniciales()
            }
        })
        
    }
    function actualizarSubCategoriaLista() {
        var subCategoriaLista = $('#SubCategoria');
        const cateSeleccionado = $('#Categoria').select2('data')[0]
        console.log(cateSeleccionado)
        const filtrarListaSubCategoria = listaSubcategoria.filter(x => x.categoriaId == cateSeleccionado.id)
        subCategoriaLista.empty();

        subCategoriaLista.append(new Option('No Aplica', "No Aplica", true, true));
        
        filtrarListaSubCategoria.forEach(function (item) {
            subCategoriaLista.append(new Option(item.text, item.id, item.area, true, true));
        });
        console.log(subCategoriaLista)
        subCategoriaLista.val('No Aplica').trigger('change');
        document.getElementById("SubCategoriaTexto").value = $('#SubCategoria').select2('data')[0].text
    }
    function cargarDependientesAtribuidoA() {
        $.ajax({
            url: '/ServiceNow/ObtenerEquivalencias',
            type: "GET",
            dataType: "json",
            success: function (data) {
                listaAtribuidoA = data.data
                const gpoSeleccionado = $('#GrupoDeAsignacion').select2('data')[0].id
                const filtrarListaEquivalencia = listaAtribuidoA.filter(x => x.id_GpoAsignacion == gpoSeleccionado)
                $('#AtribuidoA').select2({
                    data: filtrarListaEquivalencia,
                    //templateResult: function (data) {
                    //    if (data.id == '') {
                    //        return $(`<div>&nbsp;</div>`)
                    //    }
                    //    else {
                    //        return $(`<div>${data.id}</div>`)
                    //    }

                    //},
                    //templateSelection: function (data) {
                    //    console.log(data)
                    //    return data.id
                    //},
                    theme: "bootstrap"
                });
                $('#AbiertoPor').select2({
                    data: filtrarListaEquivalencia,
                    theme: "bootstrap"
                });
                $('#ActualizadoPor').select2({
                    data: filtrarListaEquivalencia,
                    theme: "bootstrap"
                });
            }
        })
    }

    function convertirHorasANumero(e) {
        // Dividir la cadena en horas y minutos
        const partes = e.split(':');

        // Convertir las partes a números
        const horas = parseInt(partes[0], 10) || 0; // Si no se puede convertir, asumir 0 horas
        const minutos = parseInt(partes[1], 10) || 0; // Si no se puede convertir, asumir 0 minutos

        // Calcular el total de horas (sumar las horas y convertir los minutos a horas)
        const totalHoras = horas + minutos / 60;
        return totalHoras;
    }
    function convertirNumeroAHoras(numero) {
        // Obtén la parte entera y decimal del número
        var horas = Math.floor(numero);
        var minutos = Math.round((numero % 1) * 60);
        // Formatea las horas y minutos como cadena
        var horasStr = horas < 10 ? '0' + horas : horas;
        var minutosStr = minutos < 10 ? '0' + minutos : minutos;

        // Retorna la cadena en formato "HH:mm"
        return horasStr + ':' + minutosStr;
    }

    function handleInput(event) {
        // Obtener el valor actual del campo de entrada
        let inputValue = event.target.value;

        // Verificar si ya hay un ":" presente en el valor
        const tieneDosPuntos = inputValue.includes(':');
        const cantidadDosPuntos = (inputValue.match(/:/g) || []).length;
        // Filtrar los caracteres no numéricos y ':' si aún no hay un ":"
        if (cantidadDosPuntos<=1) {

            inputValue = inputValue.replace(/[^0-9:]/g, '');
        } else {
            // Si ya hay un ":", eliminar cualquier otro ":" que se intente agregar
            if (event.data == ":") {
                inputValue = inputValue.slice(0, -1)
                inputValue = inputValue.replace(/[^0-9:]/g, '');
            }
            
        }
        // Actualizar el valor del campo de entrada
        event.target.value = inputValue;
    }
    function validarHora(e) {
        const horaTexto = (e.target.value).toString()
        let [horas, minutos] = ["0","0"]
        if (horaTexto.indexOf(":") !== -1) {
            [horas, minutos] = horaTexto.split(":")
            if (horas == "") {
                horas = "0"     
            }
            if (minutos == "") {
                minutos = "0"          
            }
        }
        else {
            horas = (e.target.value).toString()
        }
        horas = horas.padStart(2, '00')
        minutos = minutos.padStart(2, '00')
        if (minutos >= 60) {
            alert("Solo se permite hasta el minuto 59")
            e.target.value = `${horas}:59`
        } else {
            e.target.value = `${horas}:${minutos}`
        }
        convertirHorasANumero(e.target.value)
        calcularFechaVencimiento()
    }
    $("#FrmAgregarLookerStudio").submit(function () {
        let mensaje = "";
        let selectAtribuidoA = $("#AtribuidoA").select2("data");
        let selectArea = document.getElementById("Area");
        
        if (selectAtribuidoA.length == 0) mensaje += "-El campo <b>'Atribuido A'</b> no puede estar vacío.<br/>";
        else if (selectAtribuidoA[0].text == ' ') mensaje += "-El campo <b>'Atribuido A'</b> no puede estar vacío.<br/>";

        if (selectArea.value == "") mensaje += "-El campo <b>'Area'</b> no puede estar vacío.<br/>";
        
        if (mensaje != "")
        {
            toastr.warning(mensaje, "Advertencia")
            return false;
        }
        else
        {
            document.getElementById("Supervision_estimadoNumero").value = Math.round(convertirHorasANumero(document.getElementById("Supervision_estimado").value) * 100) / 100
            document.getElementById("Infraestructura_estimadoNumero").value = Math.round(convertirHorasANumero(document.getElementById("Infraestructura_estimado").value) * 100) / 100
            document.getElementById("HelpDesk_estimadoNumero").value = Math.round(convertirHorasANumero(document.getElementById("HelpDesk_estimado").value) * 100) / 100
            document.getElementById("SoporteUser_estimadoNumero").value = Math.round(convertirHorasANumero(document.getElementById("SoporteUser_estimado").value) * 100) / 100
            document.getElementById("Arquitectura_estimadoNumero").value = Math.round(convertirHorasANumero(document.getElementById("Arquitectura_estimado").value) * 100) / 100
            document.getElementById("ServicioDBA_estimadoNumero").value = Math.round(convertirHorasANumero(document.getElementById("ServicioDBA_estimado").value) * 100) / 100
            document.getElementById("TotalHoras_estimadoNumero").value = Math.round(convertirHorasANumero(document.getElementById("TotalHoras_estimado").value) * 100) / 100

            document.getElementById("Supervision_realNumero").value = Math.round(convertirHorasANumero(document.getElementById("Supervision_real").value) * 100) / 100
            document.getElementById("Infraestructura_realNumero").value = Math.round(convertirHorasANumero(document.getElementById("Infraestructura_real").value) * 100) / 100
            document.getElementById("HelpDesk_realNumero").value = Math.round(convertirHorasANumero(document.getElementById("HelpDesk_real").value) * 100) / 100
            document.getElementById("SoporteUser_realNumero").value = Math.round(convertirHorasANumero(document.getElementById("SoporteUser_real").value) * 100) / 100
            document.getElementById("Arquitectura_realNumero").value = Math.round(convertirHorasANumero(document.getElementById("Arquitectura_real").value) * 100) / 100
            document.getElementById("ServicioDBA_realNumero").value = Math.round(convertirHorasANumero(document.getElementById("ServicioDBA_real").value) * 100) / 100
            document.getElementById("TotalHoras_realNumero").value = Math.round(convertirHorasANumero(document.getElementById("TotalHoras_real").value) * 100) / 100

            return true; // Continuar con el envío del formulario
        }
    });
    
</script>